1. +alt1
2. +alt2
3. +attack
4. +attack2
5. +back
6. +break
7. +camdistance
8. +camin
9. +cammousemove
10. +camout
11. +campitchdown
12. +campitchup
13. +camyawleft
14. +camyawright
15. +commandermousemove
16. +demoui2 // Bring the advanced demo player UI (demoui2) to foreground.
17. +duck
18. +forward
19. +graph
20. +grenade1
21. +grenade2
22. +jlook
23. +jump
24. +klook
25. +left
26. +lookdown
27. +lookspin
28. +lookup
29. +mat_texture_list
30. +movedown
31. +moveleft
32. +moveright
33. +moveup
34. +posedebug // Turn on pose debugger or add ents to pose debugger UI
35. +reload
36. +right
37. +score
38. +showbudget
39. +showbudget_texture
40. +showbudget_texture_global
41. +showscores
42. +showvprof
43. +sixense_left_point_gesture
44. +sixense_ratchet
45. +sixense_right_point_gesture
46. +speed
47. +strafe
48. +use
49. +vgui_drawtree
50. +voicerecord
51. +walk
52. +zoom
53. +zoom_in
54. +zoom_out
55. -alt1
56. -alt2
57. -attack
58. -attack2
59. -back
60. -break
61. -camdistance
62. -camin
63. -cammousemove
64. -camout
65. -campitchdown
66. -campitchup
67. -camyawleft
68. -camyawright
69. -commandermousemove
70. -demoui2 // Send the advanced demo player UI (demoui2) to background.
71. -duck
72. -forward
73. -graph
74. -grenade1
75. -grenade2
76. -jlook
77. -jump
78. -klook
79. -left
80. -lookdown
81. -lookspin
82. -lookup
83. -mat_texture_list
84. -movedown
85. -moveleft
86. -moveright
87. -moveup
88. -posedebug // Turn off pose debugger or hide ents from pose debugger UI
89. -reload
90. -right
91. -score
92. -showbudget
93. -showbudget_texture
94. -showbudget_texture_global
95. -showscores
96. -showvprof
97. -sixense_left_point_gesture
98. -sixense_ratchet
99. -sixense_right_point_gesture
100. -speed
101. -strafe
102. -use
103. -vgui_drawtree
104. -voicerecord
105. -walk
106. -zoom
107. -zoom_in
108. -zoom_out
109. achievement_debug "0" // Turn on achievement debug msgs.
110. achievement_disable "0" // Turn off achievements.
111. addip // Add an IP address to the ban list.
112. adsp_debug "0"
113. ainet_generate_report // Generate a report to the console.
114. ainet_generate_report_only // Generate a report to the console.
115. air_density // Changes the density of air for drag computations.
116. ai_clear_bad_links // Clears bits set on nav links indicating link is unus
able
117. ai_debug_los "0" // itl
118. ai_debug_node_connect // Debug the attempted connection between two nodes
119. ai_debug_shoot_positions "0"
120. ai_disable // Bi-passes all AI logic routines and puts all NPCs into their
 idle animations. Can be used to get NPCs out of your way and to t
121. ai_drawbattlelines "0"
122. ai_drop_hint // Drop an ai_hint at the players current eye position.
123. ai_dump_hints
124. ai_hull // Controls which connections are shown when ai_show_hull or ai_sh
ow_connect commands are used Arguments: NPC name or classname,
125. ai_next_hull // Cycles through the various hull sizes. Currently selected
hull size is written to the screen. Controls which connections are
126. ai_nodes // Toggles node display. First call displays the nodes for the gi
ven network as green objects. Second call displays the nodes a
127. ai_report_task_timings_on_limit "0"
128. ai_resume // If NPC is stepping through tasks (see ai_step ) will resume n
ormal processing.
129. ai_setenabled // Like ai_disable but you manually specify the state (with
a 0 or 1) instead of toggling it.
130. ai_set_move_height_epsilon // Set how high AI bumps up ground walkers when
 checking steps
131. ai_show_connect // Displays the allowed connections between each node for
the currently selected hull type. Hulls are color code as follows: Gre
132. ai_show_connect_crawl // Displays the allowed connections between each nod
e for the currently selected hull type. Hulls are color code as follows: Gre
133. ai_show_connect_fly // Displays the allowed connections between each node
for the currently selected hull type. Hulls are color code as follows: Gre
134. ai_show_connect_jump // Displays the allowed connections between each node
 for the currently selected hull type. Hulls are color code as follows: Gre
135. ai_show_graph_connect // Toggles graph connection display for the node tha
t the player is looking at. Nodes that are connected to the selected node by
136. ai_show_grid // Draw a grid on the floor where looking.
137. ai_show_hints // Displays all hints as small boxes Blue - hint is availabl
e for use Red - hint is currently being used by an NPC Orange -
138. ai_show_hull // Displays the allowed hulls between each node for the curre
ntly selected hull type. Hulls are color code as follows: Green -
139. ai_show_node // Highlight the specified node
140. ai_show_visibility // Toggles visibility display for the node that the pla
yer is looking at. Nodes that are visible from the selected node will be d
141. ai_step // use ai_step again. To resume processing no
142. ai_test_los // Test AI LOS from the players POV
143. ai_think_limit_label "0"
144. ai_vehicle_avoidance "1"
145. alias // Alias a command.
146. ammo_338mag_max "30"
147. ammo_357sig_max "52"
148. ammo_45acp_max "100"
149. ammo_50AE_max "35"
150. ammo_556mm_box_max "200"
151. ammo_556mm_max "90"
152. ammo_57mm_max "100"
153. ammo_762mm_max "90"
154. ammo_9mm_max "120"
155. ammo_buckshot_max "32"
156. ammo_decoy_max "1"
157. ammo_flashbang_max "1"
158. ammo_hegrenade_max "1"
159. ammo_molotov_max "1"
160. ammo_smokegrenade_max "1"
161. askconnect_accept // Accept a redirect request by the server.
162. asw_engine_finished_building_map // Notify engine that weve finished build
ing a map
163. async_resume
164. async_suspend
165. audit_save_in_memory // Audit the memory usage and files in the save-to-me
mory system
166. autobuy // Attempt to purchase items with the order listed in cl_autobuy
167. autosave // Autosave
168. autosavedangerous // AutoSaveDangerous
169. autosavedangerousissafe
170. banid // Add a user ID to the ban list.
171. banip // Add an IP address to the ban list.
172. benchframe // Takes a snapshot of a particular frame in a time demo.
173. bench_end // Ends gathering of info.
174. bench_showstatsdialog // Shows a dialog displaying the most recent benchma
rk results.
175. bench_start // Starts gathering of info. Arguments: filename to write resu
lts into
176. bench_upload // Uploads most recent benchmark stats to the Valve servers.
177. bind // Bind a key.
178. BindToggle // Performs a bind <key> increment var <cvar> 0 1 1
179. bind_osx // Bind a key for OSX only.
180. bink_dump_precached_movies // Dumps information about all precached Bink m
ovies
181. blackbox_dump // Dump the contents of the blackbox
182. blackbox_record // Record an entry into the blackbox
183. bot_add // bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching
 the given criteria.
184. bot_add_ct // bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terro
rist bot matching the given criteria.
185. bot_add_t // bot_add_t <type> <difficulty> <name> - Adds a terrorist bot m
atching the given criteria.
186. bot_all_weapons // Allows the bots to use all weapons
187. bot_autodifficulty_threshold "0" // Percentage of Contribution Score that
a bot must be outside of to change its difficulty (i.e. Contrib Score in the ran
ge [human
188. bot_chatter "0" // or normal.
189. bot_crouch "0"
190. bot_debug "0" // For internal testing purposes.
191. bot_debug_target "0" // For internal testing purposes.
192. bot_defer_to_human "0" // the bots will not do the scenario tasks.
193. bot_difficulty "1" // 3=expert.
194. bot_dont_shoot "0" // bots will not fire weapons (for debugging).
195. bot_freeze "0"
196. bot_goto_mark // Sends a bot to the marked nav area (useful for testing na
vigation meshes)
197. bot_goto_selected // Sends a bot to the selected nav area (useful for test
ing navigation meshes)
198. bot_join_after_player "1" // bots wait until a player joins before enterin
g the game.
199. bot_join_team "0" // or CT.
200. bot_kick // matching the given criteria.
201. bot_kill // matching the given criteria.
202. bot_knives_only // Restricts the bots to only using knives
203. bot_loadout "0" // bots are given these items at round start
204. bot_mimic "0"
205. bot_mimic_yaw_offset "180"
206. bot_pistols_only // Restricts the bots to only using pistols
207. bot_place // bot_place - Places a bot from the map at where the local play
er is pointing.
208. bot_quota "0" // Determines the total number of bots in the game.
209. bot_quota_mode "0" // Determines the type of quota. Allowed values: normal
, fill, and match. If fill, the server will adjust bots to keep N p
210. bot_randombuy "0" // should bots ignore their prefered weapons and just bu
y weapons at random?
211. bot_show_battlefront "0" // Show areas where rushing players will initiall
y meet.
212. bot_show_nav "0" // For internal testing purposes.
213. bot_show_occupy_time "0" // Show when each nav area can first be reached b
y each team.
214. bot_snipers_only // Restricts the bots to only using sniper rifles
215. bot_stop "0" // immediately stops all bot processing.
216. bot_stop_control // Release control of a bot.
217. bot_take_control // Take control of a bot.
218. bot_traceview "0" // For internal testing purposes.
219. bot_zombie "0" // bots will stay in idle mode and not attack.
220. box // Draw a debug box.
221. buddha // Toggle. Player takes damage but wont die. (Shows red cross when
health is zero)
222. budget_averages_window "30" // number of frames to look at when figuring o
ut average frametimes
223. budget_background_alpha "128" // how translucent the budget panel is
224. budget_bargraph_background_alpha "128" // how translucent the budget panel
 is
225. budget_bargraph_range_ms "16" // budget bargraph range in milliseconds
226. budget_history_numsamplesvisible "100" // number of samples to draw in the
 budget history window. The lower the better as far as rendering overhead of the
 budget panel
227. budget_history_range_ms "66" // budget history range in milliseconds
228. budget_panel_bottom_of_history_fraction "0" // number between 0 and 1
229. budget_panel_height "384" // height in pixels of the budget panel
230. budget_panel_width "512" // width in pixels of the budget panel
231. budget_panel_x "0" // number of pixels from the left side of the game scre
en to draw the budget panel
232. budget_panel_y "50" // number of pixels from the top side of the game scre
en to draw the budget panel
233. budget_peaks_window "30" // number of frames to look at when figuring out
peak frametimes
234. budget_show_averages "0" // enable/disable averages in the budget panel
235. budget_show_history "0" // turn history graph off and on. . good to turn o
ff on low end
236. budget_show_peaks "1" // enable/disable peaks in the budget panel
237. budget_toggle_group // Turn a budget group on/off
238. bug // Show the bug reporting UI.
239. bugreporter_uploadasync "0" // Upload attachments asynchronously
240. bugreporter_username "0" // Username to use for bugreporter
241. bug_swap // Automatically swaps the current weapon for the bug bait and ba
ck again.
242. buildcubemaps // Rebuild cubemaps.
243. buildmodelforworld // buildmodelforworld
244. buymenu // Show or hide main buy menu
245. cache_print // cache_print [section] Print out contents of cache memory.
246. cache_print_lru // cache_print_lru [section] Print out contents of cache m
emory.
247. cache_print_summary // cache_print_summary [section] Print out a summary c
ontents of cache memory.
248. camortho // Switch to orthographic camera.
249. cam_collision "1" // an attempt is made to keep the camera from passing th
ough walls.
250. cam_command // Tells camera to change modes
251. cam_idealdelta "4" // Controls the speed when matching offset to ideal ang
les in thirdperson view
252. cam_idealdist "150"
253. cam_idealdistright "0"
254. cam_idealdistup "0"
255. cam_ideallag "4" // Amount of lag used when matching offset to ideal angle
s in thirdperson view
256. cam_idealpitch "0"
257. cam_idealyaw "0"
258. cam_showangles "0" // print viewangles/idealangles/cameraoffsets to the co
nsole.
259. cam_snapto "0"
260. cancelselect
261. cast_hull // Tests hull collision detection
262. cast_ray // Tests collision detection
263. cc_emit // Emits a closed caption
264. cc_findsound // Searches for soundname which emits specified text.
265. cc_flush // Flushes asyncd captions.
266. cc_lang "0" // Current close caption language (emtpy = use game UI languag
e)
267. cc_linger_time "1" // Close caption linger time.
268. cc_predisplay_time "0" // Close caption delay before showing caption.
269. cc_random // Emits a random caption
270. cc_showblocks // Toggles showing which blocks are pending/loaded async.
271. cc_subtitles "0" // wont help hearing impaired players).
272. centerview
273. changelevel // Change server to the specified map
274. changelevel2 // Transition to the specified map in single player
275. chet_debug_idle "0" // many debug prints to help track down the TLK_IDLE i
ssue. Set two for super verbose info
276. ch_createairboat // Spawn airboat in front of the player.
277. ch_createjeep // Spawn jeep in front of the player.
278. clear // Clear all console output.
279. clear_anim_cache // freeing the memory (until the next time a streaming an
imblock is requested).
280. clear_debug_overlays // clears debug overlays
281. clientport "27005" // Host game client port
282. closecaption "0" // Enable close captioning.
283. cl_allowdownload "0" // Client downloads customization files
284. cl_allowupload "0" // Client uploads customization files
285. cl_animationinfo // Hud element to examine.
286. cl_autobuy "0" // The order in which autobuy will attempt to purchase item
s
287. cl_autohelp "0" // Auto-help
288. cl_autowepswitch "0" // Automatically switch to picked up weapons (if more
 powerful)
289. cl_backspeed "450"
290. cl_bob "0"
291. cl_bobamt_lat "0"
292. cl_bobamt_vert "0"
293. cl_bobcycle "1"
294. cl_bobup "0"
295. cl_bob_lower_amt "21"
296. cl_brushfastpath "1"
297. cl_buy_favorite // Purchase a favorite weapon/equipment loadout
298. cl_buy_favorite_nowarn "0" // Skips the error prompt when saving an invali
d buy favorite
299. cl_buy_favorite_quiet "0" // Skips the prompt when saving a buy favorite i
n the buy menu
300. cl_buy_favorite_reset // Reset favorite loadouts to the default
301. cl_buy_favorite_set // Saves the current loadout as a favorite
302. cl_camera_follow_bone_index "-2" // Index of the bone to follow. -2 == dis
abled. -1 == root bone. 0+ is bone index.
303. cl_chatfilters "63" // Stores the chat filter settings
304. cl_class "0" // Default class when joining a game
305. cl_clearhinthistory // Clear memory of client side hints displayed to the
player.
306. cl_clockdrift_max_ms "150" // Maximum number of milliseconds the clock is
allowed to drift before the client snaps its clock to the servers.
307. cl_clockdrift_max_ms_threadmode "0" // Maximum number of milliseconds the
clock is allowed to drift before the client snaps its clock to the servers.
308. cl_clock_correction "1" // Enable/disable clock correction on the client.
309. cl_clock_correction_adjustment_max_amount "200" // Sets the maximum number
 of milliseconds per second it is allowed to correct the client clock. It will o
nly correct this amount
310. cl_clock_correction_adjustment_max_offset "90" // it moves towards apply
311. cl_clock_correction_adjustment_min_offset "10" // then no clock correction
 is applied.
312. cl_clock_correction_force_server_tick "999" // Force clock correction to m
atch the server tick + this offset (-999 disables it).
313. cl_clock_showdebuginfo "0" // Show debugging info about the clock drift.
314. cl_cmdrate "66" // Max number of command packets sent to server per second
315. cl_crosshairalpha "255"
316. cl_crosshaircolor "1" // Set crosshair color as defined in game_options.36
0.txt
317. cl_crosshaircolor_b "250"
318. cl_crosshaircolor_g "250"
319. cl_crosshaircolor_r "50"
320. cl_crosshairdot "0"
321. cl_crosshairscale "768" // Crosshair scaling factor (deprecated)
322. cl_crosshairsize "7"
323. cl_crosshairthickness "0"
324. cl_crosshairusealpha "1"
325. cl_debugrumble "0" // Turn on rumble debugging spew
326. cl_detail_avoid_force "0" // percentage of the width of the detail sprite
)
327. cl_detail_avoid_radius "64" // radius around detail sprite to avoid player
s
328. cl_detail_avoid_recover_speed "0" // how fast to recover position after av
oiding players
329. cl_detail_max_sway "5" // Amplitude of the detail prop sway
330. cl_detail_multiplier "1" // extra details to create
331. cl_disablefreezecam "1" // Turn on/off freezecam on client
332. cl_disable_ragdolls "0"
333. cl_downloadfilter "0" // nosounds)
334. cl_drawhud "1" // Enable the rendering of the hud
335. cl_drawleaf "-1"
336. cl_drawmaterial "0" // Draw a particular material over the frame
337. cl_drawshadowtexture "0"
338. cl_dumpplayer // Dumps info about a player
339. cl_dumpsplithacks // Dump split screen workarounds.
340. cl_dump_particle_stats // dump particle profiling info to particle_profile
.csv
341. cl_dynamiccrosshair "0"
342. cl_enable_weapon_voiceover "1" // Enable/Disable weapon name voice over.
343. cl_entityreport "0" // draw entity states to console
344. cl_ent_absbox // Displays the clients absbox for the entity under the cros
shair.
345. cl_ent_bbox // Displays the clients bounding box for the entity under the
crosshair.
346. cl_ent_rbox // Displays the clients render box for the entity under the cr
osshair.
347. cl_extrapolate "1" // Enable/disable extrapolation if interpolation histor
y runs out.
348. cl_extrapolate_amount "0" // Set how many seconds the client will extrapol
ate entities for.
349. cl_fastdetailsprites "1" // whether to use new detail sprite system
350. cl_find_ent // Find and list all client entities with classnames that cont
ain the specified substring. Format: cl_find_ent <substring>
351. cl_find_ent_index // Display data for clientside entity matching specified
 index. Format: cl_find_ent_index <index>
352. cl_fixedcrosshairgap "3" // How big to make the gap between the pips in th
e fixed crosshair
353. cl_flushentitypacket "0" // For debugging. Force the engine to flush an en
tity packet.
354. cl_forcepreload "1" // Whether we should force preloading.
355. cl_forwardspeed "450"
356. cl_fullupdate // Forces the server to send a full update packet
357. cl_game_mode_convars // Display the values of the convars for the current
game_mode.
358. cl_idealpitchscale "0"
359. cl_ignorepackets "0" // Force client to ignore packets (for debugging).
360. cl_interp "0" // Sets the interpolation amount (bounded on low side by ser
ver interp ratio settings).
361. cl_interp_ratio "2" // Sets the interpolation amount (final amount is cl_i
nterp_ratio / cl_updaterate).
362. cl_jiggle_bone_debug "0" // Display physics-based jiggle bone debugging in
formation
363. cl_jiggle_bone_debug_pitch_constraints "0" // Display physics-based jiggle
 bone debugging information
364. cl_jiggle_bone_debug_yaw_constraints "0" // Display physics-based jiggle b
one debugging information
365. cl_jiggle_bone_invert "0"
366. cl_lagcompensation "1" // Perform server side lag compensation of weapon f
iring events.
367. cl_language "0" // Language (from Steam API)
368. cl_leafsystemvis "0"
369. cl_leveloverview "0"
370. cl_leveloverviewmarker "0"
371. cl_logofile "0" // Spraypoint logo decal.
372. cl_maxrenderable_dist "3000" // Max distance from the camera at which thin
gs will be rendered
373. cl_minimal_rtt_shadows "1"
374. cl_mouseenable "0"
375. cl_mouselook "1" // 0 for keyboard look. Cannot be set while connected to
a server.
376. cl_observercrosshair "1"
377. cl_overdraw_test "0"
378. cl_panelanimation // Shows panel animation variables: <panelname | blank f
or all panels>.
379. cl_particles_dumplist // optional name substring.
380. cl_particles_dump_effects
381. cl_particles_show_bbox "0"
382. cl_particles_show_controlpoints "0"
383. cl_particle_retire_cost "0"
384. cl_pclass "0" // Dump entity by prediction classname.
385. cl_pdump "-1" // Dump info about this entity to screen.
386. cl_phys_show_active "0"
387. cl_phys_timescale "1" // Sets the scale of time for client-side physics (r
agdolls)
388. cl_pitchdown "89"
389. cl_pitchup "89"
390. cl_playerspraydisable "1" // Disable player sprays.
391. cl_portal_use_new_dissolve "1" // Use new dissolve effect
392. cl_precacheinfo // Show precache info (client).
393. cl_predict "1" // Perform client side prediction.
394. cl_predictioncopy_describe // Describe datamap_t for entindex
395. cl_predictionlist "0" // Show which entities are predicting
396. cl_predictweapons "1" // Perform client side prediction of weapon effects.
397. cl_pred_track // for field fieldname.
398. cl_ragdoll_gravity "600" // Sets the gravity client-side ragdolls
399. cl_rebuy "0" // The order in which rebuy will attempt to repurchase items
400. cl_reloadpostprocessparams
401. cl_removedecals // Remove the decals from the entity under the crosshair.
402. cl_report_soundpatch // reports client-side sound patch count
403. cl_resend "6" // Delay in seconds before the client will resend the connec
t attempt
404. cl_resend_timeout "60" // Total time allowed for the client to resend the
connect attempt
405. cl_righthand "1" // Use right-handed view models.
406. cl_rumblescale "0" // Scale sensitivity of rumble effects (0 to 1.0)
407. cl_scalecrosshair "1" // Enable crosshair scaling (deprecated)
408. cl_shadowtextureoverlaysize "256"
409. cl_showanimstate_activities "0" // Show activities in the (client) animati
on state display.
410. cl_showents // Dump entity list to console.
411. cl_showerror "0" // 2 for above plus detailed field deltas.
412. cl_showevents "0" // Print event firing info in the console
413. cl_showfps "0" // +10 = detailed )
414. cl_showhelp "0" // Set to 0 to not show on-screen help
415. cl_showloadout "1" // Toggles display of current loadout.
416. cl_showncustomtabhelp "0"
417. cl_showpluginmessages "0" // Allow plugins to display messages to you
418. cl_showpos "0" // Draw current position at top of screen
419. cl_show_scaleform_achievement_popups "1"
420. cl_sidespeed "450"
421. cl_skipfastpath "0" // Set to 1 to stop all models that go through the mod
el fast path from rendering
422. cl_skipslowpath "0" // Set to 1 to skip any models that dont go through th
e model fast path
423. cl_soundemitter_flush // Flushes the sounds.txt system (server only)
424. cl_soundemitter_reload // Flushes the sounds.txt system
425. cl_soundfile "0" // Jingle sound file.
426. cl_soundscape_flush // Flushes the client side soundscapes
427. cl_soundscape_printdebuginfo // print soundscapes
428. cl_spec_mode "4" // Saves the last viewed spectator mode for use next time
 we start to spectate
429. cl_sporeclipdistance "512"
430. cl_ss_origin // print origin in script format
431. cl_steamscreenshots // Enable/disable saving screenshots to Steam
432. cl_sunlight_ortho_size "0" // Set to values greater than 0 for ortho view
render projections.
433. cl_sun_decay_rate "0"
434. cl_team "0" // Default team when joining a game
435. cl_timeout "35" // the client will disconnect itself
436. cl_tree_sway_dir // sets tree sway wind direction and strength
437. cl_updaterate "66" // Number of packets per second of updates you are requ
esting from the server
438. cl_updatevisibility // Updates visibility bits.
439. cl_upspeed "320"
440. cl_use_new_headbob "1"
441. cl_view // Set the view entity index.
442. cl_viewmodel_shift_left_amt "1"
443. cl_viewmodel_shift_right_amt "0"
444. cl_winddir "0" // Weather effects wind direction angle
445. cl_windspeed "0" // Weather effects wind speed scalar
446. cl_wpn_sway_scale "1"
447. cmd // Forward command to server.
448. cmd1 // sets userinfo string for split screen player in slot 1
449. cmd2 // sets userinfo string for split screen player in slot 2
450. cmd3 // sets userinfo string for split screen player in slot 3
451. cmd4 // sets userinfo string for split screen player in slot 4
452. collision_test // Tests collision system
453. colorcorrectionui // Show/hide the color correction tools UI.
454. commentary_cvarsnotchanging
455. commentary_finishnode
456. commentary_firstrun "0"
457. commentary_showmodelviewer // Display the commentary model viewer. Usage:
commentary_showmodelviewer <model name> <optional attached model name>
458. commentary_testfirstrun
459. condump // dump the text currently in the console to condumpXX.log
460. connect // Connect to specified server.
461. con_enable "1" // Allows the console to be activated.
462. crash // Cause the engine to crash (Debug!!)
463. CreatePredictionError // Create a prediction error
464. create_flashlight
465. creditsdone
466. crosshair "1"
467. cs_make_vip // Marks a player as the VIP
468. cs_ShowStateTransitions "-2" // cs_ShowStateTransitions <ent index or -1 f
or all>. Show player state transitions.
469. CS_WarnFriendlyDamageInterval "1" // Defines how frequently the server not
ifies clients that a player damaged a friend
470. cursortimeout "60" // Seconds before mouse cursor hides itself due to inac
tivity
471. cvarlist // Show the list of convars/concommands.
472. c_maxdistance "200"
473. c_maxpitch "90"
474. c_maxyaw "135"
475. c_mindistance "30"
476. c_minpitch "0"
477. c_minyaw "-135"
478. c_orthoheight "100"
479. c_orthowidth "100"
480. c_thirdpersonshoulder "0"
481. c_thirdpersonshoulderaimdist "120"
482. c_thirdpersonshoulderdist "40"
483. c_thirdpersonshoulderheight "5"
484. c_thirdpersonshoulderoffset "20"
485. dbghist_addline // Add a line to the debug history. Format: <category id>
<line>
486. dbghist_dump // Dump the debug history to the console. Format: <category i
d> Categories: 0: Entity I/O 1: AI Decisions 2: Sc
487. dbg_testdynamicwearablegib
488. debugsystemui // Show/hide the debug system UI.
489. debug_visibility_monitor "0"
490. default_fov "90"
491. demolist // Print demo sequence list.
492. demos // Demo demo file sequence.
493. demoui // Show/hide the demo player UI.
494. demoui2 // Show/hide the advanced demo player UI (demoui2).
495. demo_gototick // Skips to a tick in demo.
496. demo_pause // Pauses demo playback.
497. demo_recordcommands "1" // Record commands typed at console into .dem file
s.
498. demo_resume // Resumes demo playback.
499. demo_timescale // Sets demo replay speed.
500. demo_togglepause // Toggles demo playback.
501. developer "0" // Set developer message level
502. devshots_nextmap // Used by the devshots system to go to the next map in t
he devshots maplist.
503. devshots_screenshot // use the screenshot command instead.
504. differences // Show all convars which are not at their default values.
505. disable_static_prop_loading "0" // static props wont be loaded
506. disconnect // Disconnect game from server.
507. display_elapsedtime // Displays how much time has elapsed since the game s
tarted
508. display_game_events "0"
509. disp_list_all_collideable // List all collideable displacements
510. dlight_debug // Creates a dlight in front of the player
511. drawcross // Draws a cross at the given location Arguments: x y z
512. drawline // Draws line between two 3D Points. Green if no collision Red is
 collides with something Arguments: x1 y1 z1 x2 y2 z2
513. drawradar // Draws HUD radar
514. dsp_dist_max "1440"
515. dsp_dist_min "0"
516. dsp_enhance_stereo "0"
517. dsp_off "0"
518. dsp_player "0"
519. dsp_reload
520. dsp_slow_cpu "1"
521. dsp_volume "0"
522. dti_flush // Write out the datatable instrumentation files (you must run w
ith -dti for this to work).
523. dumpentityfactories // Lists all entity factory names.
524. dumpeventqueue // Dump the contents of the Entity I/O event queue to the c
onsole.
525. dumpgamestringtable // Dump the contents of the game string table to the c
onsole.
526. dumpstringtables // Print string tables to console.
527. dump_entity_sizes // Print sizeof(entclass)
528. dump_globals // Dump all global entities/states
529. dump_particlemanifest // Dump the list of particles loaded.
530. echo // Echo text to console.
531. editdemo // Edit a recorded demo file (.dem ).
532. editor_toggle // Disables the simulation and returns focus to the editor
533. enable_debug_overlays "1" // Enable rendering of debug overlays
534. enable_skeleton_draw "0" // Render skeletons in wireframe
535. endmovie // Stop recording movie frames.
536. endround // End the current round.
537. english "1" // running the english language set of assets.
538. ent_absbox // Displays the total bounding box for the given entity(s) in g
reen. Some entites will also display entity specific overlays. Ar
539. ent_attachments // Displays the attachment points on an entity. Arguments:
 {entity_name} / {class_name} / no argument picks what player is loo
540. ent_autoaim // Displays the entitys autoaim radius. Arguments: {entity_nam
e} / {class_name} / no argument picks what player is looking at
541. ent_bbox // Displays the movement bounding box for the given entity(ies) i
n orange. Some entites will also display entity specific overlay
542. ent_cancelpendingentfires // Cancels all ent_fire created outputs that are
 currently waiting for their delay to expire.
543. ent_create // Creates an entity of the given type where the player is look
ing.
544. ent_dump // Usage: ent_dump <entity name>
545. ent_fire // Usage: ent_fire <target> [action] [value] [delay]
546. ent_info // Usage: ent_info <class name>
547. ent_keyvalue // Applies the comma delimited key=value pairs to the entity
with the given Hammer ID. Format: ent_keyvalue <entity id> <key1>=<v
548. ent_messages // Toggles input/output message display for the selected enti
ty(ies). The name of the entity will be displayed as well as any mes
549. ent_messages_draw "0" // Visualizes all entity input/output activity.
550. ent_name
551. ent_orient // only orients target entitys YAW. Use the allangles opt
552. ent_pause // Toggles pausing of input/output message processing for entiti
es. When turned on processing of all message will stop. Any mess
553. ent_pivot // Displays the pivot for the given entity(ies). (y=up=green, z=
forward=blue, x=left=red). Arguments: {entity_name} / {class
554. ent_rbox // Displays the total bounding box for the given entity(s) in gre
en. Some entites will also display entity specific overlays. Ar
555. ent_remove // Removes the given entity(s) Arguments: {entity_name} / {clas
s_name} / no argument picks what player is looking at
556. ent_remove_all // Removes all entities of the specified type Arguments: {e
ntity_name} / {class_name}
557. ent_rotate // Rotates an entity by a specified # of degrees
558. ent_script_dump // Dumps the names and values of this entitys script scope
 to the console Arguments: {entity_name} / {class_name} / no argume
559. ent_setang // Set entity angles
560. ent_setname // Sets the targetname of the given entity(s) Arguments: {new
entity name} {entity_name} / {class_name} / no argument picks wh
561. ent_setpos // Move entity to position
562. ent_show_response_criteria // an entitys current criteria set used to sele
ct responses. Arguments: {entity_name} / {class_name} /
563. ent_step // When ent_pause is set this will step through one waiting input
 / output message at a time.
564. ent_teleport // Teleport the specified entity to where the player is looki
ng. Format: ent_teleport <entity name>
565. ent_text // Displays text debugging information about the given entity(ies
) on top of the entity (See Overlay Text) Arguments: {entity_
566. ent_viewoffset // Displays the eye position for the given entity(ies) in r
ed. Arguments: {entity_name} / {class_name} / no argument picks wha
567. envmap
568. escape // Escape key pressed.
569. exec // Execute script file.
570. execifexists // Execute script file if file exists.
571. exit // Exit the engine.
572. explode // Kills the player with explosive damage
573. explodevector // Kills a player applying an explosive force. Usage: explod
evector <player> <x value> <y value> <z value>
574. fadein // fadein {time r g b}: Fades the screen in from black or from the
specified color over the given number of seconds.
575. fadeout // fadeout {time r g b}: Fades the screen to black or to the speci
fied color over the given number of seconds.
576. ff_damage_reduction_bullets "0" // How much to reduce damage done to teamm
ates when shot. Range is from 0 - 1 (with 1 being damage equal to what is done t
o an en
577. ff_damage_reduction_grenade "0" // How much to reduce damage done to teamm
ates by a thrown grenade. Range is from 0 - 1 (with 1 being damage equal to what
 is don
578. ff_damage_reduction_grenade_self "1" // How much to damage a player does t
o himself with his own grenade. Range is from 0 - 1 (with 1 being damage equal t
o what is do
579. ff_damage_reduction_other "0" // How much to reduce damage done to teammat
es by things other than bullets and grenades. Range is from 0 - 1 (with 1 being
damag
580. find // Find concommands with the specified string in their name/help text
.
581. findflags // Find concommands by flags.
582. find_ent // Find and list all entities with classnames or targetnames that
 contain the specified substring. Format: find_ent <substring>
583. find_ent_index // Display data for entity matching specified index. Format
: find_ent_index <index>
584. firetarget
585. firstperson // Switch to firstperson camera.
586. fish_debug "0" // Show debug info for fish
587. fish_dormant "0" // Turns off interactive fish behavior. Fish become immob
ile and unresponsive.
588. flush // Flush unlocked cache memory.
589. flush_locked // Flush unlocked and locked cache memory.
590. fogui // Show/hide fog control UI.
591. fog_color "-1"
592. fog_colorskybox "-1"
593. fog_enable "1"
594. fog_enableskybox "1"
595. fog_enable_water_fog "1"
596. fog_end "-1"
597. fog_endskybox "-1"
598. fog_hdrcolorscale "-1"
599. fog_hdrcolorscaleskybox "-1"
600. fog_maxdensity "-1"
601. fog_maxdensityskybox "-1"
602. fog_override "0" // Overrides the maps fog settings (-1 populates fog_ var
s with maps values)
603. fog_start "-1"
604. fog_startskybox "-1"
605. forcebind // Bind a command to an available key. (forcebind command opt:su
ggestedKey)
606. force_audio_english "0" // Keeps track of whether were forcing english in
a localized language.
607. force_centerview
608. foundry_engine_get_mouse_control // Give the engine control of the mouse.
609. foundry_engine_release_mouse_control // Give the control of the mouse back
 to Hammer.
610. foundry_select_entity // Select the entity under the crosshair or select e
ntities with the specified name.
611. foundry_sync_hammer_view // Move Hammers 3D view to the same position as t
he engines 3D view.
612. foundry_update_entity // Updates the entitys position/angles when in edit
mode
613. fps_screenshot_frequency "10" // While the fps is below the threshold we w
ill dump a screen shot this often in seconds (i.e. 10 = screen shot every 10 sec
onds w
614. fps_screenshot_threshold "-1" // Dump a screenshot when the FPS drops belo
w the given value.
615. fs_clear_open_duplicate_times // Clear the list of files that have been op
ened.
616. fs_dump_open_duplicate_times // Set fs_report_long_reads 1 before loading
to use this. Prints a list of files that were opened more than once and ~how lon
g was
617. fs_fios_cancel_prefetches // Cancels all the prefetches in progress.
618. fs_fios_flush_cache // Flushes the FIOS HDD cache.
619. fs_fios_prefetch_file // Prefetches a file: </PS3_GAME/USRDIR/filename.bin
>. The preftech is medium priority and persistent.
620. fs_fios_prefetch_file_in_pack // Prefetches a file in a pack: <portal2/mod
els/container_ride/fineDebris_part5.ani>. The preftech is medium priority and no
n-pers
621. fs_fios_print_prefetches // Displays all the prefetches currently in progr
ess.
622. fs_printopenfiles // Show all files currently opened by the engine.
623. fs_syncdvddevcache // Force the 360 to get updated files that are in your
p4 changelist(s) from the host PC when running with -dvddev.
624. fs_warning_level // Set the filesystem warning level.
625. func_break_max_pieces "15"
626. fx_new_sparks "1" // Use new style sparks.
627. g15_dumpplayer // Spew player data.
628. g15_reload // Reloads the Logitech G-15 Keyboard configs.
629. g15_update_msec "250" // Logitech G-15 Keyboard update interval.
630. gameinstructor_dump_open_lessons // Gives a list of all currently open les
sons.
631. gameinstructor_enable "0" // Display in game lessons that teach new player
s.
632. gameinstructor_find_errors "0" // Set to 1 and the game instructor will ru
n EVERY scripted command to uncover errors.
633. gameinstructor_reload_lessons // Shuts down all open lessons and reloads t
hem from the script file.
634. gameinstructor_reset_counts // Resets all display and success counts to ze
ro.
635. gameinstructor_save_restore_lessons "1" // Set to 0 to disable save/load o
f open lesson opportunities in single player.
636. gameinstructor_verbose "0" // Set to 1 for standard debugging or 2 (in com
bo with gameinstructor_verbose_lesson) to show update actions.
637. gameinstructor_verbose_lesson "0" // Display more verbose information for
lessons have this name.
638. gamemenucommand // Issue game menu command.
639. gamepadslot1
640. gamepadslot2
641. gamepadslot3
642. gamepadslot4
643. gamepadslot5
644. gamepadslot6
645. gameui_activate // Shows the game UI
646. gameui_allowescape // Escape key allowed to hide game UI
647. gameui_allowescapetoshow // Escape key allowed to show game UI
648. gameui_hide // Hides the game UI
649. gameui_preventescape // Escape key doesnt hide game UI
650. gameui_preventescapetoshow // Escape key doesnt show game UI
651. getpos // dump position and angles to the console
652. getpos_exact // dump origin and angles to the console
653. give // Give item to player. Arguments: <item_name>
654. givecurrentammo // Give a supply of ammo for current weapon..
655. global_event_log_enabled "0" // Enables the global event log system
656. global_set // 2 = DEAD).
657. glow_outline_effect_enable "1" // Enable entity outline glow effects.
658. glow_outline_width "6" // Width of glow outline effect in screen space.
659. gl_clear_randomcolor "0" // Clear the back buffer to random colors every f
rame. Helps spot open seams in geometry.
660. god // Toggle. Player becomes invulnerable.
661. gods // Toggle. All players become invulnerable.
662. groundlist // Display ground entity list <index>
663. g_debug_angularsensor "0"
664. g_debug_constraint_sounds "0" // Enable debug printing about constraint so
unds.
665. g_debug_ragdoll_removal "0"
666. g_debug_ragdoll_visualize "0"
667. g_debug_trackpather "0"
668. g_debug_vehiclebase "0"
669. g_debug_vehicledriver "0"
670. g_debug_vehicleexit "0"
671. g_debug_vehiclesound "0"
672. g_jeepexitspeed "100"
673. hammer_update_entity // Updates the entitys position/angles when in edit m
ode
674. hammer_update_safe_entities // Updates entities in the map that can safely
 be updated (dont have parents or are affected by constraints). Also excludes en
tit
675. heartbeat // Force heartbeat of master servers
676. help // Find help about a convar/concommand.
677. hideconsole // Hide the console.
678. hidehud "0"
679. hidepanel // Hides a viewport panel <name>
680. hideradar // Hides HUD radar
681. hidescores // Forcibly hide score panel
682. hide_main_menu // Hide the main menu
683. hide_sf_main_menu // Hide the Scaleform main menu
684. hostage_debug "0" // Show hostage AI debug information
685. hostfile "0" // The HOST file to load.
686. hostip "-1062731136.000" // Host game server ip
687. hostname "0" // Hostname for server.
688. hostport "27015" // Host game server port
689. host_flush_threshold "12" // Memory threshold below which the host should
flush caches between server instances
690. host_map "0" // Current map name.
691. host_reset_config // reset config (for testing) with param as splitscreen
index.
692. host_runofftime // Run off some time without rendering/updating sounds
693. host_sleep "0" // Force the host to sleep a certain number of milliseconds
 each frame.
694. host_timescale "1" // Prescale the clock by this amount.
695. host_writeconfig // Store current settings to config.cfg (or specified .cf
g file).
696. host_writeconfig_ss // Store current settings to config.cfg (or specified
.cfg file) with first param as splitscreen index.
697. hud_fastswitch "1"
698. hud_reloadscheme // Reloads hud layout and animation scripts.
699. hud_scaling "0" // Scales hud elements
700. hud_showtargetid "1" // Enables display of target names
701. hud_subtitles // Plays the Subtitles: <filename>
702. hud_takesshots "0" // Auto-save a scoreboard screenshot at the end of a ma
p.
703. hunk_print_allocations
704. hunk_track_allocation_types "1"
705. hurtme // Hurts the player. Arguments: <health to lose>
706. impulse
707. incrementvar // Increment specified convar value.
708. inferno_child_spawn_interval_multiplier "1" // Amount spawn interval incre
ases for each child
709. inferno_child_spawn_max_depth "4"
710. inferno_damage "40" // Damage per second
711. inferno_debug "0"
712. inferno_dlight_spacing "200" // Inferno dlights are at least this far apar
t
713. inferno_flame_lifetime "7" // Average lifetime of each flame in seconds
714. inferno_flame_spacing "50" // Minimum distance between separate flame spaw
ns
715. inferno_forward_reduction_factor "0"
716. inferno_friendly_fire_duration "6" // FF is credited back to the thrower.
717. inferno_initial_spawn_interval "0" // Time between spawning flames for fir
st fire
718. inferno_max_child_spawn_interval "1" // Largest time interval for child fl
ame spawning
719. inferno_max_flames "32" // Maximum number of flames that can be created
720. inferno_max_range "300" // Maximum distance flames can spread from their i
nitial ignition point
721. inferno_per_flame_spawn_duration "5" // Duration each new flame will attem
pt to spawn new flames
722. inferno_scorch_decals "1"
723. inferno_spawn_angle "45" // Angular change from parent
724. inferno_surface_offset "20"
725. inferno_velocity_decay_factor "0"
726. inferno_velocity_factor "0"
727. inferno_velocity_normal_factor "0"
728. invnext
729. invnextgrenade
730. invnextnongrenade
731. invprev
732. in_forceuser "0" // Force user input to this split screen player.
733. ip "0" // Overrides IP for multihomed hosts
734. items_game_use_local "1" // items_game.txt will not be stomped by the GC.
735. item_show_whitelistable_definitions // Lists the item definitions that can
 be whitelisted in the item_whitelist.txt file in tournament mode.
736. joinsplitscreen // join split screen
737. joyadvancedupdate
738. joystick "0" // false otherwise.
739. joy_accelmax "1"
740. joy_accelscale "0"
741. joy_advanced "0"
742. joy_advaxisr "0"
743. joy_advaxisu "0"
744. joy_advaxisv "0"
745. joy_advaxisx "0"
746. joy_advaxisy "0"
747. joy_advaxisz "0"
748. joy_autoaimdampen "0" // How much to scale user stick input when the gun i
s pointing at a valid target.
749. joy_autoaimdampenrange "0" // The stick range where autoaim dampening is a
pplied. 0 = off
750. joy_axisbutton_threshold "0" // Analog axis range before a button press is
 registered.
751. joy_cfg_preset "1"
752. joy_circle_correct "1"
753. joy_diagonalpov "0" // too.
754. joy_display_input "0"
755. joy_forwardsensitivity "-1"
756. joy_forwardthreshold "0"
757. joy_gamma "0"
758. joy_inverty "0" // Whether to invert the Y axis of the joystick for lookin
g.
759. joy_lowend "1"
760. joy_lowmap "1"
761. joy_movement_stick "0" // Which stick controls movement (0 is left stick)
762. joy_name "0"
763. joy_no_accel_jump "0"
764. joy_pitchsensitivity "0" // joystick pitch sensitivity
765. joy_pitchthreshold "0"
766. joy_response_look "0" // 1=Acceleration Promotion
767. joy_response_look_pitch "1" // 1=Acceleration Promotion
768. joy_response_move "1" // 1/sensitivity
769. joy_sensitive_step0 "0"
770. joy_sensitive_step1 "0"
771. joy_sensitive_step2 "0"
772. joy_sidesensitivity "1"
773. joy_sidethreshold "0"
774. joy_wingmanwarrior_centerhack "0" // Wingman warrior centering hack.
775. joy_wingmanwarrior_turnhack "0" // Wingman warrior hack related to turn ax
es.
776. joy_yawsensitivity "-1" // joystick yaw sensitivity
777. joy_yawthreshold "0"
778. jpeg // Take a jpeg screenshot: jpeg <filename> <quality 1-100>.
779. kdtree_test // Tests spatial partition for entities queries.
780. key_findbinding // Find key bound to specified command string.
781. key_listboundkeys // List bound keys with bindings.
782. key_updatelayout // Updates game keyboard layout to current windows keyboa
rd setting.
783. kick // Kick a player by name.
784. kickid // with a message.
785. kill // Kills the player with generic damage
786. killserver // Shutdown the server.
787. killvector // Kills a player applying force. Usage: killvector <player> <x
 value> <y value> <z value>
788. lastinv
789. lightcache_maxmiss "2"
790. lightprobe // Samples the lighting environment. Creates a cubemap and a fi
le indicating the local lighting in a subdirectory called material
791. light_crosshair // Show texture color at crosshair
792. linefile // Parses map leak data from .lin file
793. listdemo // List demo file contents.
794. listid // Lists banned users.
795. listip // List IP addresses on the ban list.
796. listmodels // List loaded models.
797. listRecentNPCSpeech // Displays a list of the last 5 lines of speech from
NPCs.
798. load // Load a saved game.
799. loadcommentary
800. loader_dump_table
801. locator_split_len "0"
802. locator_split_maxwide_percent "0"
803. log // and udp < on | off >.
804. logaddress_add // Set address and port for remote host <ip:port>.
805. logaddress_del // Remove address and port for remote host <ip:port>.
806. logaddress_delall // Remove all udp addresses being logged to
807. logaddress_list // List all addresses currently being used by logaddress.
808. log_color // Set the color of a logging channel.
809. log_dumpchannels // Dumps information about all logging channels.
810. log_flags // Set the flags on a logging channel.
811. log_level // Set the spew level of a logging channel.
812. lookspring "0"
813. lookstrafe "0"
814. loopsingleplayermaps "0"
815. map // Start playing on specified map.
816. maps // Displays list of maps.
817. map_background // Runs a map as the background to the main menu.
818. map_commentary // on a specified map.
819. map_edit
820. map_setbombradius // Sets the bomb radius for the map.
821. map_showbombradius // Shows bomb radius from the center of each bomb site
and planted bomb.
822. map_showspawnpoints // Shows player spawn points (red=invalid)
823. mat_accelerate_adjust_exposure_down "40"
824. mat_aniso_disable "0" // NOTE: You must change mat_forceaniso after changi
ng this convar for this to take effect
825. mat_bloomamount_rate "0"
826. mat_bloom_scalefactor_scalar "0"
827. mat_bumpbasis "0"
828. mat_camerarendertargetoverlaysize "128"
829. mat_colcorrection_forceentitiesclientside "0" // Forces color correction e
ntities to be updated on the client
830. mat_configcurrent // show the current video control panel config for the m
aterial system
831. mat_crosshair // Display the name of the material under the crosshair
832. mat_crosshair_edit // open the material under the crosshair in the editor
defined by mat_crosshair_edit_editor
833. mat_crosshair_explorer // open the material under the crosshair in explore
r and highlight the vmt file
834. mat_crosshair_printmaterial // print the material under the crosshair
835. mat_crosshair_reloadmaterial // reload the material under the crosshair
836. mat_debug // Activates debugging spew for a specific material.
837. mat_debugalttab "0"
838. mat_debug_bloom "0"
839. mat_displacementmap "1"
840. mat_drawflat "0"
841. mat_drawwater "1"
842. mat_dynamiclightmaps "0"
843. mat_dynamicPaintmaps "0"
844. mat_dynamic_tonemapping "1"
845. mat_edit // Bring up the material under the crosshair in the editor
846. mat_exposure_center_region_x "0"
847. mat_exposure_center_region_y "0"
848. mat_fastclip "0"
849. mat_fastnobump "0"
850. mat_fillrate "0"
851. mat_forcedynamic "0"
852. mat_force_bloom "0"
853. mat_force_tonemap_min_avglum "-1" // Override. Old default was 3.0
854. mat_force_tonemap_percent_bright_pixels "-1" // Override. Old value was 2.
0
855. mat_force_tonemap_percent_target "-1" // Override. Old default was 60.
856. mat_force_tonemap_scale "0"
857. mat_frame_sync_enable "1"
858. mat_frame_sync_force_texture "0" // Force frame syncing to lock a managed
texture.
859. mat_fullbright "0"
860. mat_hdr_enabled // Report if HDR is enabled for debugging
861. mat_hdr_tonemapscale "1" // 16 = eyes wide open.
862. mat_hdr_uncapexposure "0"
863. mat_hsv "0"
864. mat_info // Shows material system info
865. mat_leafvis "0" // or [3] entire PVS (see mat_leafvis_draw_mask for what
866. mat_loadtextures "1"
867. mat_lpreview_mode "-1"
868. mat_luxels "0"
869. mat_measurefillrate "0"
870. mat_monitorgamma "2" // monitor gamma (typically 2.2 for CRT and 1.7 for L
CD)
871. mat_monitorgamma_tv_enabled "1"
872. mat_morphstats "0"
873. mat_norendering "0"
874. mat_normalmaps "0"
875. mat_normals "0"
876. mat_postprocess_enable "1"
877. mat_powersavingsmode "0" // Power Savings Mode
878. mat_proxy "0"
879. mat_queue_mode "-1" // 2=queued
880. mat_queue_priority "1"
881. mat_reloadallmaterials // Reloads all materials
882. mat_reloadmaterial // Reloads a single material
883. mat_reloadtextures // Reloads all textures
884. mat_remoteshadercompile "0"
885. mat_rendered_faces_count "0" // Set to N to count how many faces each mode
l draws each frame and spew the top N offenders from the last 150 frames (use ma
t_re
886. mat_rendered_faces_spew // mat_rendered_faces_spew <n> Spew the number of
faces rendered for the top N models used this frame (mat_rendered_faces_count
887. mat_reporthwmorphmemory // Reports the amount of size in bytes taken up by
 hardware morph textures.
888. mat_resetdefaults // resets the video config options to their defaults
889. mat_reversedepth "0"
890. mat_savechanges // saves current video configuration to the registry
891. mat_setvideomode // windowed state of the material system
892. mat_shadercount // display count of all shaders and reset that count
893. mat_showcamerarendertarget "0"
894. mat_showframebuffertexture "0"
895. mat_showlowresimage "0"
896. mat_showmaterials // Show materials.
897. mat_showmaterialsverbose // Show materials (verbose version).
898. mat_showmiplevels "0" // 1: everything else
899. mat_showtextures // Show used textures.
900. mat_showwatertextures "0"
901. mat_show_texture_memory_usage "0" // Display the texture memory usage on t
he HUD.
902. mat_softwareskin "0"
903. mat_spewalloc "0"
904. mat_spewvertexandpixelshaders // Print all vertex and pixel shaders curren
tly loaded to the console
905. mat_stub "0"
906. mat_suppress // Supress a material from drawing
907. mat_surfaceid "0"
908. mat_surfacemat "0"
909. mat_tessellationlevel "6"
910. mat_tessellation_accgeometrytangents "0"
911. mat_tessellation_cornertangents "1"
912. mat_tessellation_update_buffers "1"
913. mat_texture_list_content_path "0" // itll assume your content directory is
 next to the currently runn
914. mat_texture_list_exclude // save - saves exclude list file
915. mat_texture_list_txlod // -1 to dec resolution
916. mat_texture_list_txlod_sync // save - saves all changes to material conten
t files
917. mat_tonemap_algorithm "1" // 0 = Original Algorithm 1 = New Algorithm
918. mat_updateconvars // updates the video config convars
919. mat_viewportscale "1" // Scale down the main viewport (to reduce GPU impac
t on CPU profiling)
920. mat_wireframe "0"
921. mat_yuv "0"
922. maxplayers // Change the maximum number of players allowed on this server.
923. mc_accel_band_size "34" // (degrees)
924. mc_aim_heading_multiplier "1"
925. mc_aim_pitch_multiplier "1"
926. mc_dead_zone_radius "10" // (degrees)
927. mc_max_turnrate "210" // (degrees/sec)
928. memory // Print memory stats.
929. mem_compact
930. mem_dump // Dump memory stats to text file.
931. mem_dumpvballocs // Dump VB memory allocation stats.
932. mem_eat
933. mem_incremental_compact
934. mem_incremental_compact_rate "0" // Rate at which to attempt internal heap
 compation
935. mem_test
936. mem_vcollide // Dumps the memory used by vcollides
937. mem_verify // Verify the validity of the heap
938. menuselect // menuselect
939. minisave // Saves game (for current level only!)
940. mm_datacenter_debugprint // Shows information retrieved from data center
941. mm_debugprint // Show debug information about current matchmaking session
942. mm_dedicated_force_servers "0" // Comma delimited list of ip:port of serve
rs used to search for dedicated servers instead of searching for public servers.
 Use sy
943. mm_dedicated_search_maxping "150" // Longest preferred ping to dedicated s
ervers for games
944. mm_dlc_debugprint // Shows information about dlc
945. mm_server_search_lan_ports "27015" // Ports to scan during LAN games disco
very. Also used to discover and correctly connect to dedicated LAN servers behin
d NATs.
946. mod_DumpWeaponWiewModelCache // Dumps the weapon view model cache contents
947. mod_DumpWeaponWorldModelCache // Dumps the weapon world model cache conten
ts
948. motdfile "0" // The MOTD file to load.
949. movie_fixwave // etc.
950. mp_afterroundmoney "0" // amount of money awared to every player after eac
h round
951. mp_autokick "1" // Kick idle/team-killing players
952. mp_buytime "90" // How many seconds after round start players can buy item
s for.
953. mp_death_drop_defuser "1" // Drop defuser on player death
954. mp_death_drop_grenade "2" // 2=current or best
955. mp_death_drop_gun "1" // 2=current or best
956. mp_defuser_allocation "0" // 2=everyone
957. mp_disable_autokick // Prevents a userid from being auto-kicked
958. mp_dump_timers // Prints round timers to the console for debugging
959. mp_forcerespawnplayers // Force all players to respawn.
960. mp_forcewin // Forces team to win
961. mp_force_pick_time "10" // The amount of time a player has on the team scr
een to make a selection before being auto-teamed
962. mp_freezetime "6" // how many seconds to keep players frozen when the roun
d starts
963. mp_ggprogressive_round_restart_delay "15" // Number of seconds to delay be
fore restarting a round after a win in gungame progessive
964. mp_ggtr_bomb_detonation_bonus "1" // Number of bonus upgrades to award the
 Ts when they detonate a gun game bomb
965. mp_halftime_duration "15" // Number of seconds that halftime lasts
966. mp_join_grace_time "20" // Number of seconds after round start to allow a
player to join a game
967. mp_limitteams "2" // Max # of players 1 team can have over another (0 disa
bles check)
968. mp_match_end_restart "1" // perform a restart instead of loading a new map
969. mp_maxmoney "16000" // maximum amount of money allowed in a players accoun
t
970. mp_playercashawards "1" // Players can earn money by performing in-game ac
tions
971. mp_playerid "0" // Controls what information player see in the status bar:
 0 all names; 1 team names; 2 no names
972. mp_playerid_delay "0" // Number of seconds to delay showing information in
 the status bar
973. mp_playerid_hold "0" // Number of seconds to keep showing old information
in the status bar
974. mp_required_voters "3" // The number of human players required for a vote
975. mp_required_vote_majority "0" // The percentage of human players that need
 to vote yes for a vote to pass
976. mp_restartgame "0" // game will restart in the specified number of seconds
977. mp_roundtime "5" // How many minutes each round takes.
978. mp_round_restart_delay "7" // Number of seconds to delay before restarting
 a round after a win
979. mp_scrambleteams // Scramble the teams and restart the game
980. mp_startmoney "800" // amount of money each player gets when they reset
981. mp_switchteams // Switch teams and restart the game
982. mp_teamcashawards "1" // Teams can earn money by performing in-game action
s
983. mp_tkpunish "0" // 1=yes}
984. mp_tournament_restart // Restart Tournament Mode on the current level.
985. mp_win_panel_display_time "5" // The amount of time to show the win panel
between matches / halfs
986. ms_player_dump_properties // Prints a dump the current players property da
ta
987. multvar // Multiply specified convar value.
988. muzzleflash_light "1"
989. m_customaccel "0" // Custom mouse acceleration: 0: custom accelaration dis
abled 1: mouse_acceleration = min(m_customaccel_max, pow(raw_mouse_delta,
990. m_customaccel_exponent "1" // Mouse move is raised to this power before be
ing scaled by scale factor.
991. m_customaccel_max "0" // 0 for no limit
992. m_customaccel_scale "0" // Custom mouse acceleration value.
993. m_forward "1" // Mouse forward factor.
994. m_mouseaccel1 "0" // Windows mouse acceleration initial threshold (2x move
ment).
995. m_mouseaccel2 "0" // Windows mouse acceleration secondary threshold (4x mo
vement).
996. m_mousespeed "1" // 2 to enable secondary threshold
997. m_pitch "0" // Mouse pitch factor.
998. m_rawinput "0" // Use Raw Input for mouse input.
999. m_side "0" // Mouse side factor.
1000. m_yaw "0" // Mouse yaw factor.
1001. name "0" // Current user name
1002. nav_add_to_selected_set // Add current area to the selected set.
1003. nav_add_to_selected_set_by_id // Add specified area id to the selected set
.
1004. nav_analyze // Re-analyze the current Navigation Mesh and save it to disk.
1005. nav_area_bgcolor "503316480" // RGBA color to draw as the background color
 for nav areas while editing.
1006. nav_area_max_size "50" // Max area size created in nav generation
1007. nav_avoid // Toggles the avoid this area when possible flag used by the AI
 system.
1008. nav_begin_area // drag the opposite corner to the desired location and
1009. nav_begin_deselecting // Start continuously removing from the selected set
.
1010. nav_begin_drag_deselecting // Start dragging a selection area.
1011. nav_begin_drag_selecting // Start dragging a selection area.
1012. nav_begin_selecting // Start continuously adding to the selected set.
1013. nav_begin_shift_xy // Begin shifting the Selected Set.
1014. nav_build_ladder // Attempts to build a nav ladder on the climbable surfac
e under the cursor.
1015. nav_check_connectivity // Checks to be sure every (or just the marked) nav
 area can get to every goal area for the map (hostages or bomb site).
1016. nav_check_file_consistency // Scans the maps directory and reports any mis
sing/out-of-date navigation files.
1017. nav_check_floor // Updates the blocked/unblocked status for every nav area
.
1018. nav_check_stairs // Update the nav mesh STAIRS attribute
1019. nav_chop_selected // Chops all selected areas into their component 1x1 are
as
1020. nav_clear_attribute // Remove given nav attribute from all areas in the se
lected set.
1021. nav_clear_selected_set // Clear the selected set.
1022. nav_clear_walkable_marks // Erase any previously placed walkable positions
.
1023. nav_compress_id // Re-orders area and ladder IDs so they are continuous.
1024. nav_connect // then invoke the connect command. Note that this creates a
1025. nav_coplanar_slope_limit "0"
1026. nav_coplanar_slope_limit_displacement "0"
1027. nav_corner_adjust_adjacent "18" // radius used to raise/lower corners in n
earby areas when raising/lowering corners.
1028. nav_corner_lower // Lower the selected corner of the currently marked Area
.
1029. nav_corner_place_on_ground // Places the selected corner of the currently
marked Area on the ground.
1030. nav_corner_raise // Raise the selected corner of the currently marked Area
.
1031. nav_corner_select // Select a corner of the currently marked Area. Use mul
tiple times to access all four corners.
1032. nav_create_area_at_feet "0" // Anchor nav_begin_area Z to editing players
feet
1033. nav_create_place_on_ground "0" // nav areas will be placed flush with the
ground when created by hand.
1034. nav_crouch // Toggles the must crouch in this area flag used by the AI sys
tem.
1035. nav_debug_blocked "0"
1036. nav_delete // Deletes the currently highlighted Area.
1037. nav_delete_marked // Deletes the currently marked Area (if any).
1038. nav_disconnect // then invoke the disconnect command. This will remove all
 connec
1039. nav_displacement_test "10000" // Checks for nodes embedded in displacement
s (useful for in-development maps)
1040. nav_dont_hide // Toggles the area is not suitable for hiding spots flag us
ed by the AI system.
1041. nav_draw_limit "500" // The maximum number of areas to draw in edit mode
1042. nav_edit "0" // Set to one to interactively edit the Navigation Mesh. Set
to zero to leave edit mode.
1043. nav_end_area // Defines the second corner of a new Area or Ladder and crea
tes it.
1044. nav_end_deselecting // Stop continuously removing from the selected set.
1045. nav_end_drag_deselecting // Stop dragging a selection area.
1046. nav_end_drag_selecting // Stop dragging a selection area.
1047. nav_end_selecting // Stop continuously adding to the selected set.
1048. nav_end_shift_xy // Finish shifting the Selected Set.
1049. nav_flood_select // use this command again.
1050. nav_generate // Generate a Navigation Mesh for the current map and save it
 to disk.
1051. nav_generate_fencetops "1" // Autogenerate nav areas on fence and obstacle
 tops
1052. nav_generate_fixup_jump_areas "1" // Convert obsolete jump areas into 2-wa
y connections
1053. nav_generate_incremental // Generate a Navigation Mesh for the current map
 and save it to disk.
1054. nav_generate_incremental_range "2000"
1055. nav_generate_incremental_tolerance "0" // Z tolerance for adding new nav a
reas.
1056. nav_gen_cliffs_approx // post-processing approximation
1057. nav_jump // Toggles the traverse this area by jumping flag used by the AI
system.
1058. nav_ladder_flip // Flips the selected ladders direction.
1059. nav_load // Loads the Navigation Mesh for the current map.
1060. nav_lower_drag_volume_max // Lower the top of the drag select volume.
1061. nav_lower_drag_volume_min // Lower the bottom of the drag select volume.
1062. nav_make_sniper_spots // Chops the marked area into disconnected sub-areas
 suitable for sniper spots.
1063. nav_mark // Marks the Area or Ladder under the cursor for manipulation by
subsequent editing commands.
1064. nav_mark_attribute // Set nav attribute for all areas in the selected set.
1065. nav_mark_unnamed // Mark an Are
