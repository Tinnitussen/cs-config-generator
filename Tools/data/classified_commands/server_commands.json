[
  {
    "command": "CS_WarnFriendlyDamageInterval",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Defines how frequently the server notifies clients that a player damaged a friend",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "CS_WarnFriendlyDamageInterval",
      "helperText": "Defines how frequently the server notifies clients that a player damaged a friend",
      "type": "unknown_integer",
      "defaultValue": 3,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "CreatePredictionError",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Create a prediction error",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "CreatePredictionError",
      "helperText": "Create a prediction error",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "Test_CreateEntity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "Test_CreateEntity",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "Test_EHandle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "Test_EHandle",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "Test_RandomPlayerPosition",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "Test_RandomPlayerPosition",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ai_debug_dyninteractions",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Debug the NPC dynamic interaction system.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ai_debug_dyninteractions",
      "helperText": "Debug the NPC dynamic interaction system.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ai_debug_los",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ai_debug_los",
      "helperText": "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ai_debug_scripted_sequence",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ai_debug_scripted_sequence",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ai_off_nav_show_nearest",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ai_off_nav_show_nearest",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "animevents_dump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "List all the currently registered anim events.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "animevents_dump",
      "helperText": "List all the currently registered anim events.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "animgraph_set_parameter_bool",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "animgraph_set_parameter_bool",
      "helperText": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "animgraph_set_parameter_enum",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified enum parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "animgraph_set_parameter_enum",
      "helperText": "Specified entities will have the specified enum parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "animgraph_set_parameter_float",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified float parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "animgraph_set_parameter_float",
      "helperText": "Specified entities will have the specified float parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "animgraph_set_parameter_int",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified int parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "animgraph_set_parameter_int",
      "helperText": "Specified entities will have the specified int parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "animgraph_set_parameter_string",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "animgraph_set_parameter_string",
      "helperText": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "animgraph_set_parameter_vector",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified vector parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "animgraph_set_parameter_vector",
      "helperText": "Specified entities will have the specified vector parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "axis",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw an axis  Arguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "axis",
      "helperText": "Draw an axis  Arguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_add",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_add",
      "helperText": "bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_add_ct",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_add_ct",
      "helperText": "bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_add_t",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_add_t",
      "helperText": "bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_all_weapons",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allows the bots to use all weapons",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_all_weapons",
      "helperText": "Allows the bots to use all weapons",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_allow_grenades",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use grenades.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_allow_grenades",
      "helperText": "If nonzero, bots may use grenades.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_allow_machine_guns",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use the machine gun.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_allow_machine_guns",
      "helperText": "If nonzero, bots may use the machine gun.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_allow_pistols",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use pistols.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_allow_pistols",
      "helperText": "If nonzero, bots may use pistols.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_allow_rifles",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use rifles.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_allow_rifles",
      "helperText": "If nonzero, bots may use rifles.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_allow_rogues",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_allow_rogues",
      "helperText": "If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_allow_shotguns",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use shotguns.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_allow_shotguns",
      "helperText": "If nonzero, bots may use shotguns.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_allow_snipers",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use sniper rifles.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_allow_snipers",
      "helperText": "If nonzero, bots may use sniper rifles.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_allow_sub_machine_guns",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use sub-machine guns.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_allow_sub_machine_guns",
      "helperText": "If nonzero, bots may use sub-machine guns.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_auto_follow",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots with high co-op may automatically follow a nearby human player.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_auto_follow",
      "helperText": "If nonzero, bots with high co-op may automatically follow a nearby human player.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_auto_vacate",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots will automatically leave to make room for human players.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_auto_vacate",
      "helperText": "If nonzero, bots will automatically leave to make room for human players.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_chatter",
    "consoleData": {
      "defaultValue": "normal",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_chatter",
      "helperText": "Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'.",
      "type": "string",
      "defaultValue": "normal",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_controllable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines whether bots can be controlled by players",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_controllable",
      "helperText": "Determines whether bots can be controlled by players",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_crouch",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_crouch",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For internal testing purposes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_debug",
      "helperText": "For internal testing purposes.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_debug_target",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For internal testing purposes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_debug_target",
      "helperText": "For internal testing purposes.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_defer_to_human_goals",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero and there is a human on the team, the bots will not do the scenario tasks.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_defer_to_human_goals",
      "helperText": "If nonzero and there is a human on the team, the bots will not do the scenario tasks.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_defer_to_human_items",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero and there is a human on the team, the bots will not get scenario items.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_defer_to_human_items",
      "helperText": "If nonzero and there is a human on the team, the bots will not get scenario items.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_difficulty",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Defines the skill of bots joining the game.  Values are: 0=easy, 1=normal, 2=hard, 3=expert.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_difficulty",
      "helperText": "Defines the skill of bots joining the game.  Values are: 0=easy, 1=normal, 2=hard, 3=expert.",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_dont_shoot",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat",
        "release"
      ],
      "description": "If nonzero, bots will not fire weapons (for debugging).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_dont_shoot",
      "helperText": "If nonzero, bots will not fire weapons (for debugging).",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_eco_limit",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots will not buy if their money falls below this amount.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_eco_limit",
      "helperText": "If nonzero, bots will not buy if their money falls below this amount.",
      "type": "unknown_integer",
      "defaultValue": 2000,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_flipout",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots use no CPU for AI. Instead, they run around randomly.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_flipout",
      "helperText": "If nonzero, bots use no CPU for AI. Instead, they run around randomly.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_freeze",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_freeze",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_goto_mark",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sends a bot to the marked nav area (useful for testing navigation meshes)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_goto_mark",
      "helperText": "Sends a bot to the marked nav area (useful for testing navigation meshes)",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_goto_selected",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sends a bot to the selected nav area (useful for testing navigation meshes)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_goto_selected",
      "helperText": "Sends a bot to the selected nav area (useful for testing navigation meshes)",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_ignore_enemies",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If nonzero, bots will ignore enemies (for debugging).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_ignore_enemies",
      "helperText": "If nonzero, bots will ignore enemies (for debugging).",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_ignore_players",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Bots will not see non-bot players.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_ignore_players",
      "helperText": "Bots will not see non-bot players.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_join_after_player",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots wait until a player joins before entering the game.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_join_after_player",
      "helperText": "If nonzero, bots wait until a player joins before entering the game.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_join_team",
    "consoleData": {
      "defaultValue": "any",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_join_team",
      "helperText": "Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'.",
      "type": "string",
      "defaultValue": "any",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_kick",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "bot_kick <all> <t|ct> <type> <difficulty> <name> - Kicks a specific bot, or all bots, matching the given criteria.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_kick",
      "helperText": "bot_kick <all> <t|ct> <type> <difficulty> <name> - Kicks a specific bot, or all bots, matching the given criteria.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_kill",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "bot_kill <all> <t|ct> <type> <difficulty> <name> - Kills a specific bot, or all bots, matching the given criteria.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_kill",
      "helperText": "bot_kill <all> <t|ct> <type> <difficulty> <name> - Kills a specific bot, or all bots, matching the given criteria.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_knives_only",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Restricts the bots to only using knives",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_knives_only",
      "helperText": "Restricts the bots to only using knives",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_loadout",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "bots are given these items at round start",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_loadout",
      "helperText": "bots are given these items at round start",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_mimic_yaw_offset",
    "consoleData": {
      "defaultValue": "180",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_mimic_yaw_offset",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 180,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_pistols_only",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Restricts the bots to only using pistols",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_pistols_only",
      "helperText": "Restricts the bots to only using pistols",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_place",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "bot_place - Places a bot from the map at where the local player is pointing.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_place",
      "helperText": "bot_place - Places a bot from the map at where the local player is pointing.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_prefix",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "This string is prefixed to the name of all bots that join the game. <difficulty> will be replaced with the bot's difficulty. <weaponclass> will be replaced with the bot's desired weapon class. <skill> will be replaced with a 0-100 representation of the bot's skill.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_prefix",
      "helperText": "This string is prefixed to the name of all bots that join the game. <difficulty> will be replaced with the bot's difficulty. <weaponclass> will be replaced with the bot's desired weapon class. <skill> will be replaced with a 0-100 representation of the bot's skill.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_quota",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines the total number of bots in the game.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_quota",
      "helperText": "Determines the total number of bots in the game.",
      "type": "unknown_integer",
      "defaultValue": 10,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_quota_mode",
    "consoleData": {
      "defaultValue": "fill",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines the type of quota. Allowed values: 'normal', 'fill', and 'match'. If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota. If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_quota_mode",
      "helperText": "Determines the type of quota. Allowed values: 'normal', 'fill', and 'match'. If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota. If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota.",
      "type": "string",
      "defaultValue": "fill",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_randombuy",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "should bots ignore their prefered weapons and just buy weapons at random?",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_randombuy",
      "helperText": "should bots ignore their prefered weapons and just buy weapons at random?",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_show_battlefront",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show areas where rushing players will initially meet.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_show_battlefront",
      "helperText": "Show areas where rushing players will initially meet.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_show_nav",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For internal testing purposes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_show_nav",
      "helperText": "For internal testing purposes.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_show_occupy_time",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show when each nav area can first be reached by each team.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_show_occupy_time",
      "helperText": "Show when each nav area can first be reached by each team.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_snipers_only",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Restricts the bots to only using sniper rifles",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_snipers_only",
      "helperText": "Restricts the bots to only using sniper rifles",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "bot_stop",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "bot_stop <1|all> | <not_bomber> | <t> | <ct>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_stop",
      "helperText": "bot_stop <1|all> | <not_bomber> | <t> | <ct>",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_traceview",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For internal testing purposes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_traceview",
      "helperText": "For internal testing purposes.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_walk",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots can only walk, not run.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_walk",
      "helperText": "If nonzero, bots can only walk, not run.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "bot_zombie",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If nonzero, bots will stay in idle mode and not attack.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "bot_zombie",
      "helperText": "If nonzero, bots will stay in idle mode and not attack.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "box",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw a bbox  Arguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "box",
      "helperText": "Draw a bbox  Arguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "buddha",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "nf",
        "cheat"
      ],
      "description": "Player takes damage but won't die",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "buddha",
      "helperText": "Player takes damage but won't die",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "buddha_ignore_bots",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "nf",
        "cheat"
      ],
      "description": "Bots always buddha 0",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "buddha_ignore_bots",
      "helperText": "Bots always buddha 0",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "buddha_reset_hp",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "nf",
        "cheat"
      ],
      "description": "HP to set when damaged below zero in Buddha Mode",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "buddha_reset_hp",
      "helperText": "HP to set when damaged below zero in Buddha Mode",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "buyrandom",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Buy random primary and secondary. Primarily for deathmatch where cost is not an issue.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "buyrandom",
      "helperText": "Buy random primary and secondary. Primarily for deathmatch where cost is not an issue.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "callvote",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Start a vote on an issue.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "callvote",
      "helperText": "Start a vote on an issue.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_aabb",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests box collision detection",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_aabb",
      "helperText": "Tests box collision detection",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_bullet",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests bullet cast",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_bullet",
      "helperText": "Tests bullet cast",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_capsule",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests capsule collision detection",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_capsule",
      "helperText": "Tests capsule collision detection",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_convex",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests convex hull collision detection",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_convex",
      "helperText": "Tests convex hull collision detection",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_cylinder",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests cylinder collision detection",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_cylinder",
      "helperText": "Tests cylinder collision detection",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_intervals",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests interval ray cast",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_intervals",
      "helperText": "Tests interval ray cast",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_obb",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests cylinder collision detection",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_obb",
      "helperText": "Tests cylinder collision detection",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_physics",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests physics shape collision detection",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_physics",
      "helperText": "Tests physics shape collision detection",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_ray",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests ray cast",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_ray",
      "helperText": "Tests ray cast",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cast_sphere",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests sphere cast",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cast_sphere",
      "helperText": "Tests sphere cast",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "chicken_stop",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "chicken_stop",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "clear_bombs",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "clear_bombs",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "collect_entity_model_name",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Collect model names of the entities you're pointing at",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "collect_entity_model_name",
      "helperText": "Collect model names of the entities you're pointing at",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "commentary",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "a"
      ],
      "description": "Desired commentary mode state.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "commentary",
      "helperText": "Desired commentary mode state.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "commentary_finishnode",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "commentary_finishnode",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "contributionscore_assist",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added for an assist",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_assist",
      "helperText": "amount of contribution score added for an assist",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_assist_reqs",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "extra requirements to earn contribution score for an assist",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_assist_reqs",
      "helperText": "extra requirements to earn contribution score for an assist",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_bomb_defuse_major",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for defusing a bomb while at least one enemy remains alive",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_bomb_defuse_major",
      "helperText": "amount of contribution score for defusing a bomb while at least one enemy remains alive",
      "type": "unknown_integer",
      "defaultValue": 3,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_bomb_defuse_minor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for defusing a bomb after eliminating enemy team",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_bomb_defuse_minor",
      "helperText": "amount of contribution score for defusing a bomb after eliminating enemy team",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_bomb_exploded",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score awarded to bomb planter and terrorists remaining alive if bomb explosion wins the round",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_bomb_exploded",
      "helperText": "amount of contribution score awarded to bomb planter and terrorists remaining alive if bomb explosion wins the round",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_bomb_planted",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for planting a bomb",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_bomb_planted",
      "helperText": "amount of contribution score for planting a bomb",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_cash_bundle",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for picking up a cash bundle",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_cash_bundle",
      "helperText": "amount of contribution score for picking up a cash bundle",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_crate_break",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for breaking an item crate",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_crate_break",
      "helperText": "amount of contribution score for breaking an item crate",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_hostage_kill",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for killing a hostage, normally negative",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_hostage_kill",
      "helperText": "amount of contribution score for killing a hostage, normally negative",
      "type": "unknown_integer",
      "defaultValue": -2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_hostage_rescue_major",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added to rescuer per hostage rescued",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_hostage_rescue_major",
      "helperText": "amount of contribution score added to rescuer per hostage rescued",
      "type": "unknown_integer",
      "defaultValue": 3,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_hostage_rescue_minor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added to all alive CTs per hostage rescued",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_hostage_rescue_minor",
      "helperText": "amount of contribution score added to all alive CTs per hostage rescued",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_kill",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added for a kill",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_kill",
      "helperText": "amount of contribution score added for a kill",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_kill_factor",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "percentage of victim's contribution score to award to their killer as a bonus",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_kill_factor",
      "helperText": "percentage of victim's contribution score to award to their killer as a bonus",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_kill_reqs",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "extra requirements to earn contribution score for a kill",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_kill_reqs",
      "helperText": "extra requirements to earn contribution score for a kill",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_objective_kill",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added for an objective related kill",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_objective_kill",
      "helperText": "amount of contribution score added for an objective related kill",
      "type": "unknown_integer",
      "defaultValue": 3,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_participation",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score awarded to players for active participation in the round",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_participation",
      "helperText": "amount of contribution score awarded to players for active participation in the round",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_suicide",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for a suicide, normally negative",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_suicide",
      "helperText": "amount of contribution score for a suicide, normally negative",
      "type": "unknown_integer",
      "defaultValue": -2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "contributionscore_team_kill",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for a team kill, normally negative",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "contributionscore_team_kill",
      "helperText": "amount of contribution score for a team kill, normally negative",
      "type": "unknown_integer",
      "defaultValue": -2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "cq_logging",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "command queue logging of events.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cq_logging",
      "helperText": "command queue logging of events.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "cq_logging_interval",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "command queue logging per player stats every N seconds, 0 to disable.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cq_logging_interval",
      "helperText": "command queue logging per player stats every N seconds, 0 to disable.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "cq_max_starved_substitute_commands",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Server will stop generating substitute commands if client hasn't sent one, after N in a row",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cq_max_starved_substitute_commands",
      "helperText": "Server will stop generating substitute commands if client hasn't sent one, after N in a row",
      "type": "unknown_integer",
      "defaultValue": 4,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "cq_print_every_command",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "print every command as we execute it",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cq_print_every_command",
      "helperText": "print every command as we execute it",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "create_flashlight",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "create_flashlight",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "create_radius_damage",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Causes radius damage where you're looking, at the passed in radius.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "create_radius_damage",
      "helperText": "Causes radius damage where you're looking, at the passed in radius.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "cs_ShowStateTransitions",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cs_ShowStateTransitions",
      "helperText": "cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions.",
      "type": "unknown_integer",
      "defaultValue": -2,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "cs_hostage_near_rescue_music_distance",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cs_hostage_near_rescue_music_distance",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 2000,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "cs_logtouchexpansion",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "cs_logtouchexpansion <ent index or -1 for all>. Log player touch expansion component.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "cs_logtouchexpansion",
      "helperText": "cs_logtouchexpansion <ent index or -1 for all>. Log player touch expansion component.",
      "type": "unknown_integer",
      "defaultValue": -2,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "debug_takedamage_summaries",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debug_takedamage_summaries",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "debug_visibility_monitor",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debug_visibility_monitor",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "debugoverlay_cycle_domain",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debugoverlay_cycle_domain",
      "helperText": "Toggles visibility of the debug overlay system.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "debugoverlay_cycle_state",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debugoverlay_cycle_state",
      "helperText": "Toggles visibility of the debug overlay system.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "debugoverlay_dashboard",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Makes the debug overlay dashboard visible.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debugoverlay_dashboard",
      "helperText": "Makes the debug overlay dashboard visible.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "debugoverlay_force_respect_ttl",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Force respect TTL even when clearing scopes",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debugoverlay_force_respect_ttl",
      "helperText": "Force respect TTL even when clearing scopes",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "debugoverlay_hide_imgui",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Hides the overlay.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debugoverlay_hide_imgui",
      "helperText": "Hides the overlay.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "debugoverlay_show_text_outline",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Toggle display of box around text",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debugoverlay_show_text_outline",
      "helperText": "Toggle display of box around text",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "debugoverlay_text_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a",
        "cheat"
      ],
      "description": "Scale of the text used for 3d display",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debugoverlay_text_scale",
      "helperText": "Scale of the text used for 3d display",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "debugoverlay_toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "debugoverlay_toggle",
      "helperText": "Toggles visibility of the debug overlay system.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "dev_add_onground_on_spawn",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Should we mess with the ground flag when we spawn? (I don't think we should). If we don't hit the assert in CCSPlayer_MovementServices::ProcessMovement, we should remove this by Dec 2022.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "dev_add_onground_on_spawn",
      "helperText": "Should we mess with the ground flag when we spawn? (I don't think we should). If we don't hit the assert in CCSPlayer_MovementServices::ProcessMovement, we should remove this by Dec 2022.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "disable_dynamic_prop_loading",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If non-zero when a map loads, dynamic props won't be loaded",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "disable_dynamic_prop_loading",
      "helperText": "If non-zero when a map loads, dynamic props won't be loaded",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "display_game_events",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "display_game_events",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "drawcross",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draws a cross at the given location  Arguments: x y z",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "drawcross",
      "helperText": "Draws a cross at the given location  Arguments: x y z",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "drawline",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draws line between two 3D Points.  Green if no collision  Red is collides with something  Arguments: x1 y1 z1 x2 y2 z2",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "drawline",
      "helperText": "Draws line between two 3D Points.  Green if no collision  Red is collides with something  Arguments: x1 y1 z1 x2 y2 z2",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ds_workshop_changelevel",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Changelevel to an available workshop map by name",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ds_workshop_changelevel",
      "helperText": "Changelevel to an available workshop map by name",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ds_workshop_listmaps",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Dump workshop maps available on this server",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ds_workshop_listmaps",
      "helperText": "Dump workshop maps available on this server",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "endround",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "End the current round.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "endround",
      "helperText": "End the current round.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_absbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_absbox",
      "helperText": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_actornames",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_actornames",
      "helperText": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_animgraph_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays debug draws about the given entity(ies) animgraph  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_animgraph_debug",
      "helperText": "Displays debug draws about the given entity(ies) animgraph  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_animgraph_record",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles recording of animgraph replay of the given entity(s)  Arguments: entityName automaticallyOpenInAnimgraphEditor  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "label": "ent_animgraph_record",
      "helperText": "Toggles recording of animgraph replay of the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_animgraph_setvar",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets a variable on the animgraph of the given entity(s)  Arguments:   <varname>=<value> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_animgraph_setvar",
      "helperText": "Sets a variable on the animgraph of the given entity(s)  Arguments:   <varname>=<value> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_attachment_filter_substrings",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If an attachment's name has any of the given substrings in it, it will be displayed. Substrings can be delimited by the ',' or '|' character."
    },
    "uiData": {
      "label": "ent_attachment_filter_substrings",
      "helperText": "If an attachment's name has any of the given substrings in it, it will be displayed. Substrings can be delimited by the ',' or '|' character.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ent_attachments",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the attachment points on an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_attachments",
      "helperText": "Displays the attachment points on an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_autoaim",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the entity's autoaim radius.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_autoaim",
      "helperText": "Displays the entity's autoaim radius.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_bbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_bbox",
      "helperText": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_bonemergeplayer",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Bonemerge the player onto the entity under the crosshairs"
    },
    "uiData": {
      "label": "ent_bonemergeplayer",
      "helperText": "Bonemerge the player onto the entity under the crosshairs",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_call",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_call",
      "helperText": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_clear_debug_overlays",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clears all debug overlays",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_clear_debug_overlays",
      "helperText": "Clears all debug overlays",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Creates an entity of the given designer or subclass name where the player is looking.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_create",
      "helperText": "Creates an entity of the given designer or subclass name where the player is looking.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_find",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Find and list all entities with classnames or targetnames that contain the specified substrings. Format: find_ent <substring>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_find",
      "helperText": "Find and list all entities with classnames or targetnames that contain the specified substrings. Format: find_ent <substring>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_find_index",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Display data for entity matching specified index. Format: find_ent_index <index>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_find_index",
      "helperText": "Display data for entity matching specified index. Format: find_ent_index <index>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_fire",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Usage:    ent_fire <target> [action] [value] [delay]",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_fire",
      "helperText": "Usage:    ent_fire <target> [action] [value] [delay]",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_fire_output",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Usage:    ent_fire_output <target> [output name] [value] [delay]",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_fire_output",
      "helperText": "Usage:    ent_fire_output <target> [output name] [value] [delay]",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_gib",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Gibs the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "label": "ent_gib",
      "helperText": "Gibs the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_grab",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "grabs the object in front of the player. Options: -loose -multiple -toggle",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_grab",
      "helperText": "grabs the object in front of the player. Options: -loose -multiple -toggle",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_hierarchy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Prints the entity hierarchy tree rooted at the specified ent(s)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_hierarchy",
      "helperText": "Prints the entity hierarchy tree rooted at the specified ent(s)",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_hitbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the hitboxes for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_hitbox",
      "helperText": "Displays the hitboxes for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_info",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Usage:    ent_info <class name>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_info",
      "helperText": "Usage:    ent_info <class name>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_joints",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the joint names + axes an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_joints",
      "helperText": "Displays the joint names + axes an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_kill",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_kill",
      "helperText": "Kills the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_messages",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_messages",
      "helperText": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_name",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the entity name",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_name",
      "helperText": "Displays the entity name",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_orient",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.  Format: ent_orient <entity name> <optional: allangles>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_orient",
      "helperText": "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.  Format: ent_orient <entity name> <optional: allangles>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_picker",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.  Arguments: full - enables all debug information",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_picker",
      "helperText": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.  Arguments: full - enables all debug information",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_pivot",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the pivot for the given entity(ies).  (y=up=green, z=forward=blue, x=left=red).   Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_pivot",
      "helperText": "Displays the pivot for the given entity(ies).  (y=up=green, z=forward=blue, x=left=red).   Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_pivot_size",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "a",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_pivot_size",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 20,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ent_remove",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Removes the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_remove",
      "helperText": "Removes the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_remove_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Removes all entities of the specified type  Arguments:    {entity_name} / {class_name}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_remove_all",
      "helperText": "Removes all entities of the specified type  Arguments:    {entity_name} / {class_name}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_rotate",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Rotates an entity by a specified # of degrees",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_rotate",
      "helperText": "Rotates an entity by a specified # of degrees",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_scale",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Scales entities. Arguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_scale",
      "helperText": "Scales entities. Arguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_scenehierarchy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_scenehierarchy",
      "helperText": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_script_dump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Dumps the names and values of this entity's script scope to the console  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_script_dump",
      "helperText": "Dumps the names and values of this entity's script scope to the console  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_select",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Select or deselects the given entities(s) for later manipulation  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_select",
      "helperText": "Select or deselects the given entities(s) for later manipulation  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_setang",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set entity angles",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_setang",
      "helperText": "Set entity angles",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_setname",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets the targetname of the given entity(s)  Arguments:    <new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_setname",
      "helperText": "Sets the targetname of the given entity(s)  Arguments:    <new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_setpos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Move entity to position",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_setpos",
      "helperText": "Move entity to position",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_show_contexts",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show entity contexts in ent_text display",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_show_contexts",
      "helperText": "Show entity contexts in ent_text display",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ent_show_damage",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_show_damage",
      "helperText": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_show_response_criteria",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Print, to the console, an entity's current criteria set used to select responses.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_show_response_criteria",
      "helperText": "Print, to the console, an entity's current criteria set used to select responses.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_showonlyattachment",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_showonlyattachment",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ent_skeleton",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_skeleton",
      "helperText": "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_teleport",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Teleport the specified entity to where the player is looking.  Format: ent_teleport <entity name>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_teleport",
      "helperText": "Teleport the specified entity to where the player is looking.  Format: ent_teleport <entity name>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text",
      "helperText": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text256",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text256",
      "helperText": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text_clear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_clear",
      "helperText": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set which ent_text filters you want:",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_filter",
      "helperText": "Set which ent_text filters you want:",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text_flags_active",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "a",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_flags_active",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ent_text_no_name_really_i_mean_it",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_no_name_really_i_mean_it",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "ent_text_radius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)  2 Arguments:    <Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_radius",
      "helperText": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)  2 Arguments:    <Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text_sticky_add",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_sticky_add",
      "helperText": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text_sticky_clear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_sticky_clear",
      "helperText": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text_sticky_dump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_sticky_dump",
      "helperText": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_text_sticky_remove",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_text_sticky_remove",
      "helperText": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_ungrab",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "un-grabs all objects",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_ungrab",
      "helperText": "un-grabs all objects",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_vcollide_wireframe",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the interpolated vcollide wireframe pm am entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_vcollide_wireframe",
      "helperText": "Displays the interpolated vcollide wireframe pm am entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_viewoffset",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the eye position for the given entity(ies) in red.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_viewoffset",
      "helperText": "Displays the eye position for the given entity(ies) in red.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "ent_visibility_traces",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Displays visibility traces for the given entity  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "ent_visibility_traces",
      "helperText": "Displays visibility traces for the given entity  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "explode",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills the player with explosive damage",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "explode",
      "helperText": "Kills the player with explosive damage",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "explodevector",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "explodevector",
      "helperText": "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "fadein",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "fadein",
      "helperText": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "fadeout",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "fadeout",
      "helperText": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "firetarget",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "firetarget",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "g_debug_angularsensor",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "g_debug_angularsensor",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "g_debug_constraint_sounds",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable debug printing about constraint sounds.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "g_debug_constraint_sounds",
      "helperText": "Enable debug printing about constraint sounds.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "give",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "vconsole_fuzzy"
      ],
      "description": "Give item to player.  Arguments: <item_name>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "give",
      "helperText": "Give item to player.  Arguments: <item_name>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "give_oriented",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "vconsole_fuzzy"
      ],
      "description": "Give item oriented to player angles.  Arguments: <item_name>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "give_oriented",
      "helperText": "Give item oriented to player angles.  Arguments: <item_name>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "givecurrentammo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Give a supply of ammo for current weapon..",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "givecurrentammo",
      "helperText": "Give a supply of ammo for current weapon..",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "global_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "global_set",
      "helperText": "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD).",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "god",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle by default, or 0 to disable and 1 to enable. Player becomes invulnerable.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "god",
      "helperText": "Toggle by default, or 0 to disable and 1 to enable. Player becomes invulnerable.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "groups",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show status of all spawn groups.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "groups",
      "helperText": "Show status of all spawn groups.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "host_workshop_collection",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Host a workshop map collection as a mapgroup",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "host_workshop_collection",
      "helperText": "Host a workshop map collection as a mapgroup",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "host_workshop_map",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Get the latest version of the map and host it on this server.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "host_workshop_map",
      "helperText": "Get the latest version of the map and host it on this server.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "hostfile",
    "consoleData": {
      "defaultValue": "host.txt",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The HOST file to load.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "hostfile",
      "helperText": "The HOST file to load.",
      "type": "string",
      "defaultValue": "host.txt",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "hurtme",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Hurts the player.  Arguments: <health to lose>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "hurtme",
      "helperText": "Hurts the player.  Arguments: <health to lose>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "imgui_debug_entity",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Shows the entity browser, focused on the entity you specify.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "label": "imgui_debug_entity",
      "helperText": "Shows the entity browswer, focused on the entity you specify.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "imgui_set_selection",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets ImGui selection",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "imgui_set_selection",
      "helperText": "Sets ImGui selection",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "imgui_set_status_text",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets ImGui header status text",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "imgui_set_status_text",
      "helperText": "Sets ImGui header status text",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "inferno_child_spawn_interval_multiplier",
    "consoleData": {
      "defaultValue": "0.1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Amount spawn interval increases for each child",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_child_spawn_interval_multiplier",
      "helperText": "Amount spawn interval increases for each child",
      "type": "float",
      "defaultValue": 0.1,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "inferno_damage",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Damage per second",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_damage",
      "helperText": "Damage per second",
      "type": "unknown_integer",
      "defaultValue": 40,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "inferno_damage_ct",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Damage per second from CT inferno",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_damage_ct",
      "helperText": "Damage per second from CT inferno",
      "type": "unknown_integer",
      "defaultValue": 40,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "inferno_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_debug",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "inferno_flame_spacing",
    "consoleData": {
      "defaultValue": "42",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Minimum distance between separate flame spawns",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_flame_spacing",
      "helperText": "Minimum distance between separate flame spawns",
      "type": "unknown_integer",
      "defaultValue": 42,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "inferno_forward_reduction_factor",
    "consoleData": {
      "defaultValue": "0.9",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_forward_reduction_factor",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.9,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "inferno_friendly_fire_duration",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For this long, FF is credited back to the thrower.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_friendly_fire_duration",
      "helperText": "For this long, FF is credited back to the thrower.",
      "type": "unknown_integer",
      "defaultValue": 6,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "inferno_initial_spawn_interval",
    "consoleData": {
      "defaultValue": "0.02",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Time between spawning flames for first fire",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_initial_spawn_interval",
      "helperText": "Time between spawning flames for first fire",
      "type": "float",
      "defaultValue": 0.02,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "inferno_max_child_spawn_interval",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Largest time interval for child flame spawning",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_max_child_spawn_interval",
      "helperText": "Largest time interval for child flame spawning",
      "type": "float",
      "defaultValue": 0.5,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "inferno_per_flame_spawn_duration",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Duration each new flame will attempt to spawn new flames",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_per_flame_spawn_duration",
      "helperText": "Duration each new flame will attempt to spawn new flames",
      "type": "unknown_integer",
      "defaultValue": 3,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "inferno_smoke_volume_density",
    "consoleData": {
      "defaultValue": "0.03",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_smoke_volume_density",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.03,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "inferno_spawn_angle",
    "consoleData": {
      "defaultValue": "45",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Angular change from parent",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_spawn_angle",
      "helperText": "Angular change from parent",
      "type": "unknown_integer",
      "defaultValue": 45,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "inferno_surface_offset",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_surface_offset",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 15,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "inferno_velocity_decay_factor",
    "consoleData": {
      "defaultValue": "0.2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_velocity_decay_factor",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.2,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "inferno_velocity_factor",
    "consoleData": {
      "defaultValue": "0.003",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_velocity_factor",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.003,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "inferno_velocity_factor_ct",
    "consoleData": {
      "defaultValue": "0.003",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_velocity_factor_ct",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.003,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "inferno_velocity_normal_factor",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "inferno_velocity_normal_factor",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "kill",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills the player with generic damage",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "kill",
      "helperText": "Kills the player with generic damage",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "killvector",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "killvector",
      "helperText": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "listissues",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "List all the issues that can be voted on.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "listissues",
      "helperText": "List all the issues that can be voted on.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "logaddress_add_http",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "Set URI of a listener to receive logs via http post. Wrap URI in double quotes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "logaddress_add_http",
      "helperText": "Set URI of a listener to receive logs via http post. Wrap URI in double quotes.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "logaddress_add_http_delayed",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "Set a delay and URI of a listener to receive logs via http post. Wrap URI in double quotes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "logaddress_add_http_delayed",
      "helperText": "Set a delay and URI of a listener to receive logs via http post. Wrap URI in double quotes.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "logaddress_del_http",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "Remove http listener by URI. Wrap URI in double quotes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "logaddress_del_http",
      "helperText": "Remove http listener by URI. Wrap URI in double quotes.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "logaddress_delall_http",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "Remove all http listeners from the dispatch list.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "logaddress_delall_http",
      "helperText": "Remove all http listeners from the dispatch list.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "logaddress_list_http",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "List all URIs currently receiving server logs",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "logaddress_list_http",
      "helperText": "List all URIs currently receiving server logs",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "logaddress_token_secret",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Set a secret string that will be hashed when using logaddress with explicit token hash.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "logaddress_token_secret",
      "helperText": "Set a secret string that will be hashed when using logaddress with explicit token hash.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "map_setbombradius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets the bomb radius for the map.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "map_setbombradius",
      "helperText": "Sets the bomb radius for the map.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "map_showbombradius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Shows bomb radius from the center of each bomb site and planted bomb.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "map_showbombradius",
      "helperText": "Shows bomb radius from the center of each bomb site and planted bomb.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mapgroup",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "norecord",
        "release"
      ],
      "description": "Specify a map group",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mapgroup",
      "helperText": "Specify a map group",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "markup_group_ent_bbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "markup_group_ent_bbox <markup_group name> -> toggle ent_bbox for all members of the named markup group",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "markup_group_ent_bbox",
      "helperText": "markup_group_ent_bbox <markup_group name> -> toggle ent_bbox for all members of the named markup group",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "markup_group_ent_text",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "markup_group_ent_text <markup_group name> -> toggle ent_text for all members of the named markup group",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "markup_group_ent_text",
      "helperText": "markup_group_ent_text <markup_group name> -> toggle ent_text for all members of the named markup group",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "markup_group_spew",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Spew all current markup groups and their members",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "markup_group_spew",
      "helperText": "Spew all current markup groups and their members",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "molotov_usethrow_direction",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "molotov_usethrow_direction",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "motdfile",
    "consoleData": {
      "defaultValue": "motd.txt",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The MOTD file to load.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "motdfile",
      "helperText": "The MOTD file to load.",
      "type": "string",
      "defaultValue": "motd.txt",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "movement_stats_debug_draw",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "movement_stats_debug_draw",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "movement_stats_force_calculate",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "movement_stats_force_calculate",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_autoteambalance",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_autoteambalance",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_backup_restore_list_files",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Lists recent backup round files matching the prefix, most recent files first, accepts a numeric parameter to limit the number of files displayed",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_backup_restore_list_files",
      "helperText": "Lists recent backup round files matching the prefix, most recent files first, accepts a numeric parameter to limit the number of files displayed",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_backup_restore_load_autopause",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Whether to automatically pause the match after restoring round data from backup",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_backup_restore_load_autopause",
      "helperText": "Whether to automatically pause the match after restoring round data from backup",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_backup_restore_load_file",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Loads player cash, KDA, scores and team scores; resets to the next round after the backup",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_backup_restore_load_file",
      "helperText": "Loads player cash, KDA, scores and team scores; resets to the next round after the backup",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_backup_round_auto",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_backup_round_auto",
      "helperText": "If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_backup_round_file",
    "consoleData": {
      "defaultValue": "backup",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_backup_round_file",
      "helperText": "If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt",
      "type": "string",
      "defaultValue": "backup",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_backup_round_file_last",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Every time a backup file is written the value of this convar gets updated to hold the name of the backup file.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_backup_round_file_last",
      "helperText": "Every time a backup file is written the value of this convar gets updated to hold the name of the backup file.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_backup_round_file_pattern",
    "consoleData": {
      "defaultValue": "%prefix%_round%round%.txt",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt'",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_backup_round_file_pattern",
      "helperText": "If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt'",
      "type": "string",
      "defaultValue": "%prefix%_round%round%.txt",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_bot_ai_bt",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Use the specified behavior tree file to drive the bot behavior.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_bot_ai_bt",
      "helperText": "Use the specified behavior tree file to drive the bot behavior.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_bot_ai_bt_clear_cache",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Clears the cache for behavior tree files.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_bot_ai_bt_clear_cache",
      "helperText": "Clears the cache for behavior tree files.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_competitive_endofmatch_extra_time",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "release"
      ],
      "description": "After a competitive match finishes rematch voting extra time is given for rankings.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_competitive_endofmatch_extra_time",
      "helperText": "After a competitive match finishes rematch voting extra time is given for rankings.",
      "type": "unknown_integer",
      "defaultValue": 15,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_disable_autokick",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Prevents a userid from being auto-kicked",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_disable_autokick",
      "helperText": "Prevents a userid from being auto-kicked",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_disconnect_kills_bots",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When a bot disconnects, kill them first.  Requires mp_disconnect_kills_players.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_disconnect_kills_bots",
      "helperText": "When a bot disconnects, kill them first.  Requires mp_disconnect_kills_players.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_disconnect_kills_players",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When a player disconnects, kill them first (triggering item drops, stats, etc.)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_disconnect_kills_players",
      "helperText": "When a player disconnects, kill them first (triggering item drops, stats, etc.)",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_endmatch_votenextleveltime",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_endmatch_votenextleveltime",
      "helperText": "If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end.",
      "type": "unknown_integer",
      "defaultValue": 20,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_endmatch_votenextmap_wargames_modes",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Modes available for endmatch voting during War Games. Separate names with spaces.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_endmatch_votenextmap_wargames_modes",
      "helperText": "Modes available for endmatch voting during War Games. Separate names with spaces.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_endmatch_votenextmap_wargames_nummaps",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Maximum number of maps to include in endmatch voting during War Games",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_endmatch_votenextmap_wargames_nummaps",
      "helperText": "Maximum number of maps to include in endmatch voting during War Games",
      "type": "unknown_integer",
      "defaultValue": 3,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_endmatch_votenextmap_wargames_nummodes",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Maximum number of other War Games to include in endmatch voting during War Games",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_endmatch_votenextmap_wargames_nummodes",
      "helperText": "Maximum number of other War Games to include in endmatch voting during War Games",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_footsteps_serverside",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_footsteps_serverside",
      "helperText": "Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_fraglimit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_fraglimit",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_guardian_force_collect_hostages_timeout",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Force bots to collect hostages after this amount of time if no enemy has been seen.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_guardian_force_collect_hostages_timeout",
      "helperText": "Force bots to collect hostages after this amount of time if no enemy has been seen.",
      "type": "unknown_integer",
      "defaultValue": 50,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_guardian_target_site",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If set to the index of a bombsite, will cause random spawns to be only created near that site.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_guardian_target_site",
      "helperText": "If set to the index of a bombsite, will cause random spawns to be only created near that site.",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_logdetail",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Logs attacks.  Values are: 0=off, 1=enemy, 2=teammate, 3=both)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_logdetail",
      "helperText": "Logs attacks.  Values are: 0=off, 1=enemy, 2=teammate, 3=both)",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_logdetail_items",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Logs a line any time a player acquires or loses an item.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_logdetail_items",
      "helperText": "Logs a line any time a player acquires or loses an item.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_logmoney",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enables money logging.  Values are: 0=off, 1=on",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_logmoney",
      "helperText": "Enables money logging.  Values are: 0=off, 1=on",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_modify_timeouts",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "mp_modify_timeouts <CT|T> <N>, e.g., mp_modify ct -1",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_modify_timeouts",
      "helperText": "mp_modify_timeouts <CT|T> <N>, e.g., mp_modify ct -1",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_pause_match",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Pause the match in the next freeze time",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_pause_match",
      "helperText": "Pause the match in the next freeze time",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_require_gun_use_to_acquire",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Whether guns must be +used to acquire or default is touch-to-pickup",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_require_gun_use_to_acquire",
      "helperText": "Whether guns must be +used to acquire or default is touch-to-pickup",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_restartgame",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If non-zero, game will restart in the specified number of seconds",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_restartgame",
      "helperText": "If non-zero, game will restart in the specified number of seconds",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_scrambleteams",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Scramble the teams and restart the game",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_scrambleteams",
      "helperText": "Scramble the teams and restart the game",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_suicide_penalty",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Punish players for suicides",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_suicide_penalty",
      "helperText": "Punish players for suicides",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_swapteams",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Swap the teams and restart the game",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_swapteams",
      "helperText": "Swap the teams and restart the game",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_teamflag_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamflag_1",
      "helperText": "Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamflag_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamflag_2",
      "helperText": "Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamlogo_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamlogo_1",
      "helperText": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamlogo_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamlogo_2",
      "helperText": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teammatchstat_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string sets first team's match stat.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teammatchstat_1",
      "helperText": "A non-empty string sets first team's match stat.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teammatchstat_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string sets second team's match stat.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teammatchstat_2",
      "helperText": "A non-empty string sets second team's match stat.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teammatchstat_cycletime",
    "consoleData": {
      "defaultValue": "45",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Cycle match stats after so many seconds",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teammatchstat_cycletime",
      "helperText": "Cycle match stats after so many seconds",
      "type": "unknown_integer",
      "defaultValue": 45,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teammatchstat_holdtime",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Decide on a match stat and hold it additionally for at least so many seconds",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teammatchstat_holdtime",
      "helperText": "Decide on a match stat and hold it additionally for at least so many seconds",
      "type": "unknown_integer",
      "defaultValue": 5,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teammatchstat_txt",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string sets the match stat description, e.g. 'Match 2 of 3'.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teammatchstat_txt",
      "helperText": "A non-empty string sets the match stat description, e.g. 'Match 2 of 3'.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamname_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string overrides the first team's name.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamname_1",
      "helperText": "A non-empty string overrides the first team's name.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamname_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string overrides the second team's name.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamname_2",
      "helperText": "A non-empty string overrides the second team's name.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamprediction_pct",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A value between 1 and 99 will show predictions in favor of CT team.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamprediction_pct",
      "helperText": "A value between 1 and 99 will show predictions in favor of CT team.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamprediction_txt",
    "consoleData": {
      "defaultValue": "#SFUIHUD_Spectate_Predictions",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A value between 1 and 99 will set predictions in favor of first team.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamprediction_txt",
      "helperText": "A value between 1 and 99 will set predictions in favor of first team.",
      "type": "string",
      "defaultValue": "#SFUIHUD_Spectate_Predictions",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamscore_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string for best-of-N maps won by the first team.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamscore_1",
      "helperText": "A non-empty string for best-of-N maps won by the first team.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamscore_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string for best-of-N maps won by the second team.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamscore_2",
      "helperText": "A non-empty string for best-of-N maps won by the second team.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_teamscore_max",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_teamscore_max",
      "helperText": "How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "mp_unpause_match",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Resume the match",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_unpause_match",
      "helperText": "Resume the match",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_warmup_end",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "End warmup immediately.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_warmup_end",
      "helperText": "End warmup immediately.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_warmup_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Start warmup.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_warmup_start",
      "helperText": "Start warmup.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "mp_weapon_next_owner_touch_time",
    "consoleData": {
      "defaultValue": "1.3",
      "flags": [
        "sv",
        "cheat",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "mp_weapon_next_owner_touch_time",
      "helperText": "",
      "type": "float",
      "defaultValue": 1.3,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_add_to_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add current area to the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_add_to_selected_set",
      "helperText": "Add current area to the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_add_to_selected_set_by_id",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add specified area id to the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_add_to_selected_set_by_id",
      "helperText": "Add specified area id to the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_attribute_obstacle_draw",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_attribute_obstacle_draw",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_attribute_obstacle_draw_elements",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_attribute_obstacle_draw_elements",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_avoid",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles the 'avoid this area when possible' flag used by the AI system.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_avoid",
      "helperText": "Toggles the 'avoid this area when possible' flag used by the AI system.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_avoid_obstacles",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_avoid_obstacles",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_begin_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start continuously removing from the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_begin_deselecting",
      "helperText": "Start continuously removing from the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_begin_drag_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start dragging a selection area.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_begin_drag_deselecting",
      "helperText": "Start dragging a selection area.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_begin_drag_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start dragging a selection area.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_begin_drag_selecting",
      "helperText": "Start dragging a selection area.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_begin_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start continuously adding to the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_begin_selecting",
      "helperText": "Start continuously adding to the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_bfs_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_bfs_debug",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_check_connectivity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_check_connectivity",
      "helperText": "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site).",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_clear_attribute",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove given nav attribute from all areas in the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_clear_attribute",
      "helperText": "Remove given nav attribute from all areas in the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_clear_attributes",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clear all nav attributes of selected area.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_clear_attributes",
      "helperText": "Clear all nav attributes of selected area.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_clear_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clear the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_clear_selected_set",
      "helperText": "Clear the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_corner_adjust_adjacent",
    "consoleData": {
      "defaultValue": "18",
      "flags": [
        "cheat"
      ],
      "description": "radius used to raise/lower corners in nearby areas when raising/lowering corners.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_corner_adjust_adjacent",
      "helperText": "radius used to raise/lower corners in nearby areas when raising/lowering corners.",
      "type": "unknown_integer",
      "defaultValue": 18,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_create_indirect_connection",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Create a connection between the selected area and the area pointed at by the crosshair.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_create_indirect_connection",
      "helperText": "Create a connection between the selected area and the area pointed at by the crosshair.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_create_indirect_connection_from_to",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Create a connection between the current 'from' and 'to' locations."
    },
    "uiData": {
      "label": "nav_create_indirect_connection_from_to",
      "helperText": "Create a connection between the current 'from' and 'to' locations.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_create_indirect_connection_set_from",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.000000 0.000000 0.000000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set the 'from' location of an indirect connection."
    },
    "uiData": {
      "label": "nav_create_indirect_connection_set_from",
      "helperText": "Set the 'from' location of an indirect connection.",
      "type": "string",
      "defaultValue": "0.000000 0.000000 0.000000",
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_create_indirect_connection_set_from_using_editpos",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set the 'from' location of an indirect connection to be the current edit pos of nav_edit."
    },
    "uiData": {
      "label": "nav_create_indirect_connection_set_from_using_editpos",
      "helperText": "Set the 'from' location of an indirect connection to be the current edit pos of nav_edit.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_create_indirect_connection_set_to",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.000000 0.000000 0.000000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set the 'to' location of an indirect connection."
    },
    "uiData": {
      "label": "nav_create_indirect_connection_set_to",
      "helperText": "Set the 'to' location of an indirect connection.",
      "type": "string",
      "defaultValue": "0.000000 0.000000 0.000000",
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_create_indirect_connection_set_to_using_editpos",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set the 'to' location of an indirect connection to be the current edit pos of nav_edit."
    },
    "uiData": {
      "label": "nav_create_indirect_connection_set_to_using_editpos",
      "helperText": "Set the 'to' location of an indirect connection to be the current edit pos of nav_edit.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_curve_alt",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_curve_alt",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_curve_iter",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_curve_iter",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_curve_lock",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_curve_lock",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_curve_max_step",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_curve_max_step",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 10,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_curve_set",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_curve_set",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_curve_step",
    "consoleData": {
      "defaultValue": "0.02",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_curve_step",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.02,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_debug_blocked",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_debug_blocked",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_delete",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Deletes the currently highlighted Area.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_delete",
      "helperText": "Deletes the currently highlighted Area.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_delete_all_hull",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Deletes all areas with given hull category.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_delete_all_hull",
      "helperText": "Deletes all areas with given hull category.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_delete_marked",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Deletes the currently marked Area (if any).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_delete_marked",
      "helperText": "Deletes the currently marked Area (if any).",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_disconnect",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Disconnects selected area from all neighbor areas."
    },
    "uiData": {
      "label": "nav_disconnect",
      "helperText": "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_draw_area_connections",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_connections",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_filled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_filled",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_gravity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_gravity",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_ground",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_ground",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_hull_support",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_hull_support",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_ids",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_ids",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_inset_margin",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_inset_margin",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_normal",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_normal",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_should_be_destroyed",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_should_be_destroyed",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_split_by_nav_link_mgr",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_split_by_nav_link_mgr",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_draw_area_split_by_obstacle_mgr",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_split_by_obstacle_mgr",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_area_ztest",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_area_ztest",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_attribute_dynamic",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw all nav areas with this dynamic attribute",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_attribute_dynamic",
      "helperText": "Draw all nav areas with this dynamic attribute",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_draw_attribute_game",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw all nav areas with this game attribute",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_attribute_game",
      "helperText": "Draw all nav areas with this game attribute",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_draw_blocked",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_blocked",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_blocked_connections",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_blocked_connections",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_boundary_areas",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_draw_boundary_areas",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_connected_area_radius",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_connected_area_radius",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1000,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_dangerareas",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_dangerareas",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_dormant_movable_meshes",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw dormant movable meshes."
    },
    "uiData": {
      "label": "nav_draw_dormant_movable_meshes",
      "helperText": "Draw dormant movable meshes.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_externally_created",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_externally_created",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_hidingspots",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_hidingspots",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_indirect_connections",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_indirect_connections",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_jump_links",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_jump_links",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_limit",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "The maximum number of areas to draw in edit mode",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_limit",
      "helperText": "The maximum number of areas to draw in edit mode",
      "type": "unknown_integer",
      "defaultValue": 300,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_link_alignment",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_link_alignment",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_links",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_links",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_markup",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_markup",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_mesh",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_mesh",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_mesh_grid",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw the mesh's spatial grid structure around the edit cursor position.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_mesh_grid",
      "helperText": "Draw the mesh's spatial grid structure around the edit cursor position.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_mesh_offset",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Vertical offset for drawing the mesh (useful for flat planes where the mesh is often a fixed offset from the physical ground",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_mesh_offset",
      "helperText": "Vertical offset for drawing the mesh (useful for flat planes where the mesh is often a fixed offset from the physical ground",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_space_boundary",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_draw_space_boundary",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_space_cells",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_space_cells",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_space_fly",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_space_fly",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_space_neighbors",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_draw_space_neighbors",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_space_portals",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_space_portals",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_space_radius",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_space_radius",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_space_scatter",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_space_scatter",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_draw_space_swim",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_draw_space_swim",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_draw_space_transitions",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_draw_space_transitions",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_edit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_edit",
      "helperText": "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_edit_use_camera",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_edit_use_camera",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_edit_validate",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Validate navmesh structures.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_edit_validate",
      "helperText": "Validate navmesh structures.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_end_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stop continuously removing from the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_end_deselecting",
      "helperText": "Stop continuously removing from the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_end_drag_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stop dragging a selection area.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_end_drag_deselecting",
      "helperText": "Stop dragging a selection area.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_end_drag_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stop dragging a selection area.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_end_drag_selecting",
      "helperText": "Stop dragging a selection area.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_end_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stop continuously adding to the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_end_selecting",
      "helperText": "Stop continuously adding to the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_find_occluded_node_nozup_use_raycast",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_find_occluded_node_nozup_use_raycast",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_add_jumps",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_add_jumps",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_agent_radius_buffer",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.75",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Buffer to add to agent radius before passing to nav gen"
    },
    "uiData": {
      "label": "nav_gen_agent_radius_buffer",
      "helperText": "Buffer to add to agent radius before passing to nav gen",
      "type": "float",
      "defaultValue": 0.75,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_clip_polys_to_clearance",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_clip_polys_to_clearance",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_clip_polys_to_clearance_debug",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_clip_polys_to_clearance_debug",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_connect_allow_multiple",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_connect_allow_multiple",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_connect_angle",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.75",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_connect_angle",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.75,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_connect_angle_ignore_z",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_connect_angle_ignore_z",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_connect_dist_a",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_connect_dist_a",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_connect_dist_b",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "1.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_connect_dist_b",
      "helperText": "",
      "type": "float",
      "defaultValue": 1.5,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_connect_dist_z_mult",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_connect_dist_z_mult",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.5,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_connect_overlap",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_connect_overlap",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.5,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_degen_limit",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.001",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_degen_limit",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.001,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_false",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Always false"
    },
    "uiData": {
      "label": "nav_gen_false",
      "helperText": "Always false",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_island_removal",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_island_removal",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_island_removal_all_hulls",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_island_removal_all_hulls",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_join_nonzup",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_join_nonzup",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_jump_connection_min_overlap_ratio",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Minimum edge overlap required for jump connection consideration as a percentage of agent radius"
    },
    "uiData": {
      "label": "nav_gen_jump_connection_min_overlap_ratio",
      "helperText": "Minimum edge overlap required for jump connection consideration as a percentage of agent radius",
      "type": "float",
      "defaultValue": 0.1,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_markup_split_expand",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_markup_split_expand",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_markup_split_tol_base",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_markup_split_tol_base",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_markup_split_tol_nonav",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_markup_split_tol_nonav",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_markup_split_tol_nonentity",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "8",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_markup_split_tol_nonentity",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 8,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_match_ground",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_gen_match_ground",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_gen_max_bottleneck_width",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "128",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_max_bottleneck_width",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 128,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_max_bottleneck_width_do_clip",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_max_bottleneck_width_do_clip",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_max_edge_len",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "512",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_max_edge_len",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 512,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_max_edge_len_do_clip",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_max_edge_len_do_clip",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_max_edge_len_split_tol",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "24",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_max_edge_len_split_tol",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 24,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_opt_to_quads",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_opt_to_quads",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_opt_to_quads_angle_limit",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "8",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_opt_to_quads_angle_limit",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 8,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_opt_to_quads_num_steps",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "6",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_opt_to_quads_num_steps",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 6,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_opt_to_quads_planar_deviation_limit",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "4",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_opt_to_quads_planar_deviation_limit",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 4,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_opt_to_quads_se_limit_end",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_opt_to_quads_se_limit_end",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.1,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_opt_to_quads_se_limit_start",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.000010",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_opt_to_quads_se_limit_start",
      "helperText": "",
      "type": "float",
      "defaultValue": 1e-05,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_opt_to_quads_weld_limit_end",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.01",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_opt_to_quads_weld_limit_end",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.01,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_opt_to_quads_weld_limit_start",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_opt_to_quads_weld_limit_start",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_oriented_angle_tol",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "15",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Max abrupt orientation difference an NPC can tolerate when moving through the mesh (degrees)."
    },
    "uiData": {
      "label": "nav_gen_oriented_angle_tol",
      "helperText": "Max abrupt orientation difference an NPC can tolerate when moving through the mesh (degrees).",
      "type": "unknown_integer",
      "defaultValue": 15,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_oriented_max_region_range",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "15",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Max orientation range allowed within a region before it gets further split."
    },
    "uiData": {
      "label": "nav_gen_oriented_max_region_range",
      "helperText": "Max orientation range allowed within a region before it gets further split.",
      "type": "unknown_integer",
      "defaultValue": 15,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_remove_vertical_polys",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_remove_vertical_polys",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_split_boundary_polys",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_split_boundary_polys",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_split_multi_connection_polys",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_split_multi_connection_polys",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_split_multi_connection_polys_tol",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0.01",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_split_multi_connection_polys_tol",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.01,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_gen_true",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Always true"
    },
    "uiData": {
      "label": "nav_gen_true",
      "helperText": "Always true",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_gen_vertical_limit",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "88",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_gen_vertical_limit",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 88,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_genrt_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_genrt_debug",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_genrt_no_splice",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_genrt_no_splice",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_genrt_no_split",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_genrt_no_split",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_genrt_step",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_genrt_step",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_list_movable_meshes",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "List the movable meshes registered with the movable meshes manager."
    },
    "uiData": {
      "label": "nav_list_movable_meshes",
      "helperText": "List the movable meshes registered with the movable meshes manager.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_lower_drag_volume_max",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Lower the top of the drag select volume.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_lower_drag_volume_max",
      "helperText": "Lower the top of the drag select volume.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_lower_drag_volume_min",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Lower the bottom of the drag select volume.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_lower_drag_volume_min",
      "helperText": "Lower the bottom of the drag select volume.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_mark",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_mark",
      "helperText": "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_mark_attribute",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set nav attribute for all areas in the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_mark_attribute",
      "helperText": "Set nav attribute for all areas in the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_max_view_distance",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_max_view_distance",
      "helperText": "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_max_vis_delta_list_length",
    "consoleData": {
      "defaultValue": "64",
      "flags": [
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_max_vis_delta_list_length",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 64,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_navlink_enable_splits",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Split wide nav links into narrower ones to increase lanes and alleviate 'crossing' effect."
    },
    "uiData": {
      "label": "nav_navlink_enable_splits",
      "helperText": "Split wide nav links into narrower ones to increase lanes and alleviate 'crossing' effect.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_navlink_split_max_width",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "144",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "The maximum desired width of a nav link split."
    },
    "uiData": {
      "label": "nav_navlink_split_max_width",
      "helperText": "The maximum desired width of a nav link split.",
      "type": "unknown_integer",
      "defaultValue": 144,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_navlink_split_scale_with_length",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Nav link splits' widths are proportional to the nav link's length."
    },
    "uiData": {
      "label": "nav_navlink_split_scale_with_length",
      "helperText": "Nav link splits' widths are proportional to the nav link's length.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_obstacle_genrt",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_obstacle_genrt",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_obstacle_validate",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_obstacle_validate",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_obstruction_draw",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_obstruction_draw",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_obstruction_draw_change",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_obstruction_draw_change",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_obstruction_draw_dist",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_obstruction_draw_dist",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_obstruction_draw_island",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_obstruction_draw_island",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_obstruction_draw_island_hull",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_obstruction_draw_island_hull",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_obstruction_draw_movefail_blocking",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_obstruction_draw_movefail_blocking",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_debug",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_debug_compute_with_open_goal",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_debug_compute_with_open_goal",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_areas",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_areas",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_arrow",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_arrow",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_climb_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_climb_segments",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_connected_areas",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_connected_areas",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_ground_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_ground_segments",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_jump_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_jump_segments",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_ladder_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_ladder_segments",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_link_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_link_segments",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_draw_tick",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_draw_tick",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_fixup_climb_up_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_fixup_climb_up_segments",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_fixup_gap_segments",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_fixup_gap_segments",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_jump_process_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_jump_process_debug",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_optimize",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_optimize",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_optimize_portals",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_optimize_portals",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_optimizer_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_optimizer_debug",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_path_record_draw_last_fail",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_record_draw_last_fail",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_path_record_enable",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_path_record_enable",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_pathfind_debug_log",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_pathfind_debug_log",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_pathfind_draw",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_pathfind_draw",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_pathfind_draw_blocked",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_pathfind_draw_blocked",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_pathfind_draw_costs",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_pathfind_draw_costs",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_pathfind_draw_fail",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_pathfind_draw_fail",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_pathfind_draw_total_costs",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_pathfind_draw_total_costs",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_pathfind_inadmissable_heuristic_factor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_pathfind_inadmissable_heuristic_factor",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_pathfind_multithread",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_pathfind_multithread",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_potentially_visible_dot_tolerance",
    "consoleData": {
      "defaultValue": "0.98",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_potentially_visible_dot_tolerance",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.98,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_precise",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles the 'dont avoid obstacles' flag used by the AI system.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_precise",
      "helperText": "Toggles the 'dont avoid obstacles' flag used by the AI system.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_raise_drag_volume_max",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Raise the top of the drag select volume.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_raise_drag_volume_max",
      "helperText": "Raise the top of the drag select volume.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_raise_drag_volume_min",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Raise the bottom of the drag select volume.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_raise_drag_volume_min",
      "helperText": "Raise the bottom of the drag select volume.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_recall_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Re-selects the stored selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_recall_selected_set",
      "helperText": "Re-selects the stored selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_remove_from_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove current area from the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_remove_from_selected_set",
      "helperText": "Remove current area from the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_select_allow_blocked",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "When selecting an area under nav_edit, allow area marked as blocked.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_select_allow_blocked",
      "helperText": "When selecting an area under nav_edit, allow area marked as blocked.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_select_area_id",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Select nav area with matching ID.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_select_area_id",
      "helperText": "Select nav area with matching ID.",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_select_block_id",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Select nav space block with matching ID.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_select_block_id",
      "helperText": "Select nav space block with matching ID.",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_select_hull",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Restrict area selection to areas that can support a hull of the given category",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_select_hull",
      "helperText": "Restrict area selection to areas that can support a hull of the given category",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_select_radius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Adds all areas in a radius to the selection set",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_select_radius",
      "helperText": "Adds all areas in a radius to the selection set",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_select_with_attribute",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Selects areas with the given attribute.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_select_with_attribute",
      "helperText": "Selects areas with the given attribute.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_set_movable_mesh_dormant_flag",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set the movable mesh dormant flag (0=active, 1=dormant)"
    },
    "uiData": {
      "label": "nav_set_movable_mesh_dormant_flag",
      "helperText": "Set the movable mesh dormant flag (0=active, 1=dormant)",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_show_area_connections",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show connections to selected area when true",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_show_area_connections",
      "helperText": "Show connections to selected area when true",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_show_area_info_font",
    "consoleData": {
      "defaultValue": "Consolas",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_show_area_info_font",
      "helperText": "",
      "type": "string",
      "defaultValue": "Consolas",
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_show_area_info_font_size",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_show_area_info_font_size",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_show_area_info_font_voffset",
    "consoleData": {
      "defaultValue": "-11",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "nav_show_area_info_font_voffset",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -11,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "nav_show_area_verts",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show area vertex positions",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_show_area_verts",
      "helperText": "Show area vertex positions",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_show_area_water_info",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_show_area_water_info",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_show_elem_info",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_show_elem_info",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_show_elem_info_font",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "Consolas",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_show_elem_info_font",
      "helperText": "",
      "type": "string",
      "defaultValue": "Consolas",
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_show_elem_info_font_size",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_show_elem_info_font_size",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_show_elem_info_font_voffset",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "-11",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_show_elem_info_font_voffset",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -11,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_show_potentially_visible",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "Show areas that are potentially visible from the current nav area",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_show_potentially_visible",
      "helperText": "Show areas that are potentially visible from the current nav area",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_constrain_results",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_constrain_results",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_constrain_results_relax",
    "consoleData": {
      "defaultValue": "0.006",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_constrain_results_relax",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.006,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_smooth_constrain_spring",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_constrain_spring",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_constrain_spring_relax",
    "consoleData": {
      "defaultValue": "0.01",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_constrain_spring_relax",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.01,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_smooth_draw_accel",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_draw_accel",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_draw_boundary",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_draw_boundary",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_draw_calc",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_draw_calc",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_draw_constraint_spline",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_draw_constraint_spline",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_draw_constraint_spring",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_draw_constraint_spring",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_draw_speed",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_draw_speed",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_enable",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_relax",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_relax",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_relax_use_timesteps",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_relax_use_timesteps",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_const_override",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_const_override",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_enable",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_factor_deriv",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_factor_deriv",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_factor_dist",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_factor_dist",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_factor_speed",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_factor_speed",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_forward_dist_base",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_forward_dist_base",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 50,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_forward_dist_time_limit",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_forward_dist_time_limit",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_max_dist",
    "consoleData": {
      "defaultValue": "36",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_max_dist",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 36,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_tension_max_override",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_tension_max_override",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_timestep_factor_accel",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_timestep_factor_accel",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 100,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_timestep_factor_speed",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_timestep_factor_speed",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 100,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_timestep_max",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_timestep_max",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.5,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_smooth_spring_timestep_min",
    "consoleData": {
      "defaultValue": "0.1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_timestep_min",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.1,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "nav_smooth_spring_yaw_rotation_speed",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_yaw_rotation_speed",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 50,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_spring_yaw_threshold",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_spring_yaw_threshold",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 20,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_smooth_use_opt",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_smooth_use_opt",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_space_select_dist",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_space_select_dist",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1000,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_split",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "To split an Area into two, align the split line using your cursor and invoke the split command.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_split",
      "helperText": "To split an Area into two, align the split line using your cursor and invoke the split command.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_split_show_line",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show the free split line.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_split_show_line",
      "helperText": "Show the free split line.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_store_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stores the current selected set for later retrieval.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_store_selected_set",
      "helperText": "Stores the current selected set for later retrieval.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_test_area_gravity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_area_gravity",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_dist_0",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_dist_0",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_dist_1",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_dist_1",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_dist_2",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_dist_2",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_hex",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Demonstrates searching hexagonal lattice over nav mesh.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_hex",
      "helperText": "Demonstrates searching hexagonal lattice over nav mesh.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_mark",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_mark",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_simple",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_simple",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_spacing_0",
    "consoleData": {
      "defaultValue": "24",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_spacing_0",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 24,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_spacing_1",
    "consoleData": {
      "defaultValue": "48",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_spacing_1",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 48,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_lattice_spacing_2",
    "consoleData": {
      "defaultValue": "96",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_lattice_spacing_2",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 96,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_bfs_simple",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_bfs_simple",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_boundary_zone_circle",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_boundary_zone_circle",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_boundary_zone_force",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_boundary_zone_force",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_boundary_zone_grid_dim",
    "consoleData": {
      "defaultValue": "90",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_boundary_zone_grid_dim",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 90,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_boundary_zone_path",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_boundary_zone_path",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_boundary_zone_rays",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_boundary_zone_rays",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 100,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_boundary_zone_rays_margin",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_boundary_zone_rays_margin",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_boundary_zone_rays_random",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_boundary_zone_rays_random",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_boundary_zone_sphere",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_boundary_zone_sphere",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_curve_opt",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_curve_opt",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_detour",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_detour",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_find_nearest",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_find_nearest",
      "helperText": "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_find_nearest_clear",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_find_nearest_clear",
      "helperText": "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_find_random_connected",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Demonstrates finding random points that are connected in the nav mesh to the start point.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_find_random_connected",
      "helperText": "Demonstrates finding random points that are connected in the nav mesh to the start point.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_find_random_connected_dist_max",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_find_random_connected_dist_max",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1000,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_find_random_connected_dist_min",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_find_random_connected_dist_min",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 100,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_find_z",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_find_z",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_force_npc_repath",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_force_npc_repath",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_genrt",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_genrt",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_genrt_place",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_genrt_place",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_genrt_tile_removal_extent",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "50",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_test_genrt_tile_removal_extent",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 50,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_genrt_tile_removal_place",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "label": "nav_test_genrt_tile_removal_place",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_getareaoverlapping_gravity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_getareaoverlapping_gravity",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_getnearestnav_gravity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_getnearestnav_gravity",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_level_hull",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Find entities that intrude into the nav mesh.  List those entities in console output, and display bounding boxes around them for a while.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_level_hull",
      "helperText": "Find entities that intrude into the nav mesh.  List those entities in console output, and display bounding boxes around them for a while.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_test_level_hull_move",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_level_hull_move",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_test_multi_connection",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_multi_connection",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_npc_area",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_npc_area",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_npc_collision",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_npc_collision",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_npc_collision_range",
    "consoleData": {
      "defaultValue": "250",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_npc_collision_range",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 250,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_npc_collision_show_geometry",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_npc_collision_show_geometry",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Calculate and draw a path from player/camera position to the test position.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path",
      "helperText": "Calculate and draw a path from player/camera position to the test position.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_expansion_search",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Extend nav_test_path by doing an expansion search on that path.  Convar value defines dist.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_expansion_search",
      "helperText": "Extend nav_test_path by doing an expansion search on that path.  Convar value defines dist.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_lock_goal",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Lock the pathfinding goal to the current intersection point.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_lock_goal",
      "helperText": "Lock the pathfinding goal to the current intersection point.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_lock_start",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Lock the pathfinding start to the current intersection point.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_lock_start",
      "helperText": "Lock the pathfinding start to the current intersection point.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_move",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_move",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_opt",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable path optimization for nav_edit_path paths.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_opt",
      "helperText": "Enable path optimization for nav_edit_path paths.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_opt_transitions",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_opt_transitions",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_return",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Calculate a return path from cursor position to the path calculated by nav_test_path.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_return",
      "helperText": "Calculate a return path from cursor position to the path calculated by nav_test_path.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_space",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Should nav_test_path test 3d navigation?  1 = space to space, 2 = multi-modal space/ground",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_space",
      "helperText": "Should nav_test_path test 3d navigation?  1 = space to space, 2 = multi-modal space/ground",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_space_fly",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Test flight paths",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_space_fly",
      "helperText": "Test flight paths",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_path_space_swim",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Test swim paths",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_path_space_swim",
      "helperText": "Test swim paths",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_ray_space",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_ray_space",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_rays",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_rays",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_smooth",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_smooth",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_smooth_extern_push",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_smooth_extern_push",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_smooth_in_speed",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_smooth_in_speed",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 120,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_smooth_in_yaw",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_smooth_in_yaw",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_smooth_path_speed",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_smooth_path_speed",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_smooth_separating_dist",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_smooth_separating_dist",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_smooth_spring_const",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_smooth_spring_const",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_smooth_spring_tension_max",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_smooth_spring_tension_max",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_spline",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_spline",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_split_obstacle",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_split_obstacle",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_split_obstacle_dirty",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_split_obstacle_dirty",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_split_obstacle_leave",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_split_obstacle_leave",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_split_obstacle_size",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_split_obstacle_size",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 30,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_test_split_obstacle_update_pos",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_test_split_obstacle_update_pos",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_toggle_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start or stop continuously removing from the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_toggle_deselecting",
      "helperText": "Start or stop continuously removing from the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_toggle_in_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove current area from the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_toggle_in_selected_set",
      "helperText": "Remove current area from the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_toggle_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles all areas into/out of the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_toggle_selected_set",
      "helperText": "Toggles all areas into/out of the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_toggle_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start or stop continuously adding to the selected set.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_toggle_selecting",
      "helperText": "Start or stop continuously adding to the selected set.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_unmark",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clears the marked Area or Ladder.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_unmark",
      "helperText": "Clears the marked Area or Ladder.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "nav_validate",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "Level of validation for nav system.  Higher will be slower.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_validate",
      "helperText": "Level of validation for nav system.  Higher will be slower.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nav_volume_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw or print debug information about nav volume queries.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nav_volume_debug",
      "helperText": "Draw or print debug information about nav volume queries.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_create_water_smooth_connections",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "navspace_create_water_smooth_connections",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_create_water_transition_connections",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "navspace_create_water_transition_connections",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_debug_pathfind",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "navspace_debug_pathfind",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_debug_stringpull",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "navspace_debug_stringpull",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_debug_trace",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "navspace_debug_trace",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_debug_transition_calc",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "navspace_debug_transition_calc",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_draw_changes_blocks",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw blocks when they change"
    },
    "uiData": {
      "label": "navspace_draw_changes_blocks",
      "helperText": "Draw blocks when they change",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_draw_changes_waters",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw water volumes when they change"
    },
    "uiData": {
      "label": "navspace_draw_changes_waters",
      "helperText": "Draw water volumes when they change",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "navspace_draw_water_changes",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw changes in water volumes",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "navspace_draw_water_changes",
      "helperText": "Draw changes in water volumes",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    },
    "deprecated": true
  },
  {
    "command": "navspace_path_use_water_level_locator",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "navspace_path_use_water_level_locator",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nextlevel",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": "If set to a valid map name, will trigger a changelevel to the specified map at the end of the round",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nextlevel",
      "helperText": "If set to a valid map name, will trigger a changelevel to the specified map at the end of the round",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "nextmap_print_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled prints next map to clients",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "nextmap_print_enabled",
      "helperText": "When enabled prints next map to clients",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "noclip",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "noclip",
      "helperText": "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "noclip_fixup",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "noclip_fixup",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "notarget",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle. Player becomes hidden to NPCs.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "notarget",
      "helperText": "Toggle. Player becomes hidden to NPCs.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "particle_test_attach_attachment",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Attachment index for attachment mode",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "particle_test_attach_attachment",
      "helperText": "Attachment index for attachment mode",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "particle_test_attach_mode",
    "consoleData": {
      "defaultValue": "follow_attachment",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "particle_test_attach_mode",
      "helperText": "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'",
      "type": "string",
      "defaultValue": "follow_attachment",
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "particle_test_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Creates the named particle system where the player is looking.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "particle_test_create",
      "helperText": "Creates the named particle system where the player is looking.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "particle_test_destroy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Destroys all particle systems matching the specified name.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "particle_test_destroy",
      "helperText": "Destroys all particle systems matching the specified name.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "particle_test_file",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Name of the particle system to dynamically spawn",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "particle_test_file",
      "helperText": "Name of the particle system to dynamically spawn",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "particle_test_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Dispatches the test particle system with the parameters specified in particle_test_file,  particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "particle_test_start",
      "helperText": "Dispatches the test particle system with the parameters specified in particle_test_file,  particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "particle_test_stop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stops all particle systems on the selected entities.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "particle_test_stop",
      "helperText": "Stops all particle systems on the selected entities.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "phys_joint_teleport",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Teleport joint anchors if connected to world",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "phys_joint_teleport",
      "helperText": "Teleport joint anchors if connected to world",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "phys_length_damping_ratio",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Spring damping ratio for length constraint",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "phys_length_damping_ratio",
      "helperText": "Spring damping ratio for length constraint",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "phys_length_frequency",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Spring stiffness for length constraint",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "phys_length_frequency",
      "helperText": "Spring stiffness for length constraint",
      "type": "unknown_integer",
      "defaultValue": 5,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "phys_mark_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Mark object for debug",
      "sourcedAt": "2025-07-28T00:00:00Z"
    },
    "uiData": {
      "label": "phys_mark_debug",
      "helperText": "Mark object for debug",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    },
    "deprecated": true
  },
  {
    "command": "phys_shoot",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Shoots a phys object.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "phys_shoot",
      "helperText": "Shoots a phys object.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "phys_use_block_solver",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Use block solving for constraint entities",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "phys_use_block_solver",
      "helperText": "Use block solving for constraint entities",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "plant_bomb",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Plant a bomb where the player is looking.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "plant_bomb",
      "helperText": "Plant a bomb where the player is looking.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "player_debug_off_nav",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "player_debug_off_nav",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "player_debug_print_damage",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "When true, print amount and type of all damage received by player to console.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "player_debug_print_damage",
      "helperText": "When true, print amount and type of all damage received by player to console.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "player_ping",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Creates a ping notification where the player is looking.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "player_ping",
      "helperText": "Creates a ping notification where the player is looking.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "player_ping_token_cooldown",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "cheat",
        "release"
      ],
      "description": "Cooldown for how long it takes for a player's ping token to refresh allowing them to ping again (they get 5 tokens).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "player_ping_token_cooldown",
      "helperText": "Cooldown for how long it takes for a player's ping token to refresh allowing them to ping again (they get 5 tokens).",
      "type": "unknown_integer",
      "defaultValue": 20,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "print_mapgroup_sv",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Prints the current mapgroup and the contained maps",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "print_mapgroup_sv",
      "helperText": "Prints the current mapgroup and the contained maps",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "prop_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "prop_debug",
      "helperText": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "prop_debug_collision",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Highlights props based on their collision group: COLLISION_GROUP_PROPS(white), COLLISION_GROUP_INTERACTIVE_DEBRIS(green), COLLISION_GROUP_DEBRIS and will return to COLLISION_GROUP_INTERACTIVE_DEBRIS on sleeping(bright red), COLLISION_GROUP_DEBRIS permanently (dark red), COLLISION_GROUP_DEBRIS(blue), OTHER(grey)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "prop_debug_collision",
      "helperText": "Highlights props based on their collision group: COLLISION_GROUP_PROPS(white), COLLISION_GROUP_INTERACTIVE_DEBRIS(green), COLLISION_GROUP_DEBRIS and will return to COLLISION_GROUP_INTERACTIVE_DEBRIS on sleeping(bright red), COLLISION_GROUP_DEBRIS permanently (dark red), COLLISION_GROUP_DEBRIS(blue), OTHER(grey)",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "prop_dynamic_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Creates a dynamic prop with a specific .vmdl aimed away from where the player is looking.  Arguments: {.vmdl name}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "prop_dynamic_create",
      "helperText": "Creates a dynamic prop with a specific .vmdl aimed away from where the player is looking.  Arguments: {.vmdl name}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "prop_physics_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Creates a physics prop with a specific .vmdl aimed away from where the player is looking.  Arguments: {.vmdl name}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "prop_physics_create",
      "helperText": "Creates a physics prop with a specific .vmdl aimed away from where the player is looking.  Arguments: {.vmdl name}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "pulse_debug_entity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Opens a graph referencing the selected entity. If it is referenced by more than 1 graph, list all the active pulse graph instances referring to that entity so you can pick which one you want.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "pulse_debug_entity",
      "helperText": "Opens a graph referencing the selected entity. If it is referenced by more than 1 graph, list all the active pulse graph instances referring to that entity so you can pick which one you want.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "pvs_debugentity",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Verbose spew for this entity when doing IsInPVS computation.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "pvs_debugentity",
      "helperText": "Verbose spew for this entity when doing IsInPVS computation.",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "pvs_flowtype",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Flow through spawn groups for vis (0 == default, 1 == always visible, 2 == never visible.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "pvs_flowtype",
      "helperText": "Flow through spawn groups for vis (0 == default, 1 == always visible, 2 == never visible.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "radarvisdistance",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "at this distance and beyond you need to be point right at someone to see them",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "radarvisdistance",
      "helperText": "at this distance and beyond you need to be point right at someone to see them",
      "type": "unknown_integer",
      "defaultValue": 1000,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "radarvismaxdot",
    "consoleData": {
      "defaultValue": "0.996",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "how closely you have to point at someone to see them beyond max distance",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "radarvismaxdot",
      "helperText": "how closely you have to point at someone to see them beyond max distance",
      "type": "float",
      "defaultValue": 0.996,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "radarvismethod",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "0 for traditional method, 1 for more realistic method",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "radarvismethod",
      "helperText": "0 for traditional method, 1 for more realistic method",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "radarvispow",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "the degree to which you can point away from a target, and still see them on radar.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "radarvispow",
      "helperText": "the degree to which you can point away from a target, and still see them on radar.",
      "type": "float",
      "defaultValue": 0.4,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "rangefinder",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Measures distance along a ray",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "rangefinder",
      "helperText": "Measures distance along a ray",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "rangefinder2d",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Measures distance along a ray, only measuring along XY plane.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "rangefinder2d",
      "helperText": "Measures distance along a ray, only measuring along XY plane.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "remove_weapon",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove a weapon held by the player.  Arguments: <weapon subclass name>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "remove_weapon",
      "helperText": "Remove a weapon held by the player.  Arguments: <weapon subclass name>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "replay_death",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "start hltv replay of last death",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "replay_death",
      "helperText": "start hltv replay of last death",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "replay_start",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start Source2 TV replay: replay_start <delay> [<player name or index>]"
    },
    "uiData": {
      "label": "replay_start",
      "helperText": "Start GOTV replay: replay_start <delay> [<player name or index>]",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "replay_stop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "stop hltv replay",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "replay_stop",
      "helperText": "stop hltv replay",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "respawn_player",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Respawns the player from death!",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "respawn_player",
      "helperText": "Respawns the player from death!",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "rr_dump_rules",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Print all response rules"
    },
    "uiData": {
      "label": "rr_dump_rules",
      "helperText": "Print all response rules",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "rr_followup_maxdist",
    "consoleData": {
      "defaultValue": "1800",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "rr_followup_maxdist",
      "helperText": "'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance.",
      "type": "unknown_integer",
      "defaultValue": 1800,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "rr_forceconcept",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "fire a response concept directly at a given character. USAGE: rr_forceconcept <target name or index> <concept> 'criteria1:value1,criteria2:value2,...' criteria values are optional.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "rr_forceconcept",
      "helperText": "fire a response concept directly at a given character. USAGE: rr_forceconcept <target name or index> <concept> 'criteria1:value1,criteria2:value2,...' criteria values are optional.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "rr_reloadresponsesystems",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Reload all response system scripts.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "rr_reloadresponsesystems",
      "helperText": "Reload all response system scripts.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "rr_thenany_score_slop",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "a",
        "cheat"
      ],
      "description": "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "rr_thenany_score_slop",
      "helperText": "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "save_animgraph_recording",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Saves all active animgraph recordings to disk  Arguments: automaticallyOpenInAnimgraphEditor"
    },
    "uiData": {
      "label": "save_animgraph_recording",
      "helperText": "Saves all active animgraph recordings to disk",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "save_maxarray_spew",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Max number of array entries to spew when using SaveRestoreIO spewing.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "save_maxarray_spew",
      "helperText": "Max number of array entries to spew when using SaveRestoreIO spewing.",
      "type": "unknown_integer",
      "defaultValue": 10,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "say",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Display player message",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "say",
      "helperText": "Display player message",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "say_team",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Display player message to team",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "say_team",
      "helperText": "Display player message to team",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "scene_playvcd",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Play the given VCD as an instanced scripted scene.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "scene_playvcd",
      "helperText": "Play the given VCD as an instanced scripted scene.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_add_debug_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add a filter to the game debug overlay",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_add_debug_filter",
      "helperText": "Add a filter to the game debug overlay",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_add_watch",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add a watch to the game debug overlay",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_add_watch",
      "helperText": "Add a watch to the game debug overlay",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_add_watch_pattern",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add a watch to the game debug overlay",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_add_watch_pattern",
      "helperText": "Add a watch to the game debug overlay",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_attach_debugger",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Connect the vscript VM to the script debugger",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_attach_debugger",
      "helperText": "Connect the vscript VM to the script debugger",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_clear_watches",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clear all watches from the game debug overlay",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_clear_watches",
      "helperText": "Clear all watches from the game debug overlay",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle the in-game script debug features",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_debug",
      "helperText": "Toggle the in-game script debug features",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_dump_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Dump the state of the VM to the console",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_dump_all",
      "helperText": "Dump the state of the VM to the console",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_find",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Find a key in the VM",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_find",
      "helperText": "Find a key in the VM",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_help",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Output help for script functions",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_help",
      "helperText": "Output help for script functions",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_reload",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Reload scripts",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_reload",
      "helperText": "Reload scripts",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_reload_code",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Execute a vscript file, replacing existing functions with the functions in the run script",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_reload_code",
      "helperText": "Execute a vscript file, replacing existing functions with the functions in the run script",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_reload_entity_code",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_reload_entity_code",
      "helperText": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_remove_debug_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove a filter from the game debug overlay",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_remove_debug_filter",
      "helperText": "Remove a filter from the game debug overlay",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_remove_watch",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove a watch from the game debug overlay",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_remove_watch",
      "helperText": "Remove a watch from the game debug overlay",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_remove_watch_pattern",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove a watch from the game debug overlay",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_remove_watch_pattern",
      "helperText": "Remove a watch from the game debug overlay",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_resurrect_unreachable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Use the garbage collector to track down reference cycles",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_resurrect_unreachable",
      "helperText": "Use the garbage collector to track down reference cycles",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_trace_disable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn off a particular trace output by file or function name",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_trace_disable",
      "helperText": "Turn off a particular trace output by file or function name",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_trace_disable_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn off all trace output",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_trace_disable_all",
      "helperText": "Turn off all trace output",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_trace_disable_key",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn off a particular trace output by table/instance",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_trace_disable_key",
      "helperText": "Turn off a particular trace output by table/instance",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_trace_enable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn on a particular trace output by file or function name",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_trace_enable",
      "helperText": "Turn on a particular trace output by file or function name",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_trace_enable_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn on all trace output",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_trace_enable_all",
      "helperText": "Turn on all trace output",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "script_trace_enable_key",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn on a particular trace output by table/instance",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "script_trace_enable_key",
      "helperText": "Turn on a particular trace output by table/instance",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "server_snd_cast",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "server_snd_cast",
      "helperText": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "servercfgfile",
    "consoleData": {
      "defaultValue": "server.cfg",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "servercfgfile",
      "helperText": "",
      "type": "string",
      "defaultValue": "server.cfg",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "setang",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "setang",
      "helperText": "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats).",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "setang_exact",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "setang_exact",
      "helperText": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats).",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "setmodel",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Changes's player's model",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "setmodel",
      "helperText": "Changes's player's model",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "setpos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Move player to specified origin (must have sv_cheats).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "setpos",
      "helperText": "Move player to specified origin (must have sv_cheats).",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "setpos_exact",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Move player to an exact specified origin (must have sv_cheats).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "setpos_exact",
      "helperText": "Move player to an exact specified origin (must have sv_cheats).",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "setpos_player",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Move specified player to specified origin (must have sv_cheats).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "setpos_player",
      "helperText": "Move specified player to specified origin (must have sv_cheats).",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "shake",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Shake the screen.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "shake",
      "helperText": "Shake the screen.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "shatterglass_break",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "shatterglass_break",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "shatterglass_restore",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "shatterglass_restore",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "showents",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Dump entity list to console."
    },
    "uiData": {
      "label": "showents",
      "helperText": "Dump entity list to console.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "showtriggers",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable or Disable showing trigger entities",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "showtriggers",
      "helperText": "Enable or Disable showing trigger entities",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "showtriggers_toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the movement bounding box for the triggers in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "showtriggers_toggle",
      "helperText": "Displays the movement bounding box for the triggers in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "skeleton_instance_smear_boneflags",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Smear boneflags across the model.  Costs computation, but tests to make sure your bone flags are consistent.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "skeleton_instance_smear_boneflags",
      "helperText": "Smear boneflags across the model.  Costs computation, but tests to make sure your bone flags are consistent.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "snd_foliage_db_loss",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "foliage dB loss per 1200 units",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "snd_foliage_db_loss",
      "helperText": "foliage dB loss per 1200 units",
      "type": "unknown_integer",
      "defaultValue": 4,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "snd_new_visualize",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays soundevent name played at it's 3d position",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "snd_new_visualize",
      "helperText": "Displays soundevent name played at it's 3d position",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "soundscape_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "soundscape_debug",
      "helperText": "When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "spawn_group_activate",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Activate specified spawngroup.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "spawn_group_activate",
      "helperText": "Activate specified spawngroup.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "spawn_group_load",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Load named spawn group.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "spawn_group_load",
      "helperText": "Load named spawn group.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "spawn_group_unload",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Unload named spawn group.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "spawn_group_unload",
      "helperText": "Unload named spawn group.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "spec_replay_bot",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enable Spectator Hltv Replay when killed by bot",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "spec_replay_bot",
      "helperText": "Enable Spectator Hltv Replay when killed by bot",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "spec_replay_round_delay",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Round can be delayed by this much due to someone watching a replay; must be at least 3-4 seconds, otherwise the last replay will always be interrupted by round start, assuming normal pause between round_end and round_start events (7 seconds) and freezecam delay (2 seconds) and 7.4 second full replay (5.4 second pre-death and ~2 seconds post-death) and replay in/out switching (up to a second)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "spec_replay_round_delay",
      "helperText": "Round can be delayed by this much due to someone watching a replay; must be at least 3-4 seconds, otherwise the last replay will always be interrupted by round start, assuming normal pause between round_end and round_start events (7 seconds) and freezecam delay (2 seconds) and 7.4 second full replay (5.4 second pre-death and ~2 seconds post-death) and replay in/out switching (up to a second)",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "spec_replay_winddown_time",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The trailing time, in seconds, of replay past the event, including fade-out",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "spec_replay_winddown_time",
      "helperText": "The trailing time, in seconds, of replay past the event, including fade-out",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "subclass_change",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Changes the subclass of the given entity.  Arguments:    <new_subclass> {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "subclass_change",
      "helperText": "Changes the subclass of the given entity.  Arguments:    <new_subclass> {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "subclass_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Creates an entity of the given subclass where the player is looking.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "subclass_create",
      "helperText": "Creates an entity of the given subclass where the player is looking.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "surfaceprop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Reports the surface properties at the cursor",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "surfaceprop",
      "helperText": "Reports the surface properties at the cursor",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "suspicious_hit_odds_threshold",
    "consoleData": {
      "defaultValue": "0.01",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "suspicious_hit_odds_threshold",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.01,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "suspicious_hit_player_radius",
    "consoleData": {
      "defaultValue": "8",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "suspicious_hit_player_radius",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 8,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "suspicious_hit_strategy",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "What to do about suspicious hits. 0: Nothing. 1: Skip the bullet. 2: Skip the bullet and re-roll a new bullet.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "suspicious_hit_strategy",
      "helperText": "What to do about suspicious hits. 0: Nothing. 1: Skip the bullet. 2: Skip the bullet and re-roll a new bullet.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_allchat",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": "Players can receive all other players' text chat, no death restrictions",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_allchat",
      "helperText": "Players can receive all other players' text chat, no death restrictions",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_allow_votes",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow voting?",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_allow_votes",
      "helperText": "Allow voting?",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_alltalk",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": "Players can hear all other players' voice communication, no team restrictions",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_alltalk",
      "helperText": "Players can hear all other players' voice communication, no team restrictions",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_adjust_bot_difficulty",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Adjust the difficulty of bots each round based on contribution score.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_adjust_bot_difficulty",
      "helperText": "Adjust the difficulty of bots each round based on contribution score.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_cstrafe_attempt_window",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The length of the window of trailing counter-strafe attempts considered during input automation detection.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_cstrafe_attempt_window",
      "helperText": "The length of the window of trailing counter-strafe attempts considered during input automation detection.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_cstrafe_kick",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Whether or not to kick players when counter-strafe input automation is detected.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_cstrafe_kick",
      "helperText": "Whether or not to kick players when counter-strafe input automation is detected.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_cstrafe_logging",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "0: never, 1: every time counter-strafe input automation is detected, 2: every counter-strafe",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_cstrafe_logging",
      "helperText": "0: never, 1: every time counter-strafe input automation is detected, 2: every counter-strafe",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_cstrafe_lower_overlap_pct_threshold",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The percentage of overlapping attempts in the attempt window below which input automation detection is triggered at the success threshold.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_cstrafe_lower_overlap_pct_threshold",
      "helperText": "The percentage of overlapping attempts in the attempt window below which input automation detection is triggered at the success threshold.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_cstrafe_min_attempts",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The minimum number of counter-strafe attempts required for input automation detection. The player must be moving more than 135.2 units/s for their counter-strafe to be considered an attempt. An attempt is either considered a success (counter-strafing took place within a single tick), an overlap (both directions were held for 1+ ticks) or an underlap (neither direction was held for 1+ ticks).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_cstrafe_min_attempts",
      "helperText": "The minimum number of counter-strafe attempts required for input automation detection. The player must be moving more than 135.2 units/s for their counter-strafe to be considered an attempt. An attempt is either considered a success (counter-strafing took place within a single tick), an overlap (both directions were held for 1+ ticks) or an underlap (neither direction was held for 1+ ticks).",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_cstrafe_sequence_length",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The length of sequential counter-strafe attempts evaluated relative to the success threshold. Input automation detection considers the best sequence within the larger attempt window.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_cstrafe_sequence_length",
      "helperText": "The length of sequential counter-strafe attempts evaluated relative to the success threshold. Input automation detection considers the best sequence within the larger attempt window.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_cstrafe_success_threshold",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The minimum number of successful counter-strafes within a best sequence that will trigger input automation detection. The number of successes that trigger input automation detection is interpolated between the success threshold and a 'perfect' sequence (all counter-strafes in a sequence are successes), depending on the player's percentage of overlapping counter-strafe attempts.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_cstrafe_success_threshold",
      "helperText": "The minimum number of successful counter-strafes within a best sequence that will trigger input automation detection. The number of successes that trigger input automation detection is interpolated between the success threshold and a 'perfect' sequence (all counter-strafes in a sequence are successes), depending on the player's percentage of overlapping counter-strafe attempts.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_cstrafe_upper_overlap_pct_threshold",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The percentage of overlapping attempts in the attempt window below which input automation detection is triggered when all counter-strafes in a sequence are successes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_cstrafe_upper_overlap_pct_threshold",
      "helperText": "The percentage of overlapping attempts in the attempt window below which input automation detection is triggered when all counter-strafes in a sequence are successes.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_auto_full_alltalk_during_warmup_half_end",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_auto_full_alltalk_during_warmup_half_end",
      "helperText": "When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_autoexec_mapname_cfg",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Execute a mapname cfg file on the server automatically in custom game modes that require it.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_autoexec_mapname_cfg",
      "helperText": "Execute a mapname cfg file on the server automatically in custom game modes that require it.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_banid_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Whether server supports banid command",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_banid_enabled",
      "helperText": "Whether server supports banid command",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_bot_buy_decoy_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_bot_buy_decoy_weight",
      "helperText": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_bot_buy_flash_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_bot_buy_flash_weight",
      "helperText": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_bot_buy_grenade_chance",
    "consoleData": {
      "defaultValue": "33",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Chance bots will buy a grenade with leftover money (after prim, sec and armor). Input as percent (0-100.0)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_bot_buy_grenade_chance",
      "helperText": "Chance bots will buy a grenade with leftover money (after prim, sec and armor). Input as percent (0-100.0)",
      "type": "unknown_integer",
      "defaultValue": 33,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_bot_buy_hegrenade_weight",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_bot_buy_hegrenade_weight",
      "helperText": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "type": "unknown_integer",
      "defaultValue": 6,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_bot_buy_molotov_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_bot_buy_molotov_weight",
      "helperText": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_bot_buy_smoke_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_bot_buy_smoke_weight",
      "helperText": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_bots_get_easier_each_win",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If > 0, some # of bots will lower thier difficulty each time they win. The argument defines how many will lower their difficulty each time.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_bots_get_easier_each_win",
      "helperText": "If > 0, some # of bots will lower thier difficulty each time they win. The argument defines how many will lower their difficulty each time.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_buymenu_open_prevents_opportunistic_pickup",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_buymenu_open_prevents_opportunistic_pickup",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_clockcorrection_msecs",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_clockcorrection_msecs",
      "helperText": "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount",
      "type": "unknown_integer",
      "defaultValue": 30,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_cluster",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Data center cluster this server lives in.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_cluster",
      "helperText": "Data center cluster this server lives in.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_cq_trim_bloat_remainder",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When trimming a bloated CQ, leave at least N more commands than the minimum",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_cq_trim_bloat_remainder",
      "helperText": "When trimming a bloated CQ, leave at least N more commands than the minimum",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_cq_trim_bloat_space",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When trimming a bloated CQ, try to leave room for N more commands to be added.  0 will trim only what is needed to remove the immediate bloat, a very large value will reset the whole queue.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_cq_trim_bloat_space",
      "helperText": "When trimming a bloated CQ, try to leave room for N more commands to be added.  0 will trim only what is needed to remove the immediate bloat, a very large value will reset the whole queue.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_cq_trim_catchup_remainder",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When trimming an overful CQ due to app 'catchup' request, leave at least N more commands than the minimum",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_cq_trim_catchup_remainder",
      "helperText": "When trimming an overful CQ due to app 'catchup' request, leave at least N more commands than the minimum",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_debug_client_not_in_pvs",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If set, draw failed client PVS checks with red box",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_debug_client_not_in_pvs",
      "helperText": "If set, draw failed client PVS checks with red box",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_debug_overlays_bandwidth",
    "consoleData": {
      "defaultValue": "65536",
      "flags": [
        "release"
      ],
      "description": "Broadcast server debug overlays traffic",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_debug_overlays_bandwidth",
      "helperText": "Broadcast server debug overlays traffic",
      "type": "unknown_integer",
      "defaultValue": 65536,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_debug_overlays_broadcast",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "nf",
        "cheat",
        "release"
      ],
      "description": "Broadcast server debug overlays",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_debug_overlays_broadcast",
      "helperText": "Broadcast server debug overlays",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_deltaticks_enforce",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "By default, player must ack delta ticks in order. How to enforce it: 2 = kick all clients, 1 = kick only TV clients, 0 = do not kick.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_deltaticks_enforce",
      "helperText": "By default, player must ack delta ticks in order. How to enforce it: 2 = kick all clients, 1 = kick only TV clients, 0 = do not kick.",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_deltaticks_log",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "Whether diagnostic logging is enabled when clients ack delta ticks out of order. Policy: 2 = log all out of order acks, 1 = log only when disconnect is triggered, 0 = do not log.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_deltaticks_log",
      "helperText": "Whether diagnostic logging is enabled when clients ack delta ticks out of order. Policy: 2 = log all out of order acks, 1 = log only when disconnect is triggered, 0 = do not log.",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_disconnected_players_cleanup_delay",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Delay between player disconnecting and their corpse getting cleaned up.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_disconnected_players_cleanup_delay",
      "helperText": "Delay between player disconnecting and their corpse getting cleaned up.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_enable_alternate_baselines",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "release"
      ],
      "description": "Allow alternate baseline system, set to 2 for debugging spew.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_enable_alternate_baselines",
      "helperText": "Allow alternate baseline system, set to 2 for debugging spew.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_enable_delta_packing",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_enable_delta_packing",
      "helperText": "When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_enable_removearrayelementsoutsidemetadatabounds",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "label": "sv_enable_removearrayelementsoutsidemetadatabounds",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_ent_showonlyhitbox",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_ent_showonlyhitbox",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_ents_write_alarm",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Print callstack every time CNetworkGameServerBase::WriteEntityUpdate takes more than this amount of milliseconds",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_ents_write_alarm",
      "helperText": "Print callstack every time CNetworkGameServerBase::WriteEntityUpdate takes more than this amount of milliseconds",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_flashed_amount_for_blind_kill",
    "consoleData": {
      "defaultValue": "0.7",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Minimum flashed alpha value for a player to be awarded a blind kill on the kill feed.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_flashed_amount_for_blind_kill",
      "helperText": "Minimum flashed alpha value for a player to be awarded a blind kill on the kill feed.",
      "type": "float",
      "defaultValue": 0.7,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "sv_game_mode_flags",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Dedicated server game mode flags to run",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_game_mode_flags",
      "helperText": "Dedicated server game mode flags to run",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_guardian_extra_equipment_ct",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Extra starting equipment for CT players in guardian modes",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_guardian_extra_equipment_ct",
      "helperText": "Extra starting equipment for CT players in guardian modes",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_guardian_extra_equipment_t",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Extra starting equipment for Terrorist players in guardian modes",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_guardian_extra_equipment_t",
      "helperText": "Extra starting equipment for Terrorist players in guardian modes",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_guardian_refresh_ammo_for_items_on_waves",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "List of additional weapons to refill ammo on waves.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_guardian_refresh_ammo_for_items_on_waves",
      "helperText": "List of additional weapons to refill ammo on waves.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_guardian_spawn_health_ct",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Starting health in guardian modes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_guardian_spawn_health_ct",
      "helperText": "Starting health in guardian modes.",
      "type": "unknown_integer",
      "defaultValue": 100,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_guardian_spawn_health_t",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Starting health in guardian modes.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_guardian_spawn_health_t",
      "helperText": "Starting health in guardian modes.",
      "type": "unknown_integer",
      "defaultValue": 100,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_hibernate_postgame_delay",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "release"
      ],
      "description": "# of seconds to wait after final client leaves before hibernating.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_hibernate_postgame_delay",
      "helperText": "# of seconds to wait after final client leaves before hibernating.",
      "type": "unknown_integer",
      "defaultValue": 5,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_hibernate_when_empty",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Puts the server into extremely low CPU usage mode when no clients connected",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_hibernate_when_empty",
      "helperText": "Puts the server into extremely low CPU usage mode when no clients connected",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_hoststate_quit_syscall",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "When enabled, game server will quit immediately via syscall instead of running host states shutdown sequence",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_hoststate_quit_syscall",
      "helperText": "When enabled, game server will quit immediately via syscall instead of running host states shutdown sequence",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_ignoregrenaderadio",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Turn off Fire in the hole messages",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_ignoregrenaderadio",
      "helperText": "Turn off Fire in the hole messages",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_lagcomp_filterbyviewangle",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If true, player pawn will filter lag compensation targets by their view angle."
    },
    "uiData": {
      "label": "sv_lagcomp_filterbyviewangle",
      "helperText": "If true, player pawn will filter lag compensation targets by their view angle.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_lagcompensationforcerestore",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Don't test validity of a lag comp restore, just do it.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_lagcompensationforcerestore",
      "helperText": "Don't test validity of a lag comp restore, just do it.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_lan",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_lan",
      "helperText": "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_late_commands_allowed",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow N late commands to run at 0 timescale prior to running an on-time command. Negative values for network round trip based calculation with a hard cap of the of absolute value",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_late_commands_allowed",
      "helperText": "Allow N late commands to run at 0 timescale prior to running an on-time command. Negative values for network round trip based calculation with a hard cap of the of absolute value",
      "type": "unknown_integer",
      "defaultValue": 5,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_lightquery_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_lightquery_debug",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_limit_buyrandom_per_life",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enable to limit buyrandom command to only run once per player life",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_limit_buyrandom_per_life",
      "helperText": "Enable to limit buyrandom command to only run once per player life",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_load_forced_client_names_file",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Loads a file containing SteamID64 names for clients",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_load_forced_client_names_file",
      "helperText": "Loads a file containing SteamID64 names for clients",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_load_random_client_names_file",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Loads a file containing random name words for clients",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_load_random_client_names_file",
      "helperText": "Loads a file containing random name words for clients",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_log_http_record_before_any_listeners",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_log_http_record_before_any_listeners",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_log_onefile",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "release"
      ],
      "description": "Log server information to only one file.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_log_onefile",
      "helperText": "Log server information to only one file.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": false
    }
  },
  {
    "command": "sv_log_roundstats",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_log_roundstats",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_logbans",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "release"
      ],
      "description": "Log server bans in the server logs.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_logbans",
      "helperText": "Log server bans in the server logs.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": false
    }
  },
  {
    "command": "sv_logblocks",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "If true when log when a query is blocked (can cause very large log files)",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_logblocks",
      "helperText": "If true when log when a query is blocked (can cause very large log files)",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_logecho",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a",
        "release"
      ],
      "description": "Echo log information to the console.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_logecho",
      "helperText": "Echo log information to the console.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": false
    }
  },
  {
    "command": "sv_logfile",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "release"
      ],
      "description": "Log server information in the log file.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_logfile",
      "helperText": "Log server information in the log file.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": false
    }
  },
  {
    "command": "sv_logflush",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "release"
      ],
      "description": "Flush the log file to disk on each write (slow).",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_logflush",
      "helperText": "Flush the log file to disk on each write (slow).",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": false
    }
  },
  {
    "command": "sv_logsdir",
    "consoleData": {
      "defaultValue": "logs",
      "flags": [
        "a",
        "release"
      ],
      "description": "Folder in the game directory where server logs will be stored.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_logsdir",
      "helperText": "Folder in the game directory where server logs will be stored.",
      "type": "string",
      "defaultValue": "logs",
      "requiresCheats": false,
      "hideFromDefaultView": false
    }
  },
  {
    "command": "sv_mapvetopickvote_maps",
    "consoleData": {
      "defaultValue": "de_inferno,de_mirage,de_train,de_dust2,de_nuke,de_ancient,de_overpass",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Which maps are used for map veto pick sequence",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_mapvetopickvote_maps",
      "helperText": "Which maps are used for map veto pick sequence",
      "type": "string",
      "defaultValue": "de_inferno,de_mirage,de_train,de_dust2,de_nuke,de_ancient,de_overpass",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_mapvetopickvote_phase_duration",
    "consoleData": {
      "defaultValue": "[1:5][2:15][3:20][4:10][5:10][6:5]",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How many seconds each phase lasts",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_mapvetopickvote_phase_duration",
      "helperText": "How many seconds each phase lasts",
      "type": "string",
      "defaultValue": "[1:5][2:15][3:20][4:10][5:10][6:5]",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_mapvetopickvote_rnd",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled will shuffle veto pick maps list order every time",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_mapvetopickvote_rnd",
      "helperText": "When enabled will shuffle veto pick maps list order every time",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_matchend_drops_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_matchend_drops_enabled",
      "helperText": "Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_max_deathmatch_respawns_per_tick",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_max_deathmatch_respawns_per_tick",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_max_queries_sec",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "release"
      ],
      "description": "Maximum queries per second to respond to from a single IP address.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_max_queries_sec",
      "helperText": "Maximum queries per second to respond to from a single IP address.",
      "type": "unknown_integer",
      "defaultValue": 3,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_max_queries_sec_global",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "release"
      ],
      "description": "Maximum queries per second to respond to from anywhere.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_max_queries_sec_global",
      "helperText": "Maximum queries per second to respond to from anywhere.",
      "type": "unknown_integer",
      "defaultValue": 60,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_max_queries_window",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "release"
      ],
      "description": "Window over which to average queries per second averages.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_max_queries_window",
      "helperText": "Window over which to average queries per second averages.",
      "type": "unknown_integer",
      "defaultValue": 30,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_maxunlag_player",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "-1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If >0, maximumum lag compensation used for other human pawns. Applied after sv_maxunlag!"
    },
    "uiData": {
      "label": "sv_maxunlag_player",
      "helperText": "If >0, maximumum lag compensation used for other human pawns. Applied after sv_maxunlag!",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_maxuptimelimit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Number of hours to operate before trying sv_shutdown.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_maxuptimelimit",
      "helperText": "Number of hours to operate before trying sv_shutdown.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_memlimit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat",
        "release"
      ],
      "description": "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_memlimit",
      "helperText": "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_merge_changes_after_tick_with_calcdelta",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "release"
      ],
      "description": "This fixes bugs where pure calcdelta is used due to recipient changing but it doesn't pick up a field change where the value was changed back to same value as the from snapshot even though the destination fields change list does note the change. Set to 2 to spew any changes merged in by this fix.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_merge_changes_after_tick_with_calcdelta",
      "helperText": "This fixes bugs where pure calcdelta is used due to recipient changing but it doesn't pick up a field change where the value was changed back to same value as the from snapshot even though the destination fields change list does note the change. Set to 2 to spew any changes merged in by this fix.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_metaduplication",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Check serializer meta for duplication, add verbose to command for full spew",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_metaduplication",
      "helperText": "Check serializer meta for duplication, add verbose to command for full spew",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_networkvar_perfieldtracking",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Track individual field offset changes, rather than a single dirty flag for the whole entity.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_networkvar_perfieldtracking",
      "helperText": "Track individual field offset changes, rather than a single dirty flag for the whole entity.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_networkvar_validate",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Validate each StateChanged against known offsets.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_networkvar_validate",
      "helperText": "Validate each StateChanged against known offsets.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_packstats",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Show entity packing stats, pass 'clear' as argument to reset counts.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_packstats",
      "helperText": "Show entity packing stats, pass 'clear' as argument to reset counts.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_parallel_checktransmit",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Set to 1 to use threaded checkentities for transmit/pvs on listen servers, 2 for dedicated servers.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_parallel_checktransmit",
      "helperText": "Set to 1 to use threaded checkentities for transmit/pvs on listen servers, 2 for dedicated servers.",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_parallel_packentities",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "Set to 1 to use threaded snapshot sending on listen servers, 2 for dedicated servers.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_parallel_packentities",
      "helperText": "Set to 1 to use threaded snapshot sending on listen servers, 2 for dedicated servers.",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_parallel_sendsnapshot",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "0: run all send jobs on main thread; 1: send jobs run asynchronously (except on dedicated server); 2: send jobs asynchronously; 3: send jobs run in parallel but block to not overlap the next tick; 4: main server clients' send jobs run in parallel, then HLTV server jobs; this approximately matches pre-async profile for a single HLTV server configuration",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_parallel_sendsnapshot",
      "helperText": "0: run all send jobs on main thread; 1: send jobs run asynchronously (except on dedicated server); 2: send jobs asynchronously; 3: send jobs run in parallel but block to not overlap the next tick; 4: main server clients' send jobs run in parallel, then HLTV server jobs; this approximately matches pre-async profile for a single HLTV server configuration",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_password",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "prot",
        "nf",
        "norecord",
        "release"
      ],
      "description": "Server password for entry into multiplayer games",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_password",
      "helperText": "Server password for entry into multiplayer games",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_pausable",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Is the server pausable.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_pausable",
      "helperText": "Is the server pausable.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_pause_on_console_open",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "1 = Pause the game when pressing ~ to open the console. CTRL+~ opens the console without pause.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_pause_on_console_open",
      "helperText": "1 = Pause the game when pressing ~ to open the console. CTRL+~ opens the console without pause.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_phys_debug_callback_entities",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Print all entities that get touch callbacks. Each entity is printed only once.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_phys_debug_callback_entities",
      "helperText": "Print all entities that get touch callbacks. Each entity is printed only once.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_phys_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable all physics simulation",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_phys_enabled",
      "helperText": "Enable all physics simulation",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_phys_sleep_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable sleeping for dynamic physics bodies.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_phys_sleep_enable",
      "helperText": "Enable sleeping for dynamic physics bodies.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_phys_sound_disable_impact_sounds_under_hard_threshold",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "if true, impact sounds wont play if no soft impact sound is present and the impact is below the hard velocity threshold."
    },
    "uiData": {
      "label": "sv_phys_sound_disable_impact_sounds_under_hard_threshold",
      "helperText": "if true, impact sounds wont play if no soft impact sound is present and the impact is below the hard velocity threshold.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_phys_stop_at_collision",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_phys_stop_at_collision",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_playerradio_use_allowlist",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "playerradio commands may only use responses from an allow list of commands.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_playerradio_use_allowlist",
      "helperText": "playerradio commands may only use responses from an allow list of commands.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_predictable_damage_tag_ticks",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Delay player slowdown when damaged by # ticks to reduce misprediction effects",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_predictable_damage_tag_ticks",
      "helperText": "Delay player slowdown when damaged by # ticks to reduce misprediction effects",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_prime_accounts_only",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When this setting is enabled only prime users can connect to this game server.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_prime_accounts_only",
      "helperText": "When this setting is enabled only prime users can connect to this game server.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_pure",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Show user data.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_pure",
      "helperText": "Show user data.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_pure_kick_clients",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_pure_kick_clients",
      "helperText": "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_pure_trace",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "If set to 1, the server will print a message whenever a client is verifying a CRC for a file.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_pure_trace",
      "helperText": "If set to 1, the server will print a message whenever a client is verifying a CRC for a file.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_radio_throttle_window",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The number of seconds before radio command tokens refresh.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_radio_throttle_window",
      "helperText": "The number of seconds before radio command tokens refresh.",
      "type": "unknown_integer",
      "defaultValue": 10,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_recipients_check",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "When packing entities, check that recipient bits match for fast path packing."
    },
    "uiData": {
      "label": "sv_recipients_check",
      "helperText": "When packing entities, check that recipient bits match for fast path packing.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_record_item_time_data",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Turn on recording of per player item time data into the server log.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_record_item_time_data",
      "helperText": "Turn on recording of per player item time data into the server log.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_regeneration_force_on",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Cheat to test regenerative health systems",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_regeneration_force_on",
      "helperText": "Cheat to test regenerative health systems",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_region",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "release"
      ],
      "description": "The region of the world to report this server in.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_region",
      "helperText": "The region of the world to report this server in.",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_replay_group_id",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "The replay group that this server will be uploading files to"
    },
    "uiData": {
      "label": "sv_replay_group_id",
      "helperText": "The replay group that this server will be uploading files to",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_rethrow_last_grenade",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Emit the last grenade thrown on the server.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_rethrow_last_grenade",
      "helperText": "Emit the last grenade thrown on the server.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_search_key",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_search_key",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_search_team_key",
    "consoleData": {
      "defaultValue": "public",
      "flags": [
        "release"
      ],
      "description": "When initiating team search, set this key to match with known opponents team",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_search_team_key",
      "helperText": "When initiating team search, set this key to match with known opponents team",
      "type": "string",
      "defaultValue": "public",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_setsteamaccount",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "token Set game server account token to use for logging in to a persistent game server account",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_setsteamaccount",
      "helperText": "token Set game server account token to use for logging in to a persistent game server account",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_show_teammate_death_notification",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Show chat notification upon teammate death",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_show_teammate_death_notification",
      "helperText": "Show chat notification upon teammate death",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_shutdown",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Sets the server to shutdown when all games have completed",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_shutdown",
      "helperText": "Sets the server to shutdown when all games have completed",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_soundscape_printdebuginfo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "print soundscapes",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_soundscape_printdebuginfo",
      "helperText": "print soundscapes",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_spewmeta",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Spew serializer meta",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_spewmeta",
      "helperText": "Spew serializer meta",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "sv_steamauth_enforce",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "By default, player must maintain a reliable connection to Steam servers. When player Steam session drops, enforce it: 2 = instantly kick, 1 = kick at next spawn, 0 = do not kick.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_steamauth_enforce",
      "helperText": "By default, player must maintain a reliable connection to Steam servers. When player Steam session drops, enforce it: 2 = instantly kick, 1 = kick at next spawn, 0 = do not kick.",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_steamauth_ignore_localhost",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Ignore VAC and auth errors for client connected via localhost address or in-engine loopback",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_steamauth_ignore_localhost",
      "helperText": "Ignore VAC and auth errors for client connected via localhost address or in-engine loopback",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_steamgroup",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "nf",
        "release"
      ],
      "description": "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_steamgroup",
      "helperText": "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_steamgroup_exclusive",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_steamgroup_exclusive",
      "helperText": "If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_stressbots",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "If set to 1, the server calculates data and fills packets to bots. Used for perf testing.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_stressbots",
      "helperText": "If set to 1, the server calculates data and fills packets to bots. Used for perf testing.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_tags",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "nf",
        "release"
      ],
      "description": "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_tags",
      "helperText": "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_unlockedchapters",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": "Highest unlocked game chapter.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_unlockedchapters",
      "helperText": "Highest unlocked game chapter.",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": false
    }
  },
  {
    "command": "sv_unpause_on_console_close",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "1 = Unpause the game when pressing ~ to close the console. 0 = Leave the game paused.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_unpause_on_console_close",
      "helperText": "1 = Unpause the game when pressing ~ to close the console. 0 = Leave the game paused.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_usercmd_custom_random_seed",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled server will populate an additional random seed independent of the client",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_usercmd_custom_random_seed",
      "helperText": "When enabled server will populate an additional random seed independent of the client",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_usercmd_execute_warning_ms",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "a"
      ],
      "description": "Emit a warning if we spend more than N ms executing user commands for a single player",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_usercmd_execute_warning_ms",
      "helperText": "Emit a warning if we spend more than N ms executing user commands for a single player",
      "type": "unknown_integer",
      "defaultValue": 5,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vac_webapi_auth_key",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Key for when posting to vac related webapis.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vac_webapi_auth_key",
      "helperText": "Key for when posting to vac related webapis.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_versus_screen_scene_id",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines which scene is used for the versus screen.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_versus_screen_scene_id",
      "helperText": "Determines which scene is used for the versus screen.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_visiblemaxplayers",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "release"
      ],
      "description": "Overrides the max players reported to prospective clients",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_visiblemaxplayers",
      "helperText": "Overrides the max players reported to prospective clients",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_voicecodec",
    "consoleData": {
      "defaultValue": "vaudio_speex",
      "flags": [
        "release"
      ],
      "description": "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_voicecodec",
      "helperText": "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension.",
      "type": "string",
      "defaultValue": "vaudio_speex",
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_voiceenable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a",
        "nf",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_voiceenable",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": false
    }
  },
  {
    "command": "sv_vote_allow_in_warmup",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow voting during warmup?",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_allow_in_warmup",
      "helperText": "Allow voting during warmup?",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_allow_spectators",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow spectators to initiate votes?",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_allow_spectators",
      "helperText": "Allow spectators to initiate votes?",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_command_delay",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How long after a vote passes until the action happens",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_command_delay",
      "helperText": "How long after a vote passes until the action happens",
      "type": "unknown_integer",
      "defaultValue": 2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_count_spectator_votes",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow spectators to vote on issues?",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_count_spectator_votes",
      "helperText": "Allow spectators to vote on issues?",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_creation_timer",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How often someone can individually call a vote.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_creation_timer",
      "helperText": "How often someone can individually call a vote.",
      "type": "unknown_integer",
      "defaultValue": 120,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_disallow_kick_on_match_point",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Disallow vote kicking on the match point round.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_disallow_kick_on_match_point",
      "helperText": "Disallow vote kicking on the match point round.",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_failure_timer",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A vote that fails cannot be re-submitted for this long",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_failure_timer",
      "helperText": "A vote that fails cannot be re-submitted for this long",
      "type": "unknown_integer",
      "defaultValue": 300,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_issue_loadbackup_spec_authoritative",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled, admins load match from backup without players vote",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_issue_loadbackup_spec_authoritative",
      "helperText": "When enabled, admins load match from backup without players vote",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_issue_loadbackup_spec_safe",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled, admins load match from backup in safe time of the round only",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_issue_loadbackup_spec_safe",
      "helperText": "When enabled, admins load match from backup in safe time of the round only",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_issue_restart_game_allowed",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Can people hold votes to restart the game?",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_issue_restart_game_allowed",
      "helperText": "Can people hold votes to restart the game?",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_vote_quorum_ratio",
    "consoleData": {
      "defaultValue": "0.501",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The minimum ratio of players needed to vote on an issue to resolve it.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_quorum_ratio",
      "helperText": "The minimum ratio of players needed to vote on an issue to resolve it.",
      "type": "float",
      "defaultValue": 0.501,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "sv_vote_timer_duration",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How long to allow voting on an issue",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_vote_timer_duration",
      "helperText": "How long to allow voting on an issue",
      "type": "unknown_integer",
      "defaultValue": 15,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_watchtransmit",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Watch NetworkStateChanged info for this entity index.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_watchtransmit",
      "helperText": "Watch NetworkStateChanged info for this entity index.",
      "type": "unknown_integer",
      "defaultValue": -2,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_weapon_require_use_grace_period",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_weapon_require_use_grace_period",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "sv_workshop_allow_other_maps",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "sv_workshop_allow_other_maps",
      "helperText": "When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection.",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "telemetry_message",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Place a message in the telemetry timeline",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "telemetry_message",
      "helperText": "Place a message in the telemetry timeline",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "telemetry_toggle_timespan",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Starts/stops a timespan with an ever increasing name.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "telemetry_toggle_timespan",
      "helperText": "Starts/stops a timespan with an ever increasing name.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "test_dispatcheffect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Test a clientside dispatch effect.  Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>  Defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "test_dispatcheffect",
      "helperText": "Test a clientside dispatch effect.  Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>  Defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "test_entity_blocker",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Test command that drops an entity blocker out in front of the player.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "test_entity_blocker",
      "helperText": "Test command that drops an entity blocker out in front of the player.",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "test_list_entities",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "test-list entities",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "test_list_entities",
      "helperText": "test-list entities",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "test_shipping_assert",
    "consoleData": {
      "sourcedAt": "2025-07-30T00:00:00Z",
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Generate an assert to test shipping assertion code"
    },
    "uiData": {
      "label": "test_shipping_assert",
      "helperText": "Generate an assert to test shipping assertion code",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "timeleft",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "prints the time remaining in the match",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "timeleft",
      "helperText": "prints the time remaining in the match",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "timeout_ct_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "timeout_ct_start",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "timeout_terrorist_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "timeout_terrorist_start",
      "helperText": "",
      "type": "action",
      "defaultValue": null,
      "requiresCheats": false,
      "hideFromDefaultView": true,
      "arguments": []
    }
  },
  {
    "command": "tv_allow_autorecording_index",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When >=0 restricts autorecording only to the specified TV index",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_allow_autorecording_index",
      "helperText": "When >=0 restricts autorecording only to the specified TV index",
      "type": "unknown_integer",
      "defaultValue": -1,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_allow_camera_man_steamid",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_allow_camera_man_steamid",
      "helperText": "Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_allow_camera_man_steamid2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allows tournament production tv cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the tv camera man.",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_allow_camera_man_steamid2",
      "helperText": "Allows tournament production tv cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the tv camera man.",
      "type": "unknown_integer",
      "defaultValue": 0,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_allow_static_shots",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Auto director uses fixed level cameras for shots",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_allow_static_shots",
      "helperText": "Auto director uses fixed level cameras for shots",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_delay",
    "consoleData": {
      "defaultValue": "105",
      "flags": [
        "sv",
        "release"
      ],
      "description": "SourceTV broadcast delay in seconds",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_delay",
      "helperText": "SourceTV broadcast delay in seconds",
      "type": "unknown_integer",
      "defaultValue": 105,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_delay1",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "release"
      ],
      "description": "SourceTV[instance 1] broadcast delay in seconds",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_delay1",
      "helperText": "SourceTV[instance 1] broadcast delay in seconds",
      "type": "unknown_integer",
      "defaultValue": 15,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_delaymapchange",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Delays map change until broadcast is complete",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_delaymapchange",
      "helperText": "Delays map change until broadcast is complete",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_include_usercommands",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "HLTV streams will include player usercommands each tick",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_include_usercommands",
      "helperText": "HLTV streams will include player usercommands each tick",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_relayradio",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Relay team radio commands to TV: 0=off, 1=on",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_relayradio",
      "helperText": "Relay team radio commands to TV: 0=off, 1=on",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "tv_show_allchat",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "tv_show_allchat",
      "helperText": "",
      "type": "bool",
      "defaultValue": true,
      "requiresCheats": false,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "vis_force",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "vis_force",
      "helperText": "",
      "type": "bool",
      "defaultValue": false,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "vismon_poll_frequency",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "vismon_poll_frequency",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.5,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  },
  {
    "command": "vismon_trace_limit",
    "consoleData": {
      "defaultValue": "12",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "vismon_trace_limit",
      "helperText": "",
      "type": "unknown_integer",
      "defaultValue": 12,
      "requiresCheats": true,
      "hideFromDefaultView": true
    }
  },
  {
    "command": "voice_player_speaking_delay_threshold",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "",
      "sourcedAt": "2025-07-30T00:00:00Z"
    },
    "uiData": {
      "label": "voice_player_speaking_delay_threshold",
      "helperText": "",
      "type": "float",
      "defaultValue": 0.5,
      "requiresCheats": true,
      "hideFromDefaultView": true,
      "range": {
        "minValue": -1,
        "maxValue": -1,
        "step": -1
      }
    }
  }
]