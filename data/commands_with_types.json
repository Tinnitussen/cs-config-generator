[
  {
    "command": "debug_entity_outline_highlight",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "debug_purchase_defidx",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release",
        "clientcmd_can_execute"
      ],
      "description": "Purchase an item by defindex"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "debug_takedamage_summaries",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "debugoverlay_cycle_domain",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "debugoverlay_cycle_state",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "debugoverlay_dashboard",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Makes the debug overlay dashboard visible."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "debugoverlay_force_respect_ttl",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Force respect TTL even when clearing scopes"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "debugoverlay_hide_imgui",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Hides the overlay."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "debugoverlay_show_text_outline",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Toggle display of box around text"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "debugoverlay_toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_flush",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "Flush writing the demo file every network update"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "demo_goto",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Skips to location in demo."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_gotomark",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Skips the current demo playback to the marked tick"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_gototick",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Skips to a tick in demo."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_highlight_fade_duration",
    "consoleData": {
      "defaultValue": "0.25",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Duration of the fade in and of the fade out transitions (fade in + fade out is 2x this value)."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "demo_info",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print information about currently playing demo."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_marktick",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Marks the current demo playback tick for later use"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_pause",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Pauses demo playback."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_pause_at_end",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Pause demo playback when the end of the file is reached, otherwise quit to main menu."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "demo_quitafterplayback",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Quits game after demo playback."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "demo_recordcommands",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Record commands typed at console into .dem files."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "demo_resume",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Resumes demo playback."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_timescale",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Sets demo replay speed."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demo_togglepause",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Toggles demo playback."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demolist",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print demo sequence list."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "demoui",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Show/hide demo playback ui"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "dev_add_onground_on_spawn",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Should we mess with the ground flag when we spawn? (I don't think we should). If we don't hit the assert in CCSPlayer_MovementServices::ProcessMovement, we should remove this by Dec 2022."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "differences",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Show all convars which are not at their default values (optional restricted to specific flags)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "disable_dynamic_prop_loading",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If non-zero when a map loads, dynamic props won't be loaded"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "disconnect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Disconnect from server"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "display_game_events",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "dlight_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Creates a dlight in front of the player"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "dm_togglerandomweapons",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute",
        "clientcmd_can_execute"
      ],
      "description": "Turns random weapons in deathmatch on/off"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "dota_enable_spatial_audio",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Flag to enable spatial audio in Dota 2."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "drawcross",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draws a cross at the given location  Arguments: x y z"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "drawline",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draws line between two 3D Points.  Green if no collision  Red is collides with something  Arguments: x1 y1 z1 x2 y2 z2"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ds_workshop_changelevel",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Changelevel to an available workshop map by name"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ds_workshop_listmaps",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Dump workshop maps available on this server"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "dsp_off",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "dsp_volume",
    "consoleData": {
      "defaultValue": "0.8",
      "flags": [
        "a",
        "demo"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "dump_entity_report",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "List all client-side entities in the scene"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "dump_panorama_css_properties",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Prints out all valid panorama CSS properties and their documentation"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "dump_panorama_events",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "print panorama event types and their documentation"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "dumpparticlelist",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Print out information on existing particle systems"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "echo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "server_can_execute"
      ],
      "description": "Echo text to console."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "echoln",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Echo the command arguments on the console"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "enable_boneflex",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "endmatch_votenextmap",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Votes for the next map at the end of the match"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "endround",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "End the current round."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "engine_low_latency_sleep_after_client_tick",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "When r_low_latency is enabled, this moves the low latency sleep on tick frames to happen after client simulation."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "engine_show_frame_pacing",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "english",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "user"
      ],
      "description": "If set to 1, running the english language set of assets."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ent_absbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_actornames",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_animgraph_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays debug draws about the given entity(ies) animgraph  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_animgraph_record",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles recording of animgraph replay of the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_animgraph_setvar",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets a variable on the animgraph of the given entity(s)  Arguments:   <varname>=<value> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_attachments",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the attachment points on an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_autoaim",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the entity's autoaim radius.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_bbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_call",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_clear_debug_overlays",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clears all debug overlays"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Creates an entity of the given designer or subclass name where the player is looking."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_find",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Find and list all entities with classnames or targetnames that contain the specified substrings. Format: find_ent <substring>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_find_index",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Display data for entity matching specified index. Format: find_ent_index <index>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_fire",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Usage:    ent_fire <target> [action] [value] [delay]"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_fire_output",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Usage:    ent_fire_output <target> [output name] [value] [delay]"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_grab",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "grabs the object in front of the player. Options: -loose -multiple -toggle"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_hierarchy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Prints the entity hierarchy tree rooted at the specified ent(s)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_hitbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the hitboxes for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_info",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Usage:    ent_info <class name>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_joints",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the joint names + axes an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_kill",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_messages",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_messages_draw",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Visualizes all entity input/output activity."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ent_name",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the entity name"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_orient",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Orient the specified entity to match the player's angles. By default, only orients target entity's YAW. Use the 'allangles' option to orient on all axis.  Format: ent_orient <entity name> <optional: allangles>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_picker",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.  Arguments: full - enables all debug information"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_pivot",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the pivot for the given entity(ies).  (y=up=green, z=forward=blue, x=left=red).   Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_rbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_remove",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Removes the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_remove_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Removes all entities of the specified type  Arguments:    {entity_name} / {class_name}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_rotate",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Rotates an entity by a specified # of degrees"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_scale",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Scales entities. Arguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_scenehierarchy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_script_dump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Dumps the names and values of this entity's script scope to the console  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_select",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Select or deselects the given entities(s) for later manipulation  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_setang",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set entity angles"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_setname",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets the targetname of the given entity(s)  Arguments:    <new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_setpos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Move entity to position"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_show_contexts",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show entity contexts in ent_text display"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ent_show_damage",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_show_response_criteria",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Print, to the console, an entity's current criteria set used to select responses.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_skeleton",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_teleport",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Teleport the specified entity to where the player is looking.  Format: ent_teleport <entity name>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text256",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text_clear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set which ent_text filters you want:"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text_no_name_really_i_mean_it",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ent_text_radius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)  2 Arguments:    <Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text_sticky_add",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text_sticky_clear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text_sticky_dump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_text_sticky_remove",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_ungrab",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "un-grabs all objects"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_vcollide_wireframe",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the interpolated vcollide wireframe pm am entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_viewoffset",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the eye position for the given entity(ies) in red.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ent_visibility_traces",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Displays visibility traces for the given entity  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "eom_local_player_defeat_anim_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "escape",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release",
        "clientcmd_can_execute"
      ],
      "description": "Escape key pressed."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "exec",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Execute a cfg file"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "exec_async",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat",
        "norecord"
      ],
      "description": "Execute a cfg file over time"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "execifexists",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Execute a cfg file if file exists"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "explode",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills the player with explosive damage"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "explodevector",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills a player applying an explosive force. Usage: explodevector <player> <x value> <y value> <z value>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "fadein",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "fadein {time r g b}: Fades the screen in from black or from the specified color over the given number of seconds."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "fadeout",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "fadeout {time r g b}: Fades the screen to black or to the specified color over the given number of seconds."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ff_damage_decoy_explosion",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Enables or disables team damage from decoy detonation"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ff_damage_reduction_bullets",
    "consoleData": {
      "defaultValue": "0.33",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How much to reduce damage done to teammates when shot.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "ff_damage_reduction_grenade",
    "consoleData": {
      "defaultValue": "0.85",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How much to reduce damage done to teammates by a thrown grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "ff_damage_reduction_other",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How much to reduce damage done to teammates by things other than bullets and grenades.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "find",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Find concommands with the specified string in their name/help text."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "findflags",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Find concommands by flags."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "firetarget",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "firstperson",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release",
        "execute_per_tick"
      ],
      "description": "Switch to firstperson camera."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "fish_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Show debug info for fish"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "fish_dormant",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "cheat"
      ],
      "description": "Turns off interactive fish behavior. Fish become immobile and unresponsive."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "fog_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Enable fog"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "fog_enableskybox",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "fog_override_color",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Sets the fog color override"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "fog_override_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Use fog_override convars instead of world fog data"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "fog_override_max_density",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "fs_spew_readfieldlist",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "index <threshold bytes>: spew changes to ent index, optionally only spewing if update is > than threshold bytes"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "g_debug_angularsensor",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "g_debug_constraint_sounds",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable debug printing about constraint sounds."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "g_debug_ragdoll_visualize",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "game_alias",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Set the configuration of game type and mode based on game alias like 'deathmatch'."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "gameinstructor_dump_open_lessons",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Gives a list of all currently open lessons."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "gameinstructor_dump_run_lesson_counts",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Gives a list of lessons that been completed or shown"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "gameinstructor_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Display in game lessons that teach new players."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "gameinstructor_find_errors",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Set to 1 and the game instructor will run EVERY scripted command to uncover errors."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "gameui_hide",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Hides the game UI"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "getpos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "dump position and angles to the console"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "getpos_exact",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "dump origin and angles to the console"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "give",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "vconsole_fuzzy"
      ],
      "description": "Give item to player.  Arguments: <item_name>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "give_oriented",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "vconsole_fuzzy"
      ],
      "description": "Give item oriented to player angles.  Arguments: <item_name>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "givecurrentammo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Give a supply of ammo for current weapon.."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "gl_clear_gray",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Clear the back buffer to gray every frame."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "gl_clear_randomcolor",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Clear the back buffer to random colors every frame. Helps spot open seams in geometry."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "global_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "global_set <globalname> <state>: Sets the state of the given env_global (0 = OFF, 1 = ON, 2 = DEAD)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "glow_use_tolerance",
    "consoleData": {
      "defaultValue": "0.85",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "god",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle by default, or 0 to disable and 1 to enable. Player becomes invulnerable."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "grep",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "grep line for pattern, print out matching lines only"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "groups",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show status of all spawn groups."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "healthshot_allow_use_at_full",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "help",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Find help about a convar/concommand."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "hideconsole",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Hide the console."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "host_readconfig_ignore_userconfig",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Whether we should ignore the user config file for reading/writing."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "host_timescale_dec",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Decrement the timescale by one step"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "host_timescale_inc",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Increment the timescale by one step"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "host_workshop_collection",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Host a workshop map collection as a mapgroup"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "host_workshop_map",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Get the latest version of the map and host it on this server."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "host_writeconfig",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Saves out the user config values."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "hostage_is_silent",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "When set, the hostage won't play any code driven response rules lines"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "hostname_in_client_status",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Show server hostname in client status."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "hud_showtargetid",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Enables display of target names"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "hurtme",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Hurts the player.  Arguments: <health to lose>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ik_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Enable IK."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "imgui_debug_entity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Shows the entity browswer, focused on the entity you specify.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "imgui_set_selection",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets ImGui selection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "imgui_set_status_text",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets ImGui header status text"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "impulse",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Triggers impulse command"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "incrementvar",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Increment specified convar value."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "inferno_child_spawn_interval_multiplier",
    "consoleData": {
      "defaultValue": "0.1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Amount spawn interval increases for each child"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "inferno_ct_experiment",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "enable ct incendiary experiment"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "inferno_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "inferno_flame_lifetime_incendiary",
    "consoleData": {
      "defaultValue": "5.5",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Average lifetime of each flame in seconds (incgrenade)"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "inferno_forward_reduction_factor",
    "consoleData": {
      "defaultValue": "0.9",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "inferno_initial_spawn_interval",
    "consoleData": {
      "defaultValue": "0.02",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Time between spawning flames for first fire"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "inferno_max_child_spawn_interval",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Largest time interval for child flame spawning"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "inferno_smoke_volume_density",
    "consoleData": {
      "defaultValue": "0.03",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "inferno_velocity_decay_factor",
    "consoleData": {
      "defaultValue": "0.2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "inferno_velocity_factor",
    "consoleData": {
      "defaultValue": "0.003",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "inferno_velocity_factor_ct",
    "consoleData": {
      "defaultValue": "0.003",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "input_button_code_is_scan_code_scd",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a",
        "per_user"
      ],
      "description": "Bind keys based on keyboard position instead of key name"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "input_filter_relative_analog_inputs",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "invnext",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "invnextselect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "invprev",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "invprevselect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "joy_advanced",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joy_axisbutton_threshold",
    "consoleData": {
      "defaultValue": "0.3",
      "flags": [
        "a"
      ],
      "description": "Analog axis range before a button press is registered."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "joy_axisr_deadzone",
    "consoleData": {
      "defaultValue": "0.15",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "joy_axisr_relative",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joy_axisu_deadzone",
    "consoleData": {
      "defaultValue": "0.15",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "joy_axisu_relative",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joy_axisv_deadzone",
    "consoleData": {
      "defaultValue": "0.15",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "joy_axisv_relative",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joy_axisx_deadzone",
    "consoleData": {
      "defaultValue": "0.15",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "joy_axisx_relative",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joy_axisy_deadzone",
    "consoleData": {
      "defaultValue": "0.15",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "joy_axisy_relative",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joy_axisz_deadzone",
    "consoleData": {
      "defaultValue": "0.15",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "joy_axisz_relative",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joy_display_input",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joy_movement_stick",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Which stick controls movement (0 is left stick)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "joystick",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "True if the joystick is enabled, false otherwise."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "key_findbinding",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Find key bound to specified command string."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "key_listboundkeys",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "List bound keys with bindings."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "kick",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Kick a player by name."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "kickid",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Kick a player by userid or uniqueid, with a message."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "kickid_hltv",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Kick a player by userid or uniqueid, with a message."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "kill",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills the player with generic damage"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "killvector",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Kills a player applying force. Usage: killvector <player> <x value> <y value> <z value>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "labelled_debug_helper_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "labelled_debug_helper_show_position",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "labelled_debug_helper_show_text",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "labelled_debug_helper_skeleton_show_bone_names",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "lastinv",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "launch_warmup_map",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "norecord",
        "clientcmd_can_execute"
      ],
      "description": "Launches warmup map"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "lb_barnlight_shadowmap_scale",
    "consoleData": {
      "defaultValue": "0.75",
      "flags": [
        "release"
      ],
      "description": "Scale for computed barnlight shadowmap size"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "lb_shadow_map_cull_empty_mixed",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Don't render shadows for mixed shadowmaps with no dynamics objects in view"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "lb_shadow_map_culling",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "lightquery_debug_direct_lighting",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "lightquery_debug_indirect_lighting",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "listdemo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "List demo file contents."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "listissues",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "List all the issues that can be voted on."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "lockMoveControllerRet",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "log",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Enables logging to file, console, and udp < on | off >."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "log_color",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Set the color of a logging channel."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "log_dumpchannels",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Dumps information about all logging channels."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "log_flags",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Set the flags on a logging channel."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "log_level",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Set the spew level of a logging channel."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "log_verbosity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Set the verbosity of a logging channel."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "logaddress_add_http",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "Set URI of a listener to receive logs via http post. Wrap URI in double quotes."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "logaddress_add_http_delayed",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "Set a delay and URI of a listener to receive logs via http post. Wrap URI in double quotes."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "logaddress_del_http",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "Remove http listener by URI. Wrap URI in double quotes."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "logaddress_delall_http",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "Remove all http listeners from the dispatch list."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "logaddress_list_http",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "nolog",
        "release"
      ],
      "description": "List all URIs currently receiving server logs"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "logic_npc_counter_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "+lookatweapon",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "m_pitch",
    "consoleData": {
      "defaultValue": "0.022",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Mouse pitch factor."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "m_yaw",
    "consoleData": {
      "defaultValue": "0.022",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Mouse yaw factor."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "map",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release",
        "vconsole_fuzzy",
        "vconsole_set_focus"
      ],
      "description": "map <mapname> :Load a new map."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "map_enable_portrait_worlds",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Enables/disables portrait worlds"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "map_setbombradius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sets the bomb radius for the map."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "map_showbombradius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Shows bomb radius from the center of each bomb site and planted bomb."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "map_workshop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release",
        "vconsole_fuzzy",
        "vconsole_set_focus"
      ],
      "description": "Launch a workshop map"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mapgroup",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "norecord",
        "release"
      ],
      "description": "Specify a map group"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mapoverview_allow_client_draw",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Allow a client to draw on the map overview"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "maps",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Displays list of maps."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "markup_group_ent_bbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "markup_group_ent_bbox <markup_group name> -> toggle ent_bbox for all members of the named markup group"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "markup_group_ent_text",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "markup_group_ent_text <markup_group name> -> toggle ent_text for all members of the named markup group"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "markup_group_spew",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Spew all current markup groups and their members"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mat_colcorrection_forceentitiesclientside",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Forces color correction entities to be updated on the client"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mat_disable_normal_mapping",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mat_lpv_luxels",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mat_luxels",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mat_shading_complexity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Visualize shading complexity"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mat_shadowmap_luxels",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "menuselect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "menuselect"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mesh_calculate_curvature_smooth_invert",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "minimap_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Does a bunch of work to create a minimap"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mm_queue_show_stats",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Display global server stats"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mobile_fps_increase_during_charging",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "MOBILE_FPS_CONTROL: If true we increase framerate limit while charging"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mobile_fps_increase_during_touch",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a"
      ],
      "description": "MOBILE_FPS_CONTROL: If true we increase framerate limit during touch"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "molotov_usethrow_direction",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mouse_inverty",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_anyone_can_pickup_c4",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If set, everyone can pick up the c4, not just Ts."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_autokick",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Kick idle/team-killing/team-damaging players"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_autoteambalance",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_backup_restore_list_files",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Lists recent backup round files matching the prefix, most recent files first, accepts a numeric parameter to limit the number of files displayed"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_backup_restore_load_autopause",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Whether to automatically pause the match after restoring round data from backup"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_backup_restore_load_file",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Loads player cash, KDA, scores and team scores; resets to the next round after the backup"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_backup_round_auto",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If enabled will keep in-memory backups to handle reconnecting players even if the backup files aren't written to disk"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_bot_ai_bt_clear_cache",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Clears the cache for behavior tree files."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_buy_allow_grenades",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether players can purchase grenades from the buy menu or not."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_c4_cannot_be_defused",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If set, the planted c4 cannot be defused."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_damage_headshot_only",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines whether non-headshot hits do any damage."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_death_drop_c4",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether c4 is droppable"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_death_drop_defuser",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Drop defuser on player death"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_death_drop_healthshot",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Drop healthshot on player death"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_death_drop_taser",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Drop taser on player death"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_deathcam_skippable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Determines whether a player can early-out of the deathcam."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_disable_autokick",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Prevents a userid from being auto-kicked"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_disconnect_kills_bots",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When a bot disconnects, kill them first.  Requires mp_disconnect_kills_players."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_disconnect_kills_players",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When a player disconnects, kill them first (triggering item drops, stats, etc.)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_display_kill_assists",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether to display and score player assists"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_dogtag_despawn_on_killer_death",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Whether dogtags should despawn when their killer dies"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_drop_grenade_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Allows players to drop grenades."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_drop_knife_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Allows players to drop knives."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_endmatch_votenextmap",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether or not players vote for the next map at the end of the match when the final scoreboard comes up"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_endmatch_votenextmap_keepcurrent",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If set, keeps the current map in the list of voting options.  If not set, the current map will not appear in the list of voting options."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_footsteps_serverside",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Makes the server always play footstep sounds. Clients never calculate footstep sounds locally, instead relying on the server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_friendlyfire",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Allows team members to injure other members of their team"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_give_player_c4",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether this map should spawn a c4 bomb for a player or not."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_halftime",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines whether the match switches sides in a halftime event."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_hostages_spawn_farthest",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "When enabled will consistently force the farthest hostages to spawn."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_hostages_spawn_same_every_round",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "0 = spawn hostages randomly every round, 1 = same spawns for entire match."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_hostages_takedamage",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether or not hostages can be hurt."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_ignore_round_win_conditions",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Ignore conditions which would end the current round"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_logdetail_items",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Logs a line any time a player acquires or loses an item."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_logmoney",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enables money logging.  Values are: 0=off, 1=on"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_match_can_clinch",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Can a team clinch and end the match by being so far ahead that the other team has no way to catching up?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_match_end_changelevel",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "At the end of the match, perform a changelevel even if next map is the same"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_match_end_restart",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "At the end of the match, perform a restart instead of loading a new map"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_min_halftime_duration",
    "consoleData": {
      "defaultValue": "8.5",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Minimum number of seconds that halftime lasts even if team intros are active"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_modify_timeouts",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "mp_modify_timeouts <CT|T> <N>, e.g., mp_modify ct -1"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_only_cts_rescue_hostages",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_overtime_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If a match ends in a tie, use overtime rules to determine winner"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_pause_match",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Pause the match in the next freeze time"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_plant_c4_anywhere",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_playercashawards",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Players can earn money by performing in-game actions"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_playerid_delay",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of seconds to delay showing information in the status bar"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_playerid_hold",
    "consoleData": {
      "defaultValue": "0.1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of seconds to keep showing old information in the status bar"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_promoted_item_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Allow the purchasing of the promoted item."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_randomspawn_los",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If using mp_randomspawn, determines whether to test Line of Sight when spawning."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_require_gun_use_to_acquire",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Whether guns must be +used to acquire or default is touch-to-pickup"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_respawn_on_death_ct",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "When set to 1, counter-terrorists will respawn after dying."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_respawn_on_death_t",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "When set to 1, terrorists will respawn after dying."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_roundtime",
    "consoleData": {
      "defaultValue": "1.92",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "How many minutes each round takes."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_roundtime_defuse",
    "consoleData": {
      "defaultValue": "1.92",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "How many minutes each round of Bomb Defuse takes. If 0 then use mp_roundtime instead."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_roundtime_hostage",
    "consoleData": {
      "defaultValue": "1.92",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "How many minutes each round of Hostage Rescue takes. If 0 then use mp_roundtime instead."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_scrambleteams",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Scramble the teams and restart the game"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_shorthanded_cash_bonus_ignore_kicked",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines whether kicked players are included in the assessment for short-handedness"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_suicide_penalty",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Punish players for suicides"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_swapteams",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Swap the teams and restart the game"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_team_intro_time",
    "consoleData": {
      "defaultValue": "6.5",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "How many seconds for team intro"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_teamcashawards",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Teams can earn money by performing in-game actions"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_teammates_are_enemies",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "When set, your teammates act as enemies and all players are valid targets."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_unpause_match",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Resume the match"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_warmup_end",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "End warmup immediately."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_warmup_items_nocost",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines whether weapons are free to buy during warmup."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_warmup_offline_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether or not to do a warmup period at the start of a match in an offline (bot) match."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_warmup_online_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether or not to do a warmup period at the start of an online match."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "mp_warmup_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Start warmup."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "mp_weapon_next_owner_touch_time",
    "consoleData": {
      "defaultValue": "1.3",
      "flags": [
        "sv",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_weapon_prev_owner_touch_time",
    "consoleData": {
      "defaultValue": "1.5",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "mp_weapons_allow_map_placed",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If this convar is set, when a match starts, the game will not delete weapons placed in the map."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "multvar",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Multiply specified convar value."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_add_to_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add current area to the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_add_to_selected_set_by_id",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add specified area id to the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_avoid",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles the 'avoid this area when possible' flag used by the AI system."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_avoid_obstacles",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_begin_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start continuously removing from the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_begin_drag_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start dragging a selection area."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_begin_drag_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start dragging a selection area."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_begin_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start continuously adding to the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_check_connectivity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Checks to be sure every (or just the marked) nav area can get to every goal area for the map (hostages or bomb site)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_clear_attribute",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove given nav attribute from all areas in the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_clear_attributes",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clear all nav attributes of selected area."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_clear_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clear the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_create_indirect_connection",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Create a connection between the selected area and the area pointed at by the crosshair."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_curve_alt",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_curve_step",
    "consoleData": {
      "defaultValue": "0.02",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_debug_blocked",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_delete",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Deletes the currently highlighted Area."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_delete_all_hull",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Deletes all areas with given hull category."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_delete_marked",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Deletes the currently marked Area (if any)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_disconnect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "To disconnect two Areas, mark an Area, highlight a second Area, then invoke the disconnect command. This will remove all connections between the two Areas."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_draw_area_connections",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_filled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_gravity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_ground",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_hull_support",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_ids",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_normal",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_should_be_destroyed",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_split_by_nav_link_mgr",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_split_by_obstacle_mgr",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_area_ztest",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_blocked",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_blocked_connections",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_dangerareas",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_externally_created",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_hidingspots",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_indirect_connections",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_jump_links",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_link_alignment",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_links",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_markup",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_mesh",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_mesh_grid",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw the mesh's spatial grid structure around the edit cursor position."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_space_cells",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_space_fly",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_space_neighbors",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_space_portals",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_space_scatter",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_draw_space_swim",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_edit_validate",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Validate navmesh structures."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_end_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stop continuously removing from the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_end_drag_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stop dragging a selection area."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_end_drag_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stop dragging a selection area."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_end_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stop continuously adding to the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_find_occluded_node_nozup_use_raycast",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_add_jumps",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_agent_radius_buffer",
    "consoleData": {
      "defaultValue": "0.75",
      "flags": [
        "cheat"
      ],
      "description": "Buffer to add to agent radius before passing to nav gen"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_clip_polys_to_clearance",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_clip_polys_to_clearance_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_connect_allow_multiple",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_connect_angle",
    "consoleData": {
      "defaultValue": "0.75",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_connect_angle_ignore_z",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_connect_dist_b",
    "consoleData": {
      "defaultValue": "1.5",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_connect_dist_z_mult",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_connect_overlap",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_degen_limit",
    "consoleData": {
      "defaultValue": "0.001",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_false",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Always false"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_island_removal",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_island_removal_all_hulls",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_join_nonzup",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_jump_connection_min_overlap_ratio",
    "consoleData": {
      "defaultValue": "0.1",
      "flags": [
        "cheat"
      ],
      "description": "Minimum edge overlap required for jump connection consideration as a percentage of agent radius"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_match_ground",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_max_bottleneck_width_do_clip",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_max_edge_len_do_clip",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_opt_to_quads",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_opt_to_quads_se_limit_end",
    "consoleData": {
      "defaultValue": "0.1",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_opt_to_quads_se_limit_start",
    "consoleData": {
      "defaultValue": "0.000010",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_opt_to_quads_weld_limit_end",
    "consoleData": {
      "defaultValue": "0.01",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_remove_vertical_polys",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_split_boundary_polys",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_split_multi_connection_polys",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_gen_split_multi_connection_polys_tol",
    "consoleData": {
      "defaultValue": "0.01",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_gen_true",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Always true"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_genrt_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_genrt_no_splice",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_genrt_no_split",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_lower_drag_volume_max",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Lower the top of the drag select volume."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_lower_drag_volume_min",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Lower the bottom of the drag select volume."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_mark",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Marks the Area or Ladder under the cursor for manipulation by subsequent editing commands."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_mark_attribute",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set nav attribute for all areas in the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_obstacle_genrt",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_obstacle_validate",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_obstruction_draw_change",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_obstruction_draw_movefail_blocking",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_draw_areas",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_draw_arrow",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_draw_climb_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_draw_connected_areas",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_draw_ground_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_draw_jump_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_draw_ladder_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_draw_link_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_fixup_climb_up_segments",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_fixup_gap_segments",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_jump_process_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_optimize",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_optimize_portals",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_path_record_draw_last_fail",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_pathfind_draw_costs",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_pathfind_draw_total_costs",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_pathfind_multithread",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_potentially_visible_dot_tolerance",
    "consoleData": {
      "defaultValue": "0.98",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_precise",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles the 'dont avoid obstacles' flag used by the AI system."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_raise_drag_volume_max",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Raise the top of the drag select volume."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_raise_drag_volume_min",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Raise the bottom of the drag select volume."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_recall_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Re-selects the stored selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_remove_from_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove current area from the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_select_allow_blocked",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "When selecting an area under nav_edit, allow area marked as blocked."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_select_radius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Adds all areas in a radius to the selection set"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_select_with_attribute",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Selects areas with the given attribute."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_show_area_connections",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show connections to selected area when true"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_show_area_verts",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show area vertex positions"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_show_area_water_info",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_smooth_constrain_results",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_smooth_constrain_results_relax",
    "consoleData": {
      "defaultValue": "0.006",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_smooth_constrain_spring_relax",
    "consoleData": {
      "defaultValue": "0.01",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_smooth_draw_calc",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_smooth_draw_constraint_spline",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_smooth_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_smooth_relax",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_smooth_relax_use_timesteps",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_smooth_spring_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_smooth_spring_timestep_max",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_smooth_spring_timestep_min",
    "consoleData": {
      "defaultValue": "0.1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "nav_smooth_use_opt",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_split",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "To split an Area into two, align the split line using your cursor and invoke the split command."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_split_show_line",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show the free split line."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_store_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stores the current selected set for later retrieval."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_test_area_gravity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_bfs_lattice_hex",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Demonstrates searching hexagonal lattice over nav mesh."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_bfs_lattice_simple",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_bfs_simple",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_boundary_zone_force",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_boundary_zone_rays_random",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_detour",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_find_nearest",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_find_nearest_clear",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Calculate the nearest point on the navmesh to the trace point.  Uses selection from nav_select_hull."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_find_random_connected",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Demonstrates finding random points that are connected in the nav mesh to the start point."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_force_npc_repath",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_genrt",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_genrt_place",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_getareaoverlapping_gravity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_getnearestnav_gravity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_level_hull",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Find entities that intrude into the nav mesh.  List those entities in console output, and display bounding boxes around them for a while."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_test_level_hull_move",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_test_multi_connection",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_npc_collision_show_geometry",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Calculate and draw a path from player/camera position to the test position."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path_lock_goal",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Lock the pathfinding goal to the current intersection point."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path_lock_start",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Lock the pathfinding start to the current intersection point."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path_move",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path_opt",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable path optimization for nav_edit_path paths."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path_opt_transitions",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path_return",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Calculate a return path from cursor position to the path calculated by nav_test_path."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path_space_fly",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Test flight paths"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_path_space_swim",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Test swim paths"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_rays",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_smooth",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_split_obstacle_dirty",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_split_obstacle_leave",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_test_split_obstacle_update_pos",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "nav_toggle_deselecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start or stop continuously removing from the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_toggle_in_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove current area from the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_toggle_selected_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggles all areas into/out of the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_toggle_selecting",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start or stop continuously adding to the selected set."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nav_unmark",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clears the marked Area or Ladder."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "navspace_create_water_smooth_connections",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "navspace_create_water_transition_connections",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "navspace_path_use_water_level_locator",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "net_allow_multicast",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "net_channels",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Shows net channel info"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_connections_stats",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print detailed network statistics for each network connection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_fakeclear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Clear all simulated network conditions"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_fakejitter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Shortcut to set jitter net options.  Run with no arguments for usage."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_fakelag",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Shortcut to set both FakePacketLag_Recv and FakePacketLag_Send net options"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_fakeloss",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Shortcut to set both FakePacketLoss_Recv and FakePacketLoss_Send net options"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_fakestatus",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print current simulated network condifions"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_listallmessages",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "List all registered net messages"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_messageinfo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Display info about a message (by classname or id)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_option",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Get or set SteamNetworkingSockets options such as fake packet lag and loss"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_print_sdr_ping_times",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print current ping times to SDR points of presence, and selected route"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_showudp",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Dump UDP packets summary to console"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "net_showudp_remoteonly",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Dump non-loopback udp only"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "net_status",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Shows current network status"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "net_validatemessages",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Activates/deactivates net message validation"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nextdemo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Play next demo in sequence."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "nextmap_print_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled prints next map to clients"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "noclip",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle. Player becomes non-solid and flies.  Optional argument of 0 or 1 to force enable/disable"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "noclip_fixup",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "notarget",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle. Player becomes hidden to NPCs."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "option_duck_method",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Input toggle control"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "option_speed_method",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Input toggle control"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "panorama_focus_world_panels",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "when set request key focus when a world panel is enabled"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "panorama_joystick_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "Enable panorama joystick input"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "particle_test_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Creates the named particle system where the player is looking.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "particle_test_destroy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Destroys all particle systems matching the specified name.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "particle_test_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Dispatches the test particle system with the parameters specified in particle_test_file,  particle_test_attach_mode and particle_test_attach_param on the entity the player is looking at.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "particle_test_stop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Stops all particle systems on the selected entities.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "pause",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Toggle the server pause state."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "phys_debug_showdefaultmaterial",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "If enabled, surfaces with default material are highlighted in physics debug geometry."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "phys_dynamic_scaling",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "phys_highlight_expensive_objects",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Highlight expensive physics objects"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "phys_highlight_expensive_objects_strength",
    "consoleData": {
      "defaultValue": "0.02",
      "flags": [
        "cheat"
      ],
      "description": "Highlight expensive physics objects strength"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "phys_joint_teleport",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Teleport joint anchors if connected to world"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "phys_mark_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Mark object for debug"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "phys_shoot",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Shoots a phys object."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "phys_use_block_solver",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Use block solving for constraint entities"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "phys_visualize_traces",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "pixelvis_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Dump debug info"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "plant_bomb",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Plant a bomb where the player is looking."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "play",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "server_can_execute"
      ],
      "description": "Play a sound."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "playcast",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Play a broadcast"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "playdemo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Play a recorded demo file (.dem )."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "player0_using_joystick",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "player_debug_off_nav",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "player_debug_print_damage",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "When true, print amount and type of all damage received by player to console."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "player_ping",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Creates a ping notification where the player is looking."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "playsoundscape",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Forces a soundscape to play"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "print_changed_convars",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Prints all convars that have changed from their default value"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "print_mapgroup",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Prints the current mapgroup and the contained maps"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "print_mapgroup_sv",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Prints the current mapgroup and the contained maps"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "prop_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "prop_debug_collision",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Highlights props based on their collision group: COLLISION_GROUP_PROPS(white), COLLISION_GROUP_INTERACTIVE_DEBRIS(green), COLLISION_GROUP_DEBRIS and will return to COLLISION_GROUP_INTERACTIVE_DEBRIS on sleeping(bright red), COLLISION_GROUP_DEBRIS permanently (dark red), COLLISION_GROUP_DEBRIS(blue), OTHER(grey)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "prop_dynamic_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Creates a dynamic prop with a specific .vmdl aimed away from where the player is looking.  Arguments: {.vmdl name}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "prop_physics_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Creates a physics prop with a specific .vmdl aimed away from where the player is looking.  Arguments: {.vmdl name}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "pulse_debug_entity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Opens a graph referencing the selected entity. If it is referenced by more than 1 graph, list all the active pulse graph instances referring to that entity so you can pick which one you want."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "pulse_list_graphs",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "List all the active pulse graph instances"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "pulse_open_graph_id",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Open a specific graph instance by id"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "pulse_print_graph_execution_history",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints the execution history of a graph by filename or instanceid"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "+quickbuyradial",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "+quickgrenaderadial",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "+quickinv",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "quit",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release",
        "vconsole_set_focus"
      ],
      "description": "Quit the game"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "r_aoproxy_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_aoproxy_show",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_cubemap_normalization",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_decal_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_depth_prepass",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_depth_prepass_reflections_large",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_depth_prepass_reflections_small",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_depth_prepass_skybox_alpha_tested",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_depth_prepass_viewmodel",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_directional_lightmaps",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_effects_bloom",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_effects_bloom_when_smoked",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_enable_glows",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_enable_high_precision_lighting",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_enable_tonemapping",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_enable_translucent_screen_space",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_mboit",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_mboit_bias",
    "consoleData": {
      "defaultValue": "0.000005",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_csgo_mboit_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_mboit_overestimation",
    "consoleData": {
      "defaultValue": "0.01",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_csgo_mboit_upscale_cs",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_mboit_use_4_moments",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_mixed_resolution_color_slices",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_mixed_resolution_particles_minmax",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_mouse_trace_coord",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_no_shader_resolve",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_override_global_time",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_postprocess_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_readonly_depth_stencil_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_reconstruct_normals",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_render_decals",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_render_decals_on_translucent",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_render_dynamic_objects",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_render_inferno_decals",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_render_opaque",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_render_overlays",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_render_post_local_contrast",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_render_translucent",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_volume_mboit_optimization",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_water_effects",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_csgo_water_refraction",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_debug_particle_shadows",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_debug_precipitation",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Show precipitation volumes"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_directlighting",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Set to use direct lighting"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_dof_override",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_dof_override_tilt_to_ground",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_dopixelvisibility",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_draw_first_tri_only",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_draw_instances",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawblankworld",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Render blank instead of the game world"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawchickens",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Render chickens"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawcsplayers",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Render CS players"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawdecals",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Set to render decals"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawdevvisualizers",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Render dev visualizers"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawpanorama",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Enable the rendering of panorama UI"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawparticles",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Enable/disable particle rendering"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawropes",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawskybox",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Render the 2d skybox."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawtracers",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawtracers_firstperson",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Toggle visibility of first person weapon tracers"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawviewmodel",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Render view model"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_drawworld",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Render the world."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_flashlightbacktraceoffset",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_flashlightlockposition",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_flashlightshadowatten",
    "consoleData": {
      "defaultValue": "0.35",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_flashlightvisualizetrace",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_flush_on_pooled_ib_resize",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_force_no_present",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Force the render device to not present frames."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_freezeparticles",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Pause particle simulation"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_fullscreen_gamma",
    "consoleData": {
      "defaultValue": "2.2",
      "flags": [
        "a"
      ],
      "description": "Screen Gamma (only in fullscreen modes)"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_indirectlighting",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Set to use indirect lighting"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_light_probe_volume_debug_grid",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Show LPV debug grid, 0: off, 1: closest only 2: closest and keep 3: all"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_light_probe_volume_debug_grid_bbox",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Show LPV bounding box when debug grid is on, 0: off, 1: on"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_light_probe_volume_debug_grid_roughness",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cheat"
      ],
      "description": "roughness for LPV debug grid"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_morphing_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_muzzleflashbrightness",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_muzzleflashlinear",
    "consoleData": {
      "defaultValue": "0.05",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_particle_shadows_compute",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_pixelvisibility_partial",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_pixelvisibility_spew",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_render_world_node_bounds",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Render world node bounds"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_rendersun",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Render sun lighting"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_shadows",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_show_build_info",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Build information. Leave this enabled when submitting bug screenshots and videos, please!"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_show_time_info",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Show real time, large."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_showdebugoverlays",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Set to render debug overlays"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_showdebugrendertarget",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Set the debug render target to show, 0 == disable"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_showsceneobjectbounds",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Show scenesystem object bounding boxes"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_showsunshadowdebugrendertargets",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Set to render sun shadow render targets"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_showsunshadowdebugsplitvis",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Set to render sun shadow split visibility debugger"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_size_cull_threshold_shadow",
    "consoleData": {
      "defaultValue": "0.2",
      "flags": [
        "cheat"
      ],
      "description": "Threshold of shadow map size percentage below which objects get culled"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "r_skinning_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_smooth_morph_normals",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_stereo_multiview_instancing",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Use multiview instancing for stereo rendering."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_translucent",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Enable rendering of translucent geometry"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "r_zprepass_normals",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "0: Use normals reconstructed from depth. 1: Output correct normals in z prepass."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "radarvismaxdot",
    "consoleData": {
      "defaultValue": "0.996",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "how closely you have to point at someone to see them beyond max distance"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "radarvispow",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "the degree to which you can point away from a target, and still see them on radar."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "+radialradio",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "+radialradio2",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "+radialradio3",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "radio",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Opens a radio menu"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "radio1",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Opens a radio menu"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "radio2",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Opens a radio menu"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "radio3",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Opens a radio menu"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ragdoll_friction_scale",
    "consoleData": {
      "defaultValue": "0.6",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "ragdoll_lru_debug_removal",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ragdoll_move_entity",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ragdoll_resolve_initial_conflict",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ragdoll_resolve_separation",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ragdoll_update_from_weights",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "rangefinder",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Measures distance along a ray"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "rangefinder2d",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Measures distance along a ray, only measuring along XY plane."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "rcon",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Issue an rcon command."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "rcon_connected_clients_allow",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Allow clients to use rcon commands on server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "rebuy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Attempt to repurchase items with the order listed in cl_rebuy"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "recast_mark_overhang",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": "Enable/disable overhang detection"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "record",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Record a demo."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "refresh_ui_audio_state",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Restores audio DSP state for the UI."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "regenerate_weapon_skins",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "reloadgame",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat",
        "vconsole_set_focus"
      ],
      "description": "Reload the most recent saved game."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "remove_weapon",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove a weapon held by the player.  Arguments: <weapon subclass name>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "repeat_last_console_command",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Repeat last console command."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "replay_death",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "start hltv replay of last death"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "replay_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Start GOTV replay: replay_start <delay> [<player name or index>]"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "replay_stop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "stop hltv replay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "report_cliententitysim",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "List all clientside simulations and time - will report and turn itself off."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "report_clientthinklist",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "List all clientside entities thinking and time - will report and turn itself off."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "reset_gameconvars",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Reset game convars to default values"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "reset_voice_on_input_stallout",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "user"
      ],
      "description": "If true, resets the input device when there was a long enough hitch between callbacks."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "respawn_player",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Respawns the player from death!"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "restart",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat",
        "vconsole_set_focus"
      ],
      "description": "Poor man's restart: reload the current map from disk."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "rr_forceconcept",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "fire a response concept directly at a given character. USAGE: rr_forceconcept <target name or index> <concept> 'criteria1:value1,criteria2:value2,...' criteria values are optional."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "rr_reloadresponsesystems",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Reload all response system scripts."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "run_perftest",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat",
        "norecord"
      ],
      "description": "Execute perftest.cfg"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "save_animgraph_recording",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Saves all active animgraph recordings to disk"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "say",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Display player message"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "say_team",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Display player message to team"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sc_aggregate_indirect_draw_compaction",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Use multidrawindirect...count if the driver/hardware supports it"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_check_world",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_disable_culling_boxes",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_disable_procedural_layer_rendering",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_disable_shadow_fastpath",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_disable_shadow_materials",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_disable_spotlight_shadows",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_disable_world_materials",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_disableThreading",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_dump_lists",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_dumpworld",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Dump a list of the objects in a sceneworld (Usage: sc_dumpworld <world_index>)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sc_dumpworld3d",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Dump the objects in a sceneworld into a 3d geoview buffer (Usage: sc_dumpworld3d <world_index>)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sc_extended_stats",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_force_materials_batchable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_force_translation_in_projection",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "If enabled, the camera's translation will be included in the projection matrix."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_listworlds",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "List all the active sceneworlds"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sc_only_render_opaque",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_only_render_shadowcasters",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_reject_all_objects",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sc_setclassflags",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Low level command to set the flags byte associated with an object class. sc_SetClassFlags <classname> <value>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sc_showclasses",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "List the object class names known by scenesystem"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sc_skip_traversal",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "scene_playvcd",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Play the given VCD as an instanced scripted scene."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_add_debug_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add a filter to the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_add_watch",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add a watch to the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_add_watch_pattern",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Add a watch to the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_attach_debugger",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Connect the vscript VM to the script debugger"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_clear_watches",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Clear all watches from the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Toggle the in-game script debug features"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_dump_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Dump the state of the VM to the console"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_find",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Find a key in the VM"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_help",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Output help for script functions"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_reload",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Reload scripts"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_reload_code",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Execute a vscript file, replacing existing functions with the functions in the run script"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_reload_entity_code",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_remove_debug_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove a filter from the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_remove_watch",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove a watch from the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_remove_watch_pattern",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Remove a watch from the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_resurrect_unreachable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Use the garbage collector to track down reference cycles"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_trace_disable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn off a particular trace output by file or function name"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_trace_disable_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn off all trace output"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_trace_disable_key",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn off a particular trace output by table/instance"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_trace_enable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn on a particular trace output by file or function name"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_trace_enable_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn on all trace output"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "script_trace_enable_key",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Turn on a particular trace output by table/instance"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sdr",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "An old command that has been renamed to 'net_option'"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sellbackall",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Attempt to refund all equipment"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "server_snd_cast",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "setang",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Snap player eyes to specified pitch yaw <roll:optional> (must have sv_cheats)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "setang_exact",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Snap player eyes and orientation to specified pitch yaw <roll:optional> (must have sv_cheats)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "setinfo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "clientcmd_can_execute"
      ],
      "description": "Adds a new user info value"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "setmodel",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Changes's player's model"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "setpause",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Set the pause state of the server."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "setpos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Move player to specified origin (must have sv_cheats)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "setpos_exact",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Move player to an exact specified origin (must have sv_cheats)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "setpos_player",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Move specified player to specified origin (must have sv_cheats)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "shake",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Shake the screen."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "shake_stop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Stops all active screen shakes."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "shake_testpunch",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Test a punch-style screen shake."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "shatterglass_break",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "shatterglass_cleanup",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "shatterglass_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "shatterglass_restore",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "show_loadout_toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Toggles loadout display"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "show_visibility_boxes",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Enable or Disable debug display of visibility boxes"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "showconsole",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Show the console."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "showtriggers",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable or Disable showing trigger entities"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "showtriggers_toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays the movement bounding box for the triggers in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "silence_dsp",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "When on, silences all DSP mixes."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "skel_constraints_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "skeleton_instance_scaleset_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "skeleton_instance_smear_boneflags",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Smear boneflags across the model.  Costs computation, but tests to make sure your bone flags are consistent."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "slot0",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot1",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot10",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot11",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot12",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot13",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot2",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot3",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot4",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot5",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot6",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot7",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot8",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "slot9",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_arrangement_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Starts the specified arrangement."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_autodetect_latency",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_cast",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Casts a ray and starts a sound event where the ray hits. The sound event will retrigger periodically if cl_snd_cast_retrigger is set. The sound event will clear previous snd_cast events if cl_snd_cast_clear is set. Usage: snd_cast <eventname> [<retrigger time>] [<max distance>]. Arguments that are specified will become defaults for the remainder of the session."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_disable_mixer_duck",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_disable_mixer_solo",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_duckerattacktime",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_duckerreleasetime",
    "consoleData": {
      "defaultValue": "2.5",
      "flags": [
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_duckerthreshold",
    "consoleData": {
      "defaultValue": "0.15",
      "flags": [
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_ducktovolume",
    "consoleData": {
      "defaultValue": "0.55",
      "flags": [
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_envelope_rate",
    "consoleData": {
      "defaultValue": "0.9",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_gain_min",
    "consoleData": {
      "defaultValue": "0.01",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_get_physics_surface_properties",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Get physics surface properties for all the materials."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_group_cluster_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_group_priority_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_group_priority_max_tolerance",
    "consoleData": {
      "defaultValue": "0.05",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_log_empty_event_entities",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Logs the sound event entities that have empty names."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_mixahead",
    "consoleData": {
      "defaultValue": "0.001",
      "flags": [
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_mute_losefocus",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_mute_mvp_music_live_players",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "If set, MVP music is muted if players from both teams are still alive."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_new_visualize",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Displays soundevent name played at it's 3d position"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_occlusion_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_opvar_set_point_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_print_activetracks",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "List all active tracks"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_print_arrangements",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "List all available sequence arrangments"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_print_samplers",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "List all available samplers"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_print_sequences",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "List all available midi sequences"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_report_verbose_error",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "If set to 1, report more error found when playing sounds."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_samplers_play_note",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Play a note from a specified sampler"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_samplers_stop_note",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Stop a note from a specified sampler"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sequence_set_track_bpm",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Sets the tempo of the specified track"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sequence_set_track_transpose",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Sets the transposition of the specified track"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sequence_stop_all_tracks",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Stops all currently playing sequences"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sequence_stop_track",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Stops the specified track"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sequencer_show_bpm",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sequencer_show_events",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sequencer_show_quantize_queue",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_set_physics_surface_properties",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Set physics surface properties for materials. Usage: <heuristic #> <commit>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_block_global_stack",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_block_stop_global_stack",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_calc_angle_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_compare_kv3_native_stacks",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_compare_operator_stacks",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Compares 2 operator stacks and spews any errors"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_flush_operators",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Flush and re-parse the sound operator system"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_get_operator_field_info",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Currently gets info for a single operator field"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_ingame_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_list_operator_updates",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_opvar_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_pause_soundevent",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Pause the specified soundevent in the list"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_pause_system",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_print_addfield_dupes",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_print_class_sizes",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints the sizes of relevant sos classes."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_field_name_strings",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints a list of currently cached field name strings"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_field_references",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_print_fps",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_print_full_field_info",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_print_groups",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints the current state of the groups system"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_operator_stack",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints a master list of currently exposed variables"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_operator_stack_operator",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints an operator from a stack"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_operator_stacks",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints a list of currently available stacks"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_operators",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints a list of currently available operators"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_stack_exec_list",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints the current stack execution list"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_strings",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints a list of currently cached strings"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_print_table_arrays",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_print_tool_properties",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Prints the current state of tool properties."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_resolve_execute_operator",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Resolve the inputs and execute one specified operator from a specified stack"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_set_operator_field",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Currently sets a single float operator field"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_set_operator_field_by_guid",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Currently sets a single float operator field"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_show_block_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Spew data about the list of block entries."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_operator_event_and_stack",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_operator_init",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_operator_not_executing",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_operator_pause_entry",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_operator_shutdown",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_operator_stop_entry",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_operator_updates",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_opvar_updates",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_queuetotrack",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_soundevent_param_overwrite",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_show_soundevent_start",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sos_soundevent_profile",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Dump a record of current soundevents and profile data"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_start_soundevent",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Starts a specified soundevent"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_start_soundevent_at_pos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Starts a specified soundevent at the given position"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_start_stack",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Starts a specified stack via an empty soundevent"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_stop_all_soundevents",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Stops all soundevents currently on the execution list"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_stop_soundevent_guid",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Stops a specified soundevent"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_stop_soundevent_index",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Stops a specified soundevent"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_test_soundmessage",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "test"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sos_unpause_soundevent",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "UnPause the first soundevent in the list"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_sound_areas_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_sound_areas_debug_interval",
    "consoleData": {
      "defaultValue": "0.2",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_steamaudio_baked_data_stats",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Display baked data stats for the current mod."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_steamaudio_enable_pathing",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "This variable is checked by soundstack to globally enabling pathing for audio processing."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_steamaudio_enable_perspective_correction",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a",
        "release"
      ],
      "description": "Enable perspective correction for 3D audio."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_steamaudio_enable_spatial_blend_fix",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Toggles the speculative fix for low-frequency issues when using spatial blend."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_steamaudio_export_scene",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Exports scene currently used by Steam Audio as a phononscene file."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_steamaudio_halton_sequence",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Generate Halton Sequence for a given order and number of samples."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_steamaudio_source_pathing_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "Enable path visualization for steam_audio_source operator."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "snd_tensecondwarning_volume",
    "consoleData": {
      "defaultValue": "0.041705",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of Ten Second Warnings"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "snd_vmidi_flush",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Purge and reload all vmidi data and files."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "snd_vmix_show_input_updates",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "If set to 1, show all incoming updates to vmix inputs."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "soundinfo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Describe the current sound device with an active voice list."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "soundscape_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "When on, draws lines to all env_soundscape entities. Green lines show the active soundscape, red lines show soundscapes that aren't in range, and white lines show soundscapes that are in range, but not the active soundscape."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "soundscape_dumpclient",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Dumps the client's soundscape data."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "soundscape_radius_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Prints current volume of radius sounds"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "spawn_group_activate",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Activate specified spawngroup."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spawn_group_load",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Load named spawn group."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spawn_group_unload",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Unload named spawn group."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spec_autodirector",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Auto-director chooses best view modes while spectating"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "spec_centerchasecam",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Looks at the target player's center, instead of his eye position, in chase came mode"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "spec_freeze_deathanim_time",
    "consoleData": {
      "defaultValue": "0.8",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The time that the death cam will spend watching the player's ragdoll before going into the freeze death cam."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "spec_freeze_traveltime",
    "consoleData": {
      "defaultValue": "0.3",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Time taken to zoom in to frame a target in observer freeze cam."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "spec_glow_silent_factor",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Lurking player xray glow scaling."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "spec_glow_spike_factor",
    "consoleData": {
      "defaultValue": "1.2",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Noisy player xray glow scaling (pop when noise is made).  Make >1 to add a 'spike' to noise-making players"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "spec_goto",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Move the spectator camera to a specific location. `spec_goto x y z pitch yaw`"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spec_mode",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Set spectator mode"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spec_next",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Spectate next player"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spec_player",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Spectate a player by name or slot"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spec_pos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "dump position and angles to the console"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spec_prev",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Spectate previous player"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "spec_replay_autostart",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Auto-start Killer Replay when available"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "spec_replay_bot",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enable Spectator Hltv Replay when killed by bot"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "spec_replay_leadup_time",
    "consoleData": {
      "defaultValue": "5.3438",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Replay time in seconds before the highlighted event"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "spec_replay_message_time",
    "consoleData": {
      "defaultValue": "9.5",
      "flags": [
        "rep",
        "release"
      ],
      "description": "How long to show the message about Killer Replay after death. The best setting is a bit shorter than spec_replay_autostart_delay + spec_replay_leadup_time + spec_replay_winddown_time"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "spec_replay_on_death",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "rep",
        "release"
      ],
      "description": "When > 0, sets the mode whereas players see delayed replay, and are segregated into a domain of chat and voice separate from the alive players"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "spec_usenumberkeys_nobinds",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a"
      ],
      "description": "If set to 1, map voting and spectator view use the raw number keys instead of the weapon binds (slot1, slot2, etc)."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "+spray_menu",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "startdemos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Play demos in demo sequence."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "status",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print connection status"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "status_json",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print status in JSON format"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "steam_controller_haptics",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "stop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Finish recording demo."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "stopdemos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Stop looping demos (current demo will complete)."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "stopsound",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "stopsoundscape",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Stops all soundscape processing and fades current looping sounds"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "subclass_change",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Changes the subclass of the given entity.  Arguments:    <new_subclass> {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "subclass_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Creates an entity of the given subclass where the player is looking."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "surfaceprop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Reports the surface properties at the cursor"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "suspicious_hit_odds_threshold",
    "consoleData": {
      "defaultValue": "0.01",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_accelerate",
    "consoleData": {
      "defaultValue": "5.5",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_accelerate_debug_speed",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_accelerate_use_weapon_speed",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_allchat",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": "Players can receive all other players' text chat, no death restrictions"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_allow_annotations",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Allow clients to use the annotation system on the server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_allow_votes",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow voting?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_alltalk",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": "Players can hear all other players' voice communication, no team restrictions"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_auto_adjust_bot_difficulty",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Adjust the difficulty of bots each round based on contribution score."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_auto_cstrafe_kick",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Whether or not to kick players when counter-strafe input automation is detected."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_auto_full_alltalk_during_warmup_half_end",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled will automatically turn on full all talk mode in warmup, at halftime and at the end of the match"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_autobunnyhopping",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Players automatically re-jump while holding jump button"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_autobuyammo",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Enable automatic ammo purchase when inside buy zones during buy periods"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_autoexec_mapname_cfg",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Execute a mapname cfg file on the server automatically in custom game modes that require it."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_banid_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Whether server supports banid command"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_buymenu_open_prevents_opportunistic_pickup",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_cheats",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "nf",
        "rep",
        "release"
      ],
      "description": "Allow cheats on server"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_competitive_minspec",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Enable to force certain client convars to minimum/maximum values to help prevent competitive advantages."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_damage_prediction_allowed",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_deadtalk",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Dead players can speak (voice, text) to the living"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_debug_client_not_in_pvs",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If set, draw failed client PVS checks with red box"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_debug_overlays_broadcast",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "nf",
        "cheat",
        "release"
      ],
      "description": "Broadcast server debug overlays"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_disable_immunity_alpha",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If set, clients won't slam the player model render settings each frame for immunity [mod authors use this]"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_disable_observer_interpolation",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Disallow interpolating between observer targets on this server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_disable_teamselect_menu",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Disable teamselect menu on clients"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_enable_delta_packing",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "When enabled, this allows for entity packing to use the property changes for building up the data. This is many times faster, but can be disabled for error checking."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_enablebunnyhopping",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Allow player speed to exceed maximum running speed"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_extract_ammo_from_dropped_weapons",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_fade_player_visibility_farz",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_flashed_amount_for_blind_kill",
    "consoleData": {
      "defaultValue": "0.7",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Minimum flashed alpha value for a player to be awarded a blind kill on the kill feed."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_friction",
    "consoleData": {
      "defaultValue": "5.2",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "World friction."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_full_alltalk",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Any player (including Spectator team) can speak to any other player"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_gameinstructor_disable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Force all clients to disable their game instructors."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_gameinstructor_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "rep",
        "release"
      ],
      "description": "Force all clients to enable their game instructors."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_grenade_trajectory_prac_pipreview",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Shows grenade trajectory practice picture-in-picture preview."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_health_approach_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_hibernate_when_empty",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Puts the server into extremely low CPU usage mode when no clients connected"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_highlight_duration",
    "consoleData": {
      "defaultValue": "3.5",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_hoststate_quit_syscall",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "When enabled, game server will quit immediately via syscall instead of running host states shutdown sequence"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_ignoregrenaderadio",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Turn off Fire in the hole messages"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_invites_only_mainmenu",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If turned on, will ignore all invites when user is playing a match"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_jump_impulse",
    "consoleData": {
      "defaultValue": "301.993",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Initial upward velocity for player jumps; sqrt(2*gravity*height)."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_jump_precision_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Enable jump precision. Some game modes benefit from being able to turn this off."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_jump_spam_penalty_time",
    "consoleData": {
      "defaultValue": "0.015625",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "For subtick jumps, if this much time has elapsed since the last time the user has pressed the jump key, pretend they hadn't. Lowering this makes bunnyhopping easier."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_ladder_scale_speed",
    "consoleData": {
      "defaultValue": "0.78",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Scale top speed on ladders"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_ladder_slack_z_mult",
    "consoleData": {
      "defaultValue": "0.026",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Difference in Z increases toward the middle of the slack ladder."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_lagcompensationforcerestore",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Don't test validity of a lag comp restore, just do it."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_lan",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Server is a lan server ( no heartbeat, no authentication, no non-class C addresses )"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_lightquery_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_limit_buyrandom_per_life",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enable to limit buyrandom command to only run once per player life"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_load_forced_client_names_file",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Loads a file containing SteamID64 names for clients"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_load_random_client_names_file",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Loads a file containing random name words for clients"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_log_http_record_before_any_listeners",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_log_onefile",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "release"
      ],
      "description": "Log server information to only one file."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_log_roundstats",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_logbans",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "release"
      ],
      "description": "Log server bans in the server logs."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_logblocks",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "If true when log when a query is blocked (can cause very large log files)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_logecho",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a",
        "release"
      ],
      "description": "Echo log information to the console."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_logfile",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "release"
      ],
      "description": "Log server information in the log file."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_logflush",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "release"
      ],
      "description": "Flush the log file to disk on each write (slow)."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_mapvetopickvote_rnd",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled will shuffle veto pick maps list order every time"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_matchend_drops_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Rewards gameplay time is always accumulated for players, but drops at the end of the match can be prevented"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_matchpause_auto_5v5",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "When enabled will automatically pause the match at next freeze time if less than 5 players are connected on each team."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_maxunlag",
    "consoleData": {
      "defaultValue": "0.2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Maximum lag compensation in seconds"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_metaduplication",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Check serializer meta for duplication, add verbose to command for full spew"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_networkvar_perfieldtracking",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Track individual field offset changes, rather than a single dirty flag for the whole entity."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_networkvar_validate",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Validate each StateChanged against known offsets."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_noclipduringpause",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "If cheats are enabled, then you can noclip with the game paused (for doing screenshots, etc.)."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_outofammo_indicator",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_packstats",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Show entity packing stats, pass 'clear' as argument to reset counts."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_party_mode",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Party!!"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_pause_on_console_open",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "1 = Pause the game when pressing ~ to open the console. CTRL+~ opens the console without pause."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_phys_debug_callback_entities",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Print all entities that get touch callbacks. Each entity is printed only once."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_phys_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable all physics simulation"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_phys_sleep_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Enable sleeping for dynamic physics bodies."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_playerradio_use_allowlist",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "playerradio commands may only use responses from an allow list of commands."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_prime_accounts_only",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When this setting is enabled only prime users can connect to this game server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_pure",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Show user data."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_pure_kick_clients",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "If set to 1, the server will kick clients with mismatching files. Otherwise, it will issue a warning to the client."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_quantize_movement_input",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Quantize movement input values. Enabling this restricts players from using analog input to move at fractional speeds normally impossible with digital button input."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_ragdoll_lru_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_record_item_time_data",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Turn on recording of per player item time data into the server log."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_regeneration_force_on",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Cheat to test regenerative health systems"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_reliableavatardata",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Use server overrides for steam avatars"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_rethrow_last_grenade",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Emit the last grenade thrown on the server."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_server_verify_blood_on_player",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_setsteamaccount",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "token Set game server account token to use for logging in to a persistent game server account"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_show_move_collisions",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Enable this to visualize collisions between player and geometry."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_show_team_equipment_force_on",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Force on if not prohibited"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_show_team_equipment_prohibit",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Determines whether +cl_show_team_equipment is prohibited."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_show_teammate_death_notification",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Show chat notification upon teammate death"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_show_voip_indicator_for_enemies",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Makes it so the voip icon is shown over enemies as well as allies when they are talking"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_shutdown",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Sets the server to shutdown when all games have completed"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_skel_constraints_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_snapshot_unlimited",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "rep",
        "release"
      ],
      "description": "For debugging, don't throw away old snapshots so that if you break in debugger (on remote client or server) it won't require an uncompressed update to resume.  You may run out of memory of course..."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_soundscape_printdebuginfo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "print soundscapes"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_spec_use_tournament_content_standards",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_specnoclip",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "a",
        "nf",
        "rep"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_spewmeta",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Spew serializer meta"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sv_staminajumpcost",
    "consoleData": {
      "defaultValue": "0.08",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Stamina penalty for jumping"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_staminalandcost",
    "consoleData": {
      "defaultValue": "0.05",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Stamina penalty for landing"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_standable_normal",
    "consoleData": {
      "defaultValue": "0.7",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_steamauth_ignore_localhost",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Ignore VAC and auth errors for client connected via localhost address or in-engine loopback"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_steamgroup_exclusive",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "If set, only members of Steam group will be able to join the server when it's empty, public people will be able to join the server only if it has players."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_strafing_inaccuracy_bias",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_strafing_inaccuracy_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_strafing_inaccuracy_scale",
    "consoleData": {
      "defaultValue": "0.1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_stressbots",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "If set to 1, the server calculates data and fills packets to bots. Used for perf testing."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_talk_enemy_dead",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Dead players can hear all dead enemy communication (voice, chat)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_talk_enemy_living",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Living players can hear all living enemy communication (voice, chat)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_teamid_overhead",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Shows teamID over player's heads.  0 = off, 1 = on"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_teamid_overhead_always_prohibit",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Determines whether cl_teamid_overhead_always is prohibited."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_timebetweenducks",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Minimum time before recognizing consecutive duck key"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_turning_inaccuracy_decay",
    "consoleData": {
      "defaultValue": "0.8",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_turning_inaccuracy_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_unpause_on_console_close",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "1 = Unpause the game when pressing ~ to close the console. 0 = Leave the game paused."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_update_animgraph_movement_in_finish",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Whether we should update animgraph movement in FinishMove."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_usercmd_custom_random_seed",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled server will populate an additional random seed independent of the client"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_voiceenable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a",
        "nf",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_allow_in_warmup",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow voting during warmup?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_allow_spectators",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow spectators to initiate votes?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_count_spectator_votes",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow spectators to vote on issues?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_disallow_kick_on_match_point",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Disallow vote kicking on the match point round."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_issue_kick_allowed",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "Can people hold votes to kick players from the server?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_issue_loadbackup_allowed",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "Can people hold votes to load match from backup?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_issue_loadbackup_spec_authoritative",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled, admins load match from backup without players vote"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_issue_loadbackup_spec_only",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "When enabled, only admins load match from backup"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_issue_loadbackup_spec_safe",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When enabled, admins load match from backup in safe time of the round only"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_issue_pause_match_spec_only",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "When enabled, only admins start technical pause"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_issue_restart_game_allowed",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Can people hold votes to restart the game?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_vote_quorum_ratio",
    "consoleData": {
      "defaultValue": "0.501",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The minimum ratio of players needed to vote on an issue to resolve it."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_vote_to_changelevel_before_match_point",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Restricts vote to change level to rounds prior to match point (default 0, vote is never disallowed)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "sv_walkable_normal",
    "consoleData": {
      "defaultValue": "0.7",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_water_slow_amount",
    "consoleData": {
      "defaultValue": "0.9",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "sv_workshop_allow_other_maps",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When hosting a workshop collection, users can play other workshop map on this server when it is empty and then mapcycle into this server collection."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "switchhands",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "switchhandsleft",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "switchhandsright",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "sys_info",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print system information to the console"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "teammenu",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": "Show team selection window"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "telemetry_message",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Place a message in the telemetry timeline"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "telemetry_toggle_timespan",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Starts/stops a timespan with an ever increasing name."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "Test_CreateEntity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "test_dispatcheffect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Test a clientside dispatch effect.  Usage: test_dispatcheffect <effect name> <distance away> <flags> <magnitude> <scale>  Defaults are: <distance 1024> <flags 0> <magnitude 0> <scale 0>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "Test_EHandle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "test_entity_blocker",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Test command that drops an entity blocker out in front of the player."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "Test_ExitProcess",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Test_ExitProcess <exit code> - immediately kill the process."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "test_list_entities",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "test-list entities"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "Test_RandomPlayerPosition",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "thirdperson",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat",
        "execute_per_tick"
      ],
      "description": "Switch to thirdperson camera."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "thirdperson_mayamode",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Switch to thirdperson Maya-like camera controls."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "timedemo",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Play a demo and report performance info."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "timedemoquit",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Play a demo, report performance info, and then exit"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "timeleft",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "prints the time remaining in the match"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "timeout_ct_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "timeout_terrorist_start",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Toggles specified convar value on and off."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "toggleconsole",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Show/hide the console."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "toggleradarscale",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Toggles the radar scale"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_advertise_watchable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "prot",
        "nf",
        "norecord",
        "release"
      ],
      "description": "GOTV advertises the match as watchable via game UI, clients watching via UI will not need to type password"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_allow_static_shots",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Auto director uses fixed level cameras for shots"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_autorecord",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Automatically records all games as SourceTV demos."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_autoretry",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Relay proxies retry connection after network timeout"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_broadcast",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Automatically broadcasts all games as GOTV demos through Steam."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_broadcast1",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Automatically broadcasts all games as GOTV[1] demos through Steam."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_broadcast_status",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Print out broadcast status"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_chattimelimit",
    "consoleData": {
      "defaultValue": "0.2",
      "flags": [
        "release"
      ],
      "description": "Limits spectators to chat only every n seconds"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "tv_clients",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Shows list of connected SourceTV clients."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_delaymapchange",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Delays map change until broadcast is complete"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "nf",
        "release"
      ],
      "description": "Activates SourceTV on server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_enable1",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "nf",
        "release"
      ],
      "description": "Activates SourceTV[1] on server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_enable_delta_frames",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Indicates whether or not the tv should use delta frames for storage of intermediate frames. This takes more CPU but significantly less memory."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_enable_dynamic",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "nf",
        "release"
      ],
      "description": "When enabled, changes in tv_enable convars cause immediate startup or shutdown of hltv server"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_include_usercommands",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "HLTV streams will include player usercommands each tick"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_mem",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "hltv memory statistics. Use with 'ent 10' (dump entity 10 memory usage) or 'top 8' (dump top 8 memory users) or 'class' CWorld (dump CWorld class)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_nochat",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a",
        "user"
      ],
      "description": "Don't receive chat messages from other SourceTV spectators"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_overridemaster",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Overrides the SourceTV master root address."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_playcast_delay_prediction",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_record",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Starts SourceTV demo recording."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_relay",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Connect to SourceTV server and relay broadcast."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_relayradio",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Relay team radio commands to TV: 0=off, 1=on"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_relayvoice",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Relay voice data: 0=off, 1=on"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_retry",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Reconnects the SourceTV relay proxy."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_secure_bypass",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Bypass secure challenge on TV port"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_show_allchat",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "tv_status",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Show SourceTV server status."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_stop",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Stops the SourceTV broadcast."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_stoprecord",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Stops SourceTV demo recording."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "tv_transmitall",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Transmit all entities (not only director view)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ui_lobby_draft_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ui_party_msg_sound_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": "When enabled, lobby messages will play a short sound"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ui_render_task_generate_clips",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "unbind",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Unbind a key."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "unbindall",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Unbind all keys."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "unpause",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Clear the pause state of the server."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "violence_ablood",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a"
      ],
      "description": "Draw alien blood"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "violence_agibs",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a"
      ],
      "description": "Show alien gib entities"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "violence_hblood",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a"
      ],
      "description": "Draw human blood"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "violence_hgibs",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a"
      ],
      "description": "Show human gib entities"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "vis_force",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "vismon_poll_frequency",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "vmix_input",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Set an input mix value"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "vmix_output",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Dump main graph control output values"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "voice_always_sample_mic",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "When enabled, open the voip audio input stream when the application launches."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "voice_loopback",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "voice_loopback_no_networking",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "voice_modenable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release",
        "clientcmd_can_execute"
      ],
      "description": "Enable/disable voice in this mod."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "voice_modenable_toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Toggle the voice_modenable convar."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "voice_player_speaking_delay_threshold",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "voice_test_log_send",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "volume",
    "consoleData": {
      "defaultValue": "0.3",
      "flags": [
        "a"
      ],
      "description": "Sound volume"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "volume_fog_debug_volumes",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "volume_fog_enable_jitter",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "weapon_accuracy_nospread",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Disable weapon inaccuracy spread"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "weapon_accuracy_reset_on_deploy",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": "On deploy, forcibly reset weapon accuracy to zero."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "weapon_accuracy_shotgun_spread_patterns",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "weapon_debug_spread_gap",
    "consoleData": {
      "defaultValue": "0.67",
      "flags": [
        "cl",
        "cheat",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "weapon_near_empty_sound",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "weapon_reticle_knife_show",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "When enabled will show knife reticle on clients. Used for game modes requiring target id display when holding a knife."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "workshop_annotation_submit",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Submit annotation to workshop. To update an existing submission add its ID number from the workshop URL as a second argument."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "writekeybindings",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Saves current key bindings to disk."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "c_thirdpersonshoulder",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "callvote",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Start a vote on an issue."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cam_command",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Tells camera to change modes"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cam_showangles",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "When in thirdperson, print viewangles/idealangles/cameraoffsets to the console."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cam_snapto",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "camortho",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Switch to orthographic camera."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cancelselect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_aabb",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests box collision detection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_bullet",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests bullet cast"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_capsule",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests capsule collision detection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_convex",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests convex hull collision detection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_cylinder",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests cylinder collision detection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_intervals",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests interval ray cast"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_obb",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests cylinder collision detection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_physics",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests physics shape collision detection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_ray",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests ray cast"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cast_sphere",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Tests sphere cast"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cc_delay_time",
    "consoleData": {
      "defaultValue": "0.25",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Close caption delay before showing caption."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cc_spectator_only",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cc_subtitles",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "If set, don't show sound effect captions, just voice overs (i.e., won't help hearing impaired players)."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "changelevel",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "changelevel <mapname> :Multiplayer change level."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "chicken_stop",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_allow_animated_avatars",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Whether or not to allow animated avatars"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_allow_multi_input_binds",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_auto_cursor_scale",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a"
      ],
      "description": "Automatic cursor size scaling."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_autohelp",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "user"
      ],
      "description": "Auto-help"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_avatar_convert_png",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": "Converts all rgb avatars in the avatars directory to png"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_avatar_convert_rgb",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": "Converts all png avatars in the avatars directory to rgb"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_axis",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Draw an axis  Arguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_box",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Draw a bbox  Arguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_buywheel_nonumberpurchasing",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user",
        "release"
      ],
      "description": "Set non-zero to prevent buy wheel from purchasing via number keys"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_change_callback_limit",
    "consoleData": {
      "defaultValue": "0.2",
      "flags": [
        "cl",
        "release"
      ],
      "description": "change callback msec warning limit"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_checkdeclareclasses",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Check game code serializers"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_clock_correction",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Enable/disable clock correction on the client."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_clutch_mode",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Silence voice and other distracting sounds until the end of round or next death."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_crosshair_drawoutline",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Draws a black outline around the crosshair for better visibility"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_crosshair_dynamic_maxdist_splitratio",
    "consoleData": {
      "defaultValue": "0.35",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "If using cl_crosshairstyle 2, this is the ratio used to determine how long the inner and outer xhair pips will be. [inner = cl_crosshairsize*(1-cl_crosshair_dynamic_maxdist_splitratio), outer = cl_crosshairsize*cl_crosshair_dynamic_maxdist_splitratio]  [0 - 1]"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_crosshair_dynamic_splitalpha_outermod",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "If using cl_crosshairstyle 2, this is the alpha modification that will be used for the OUTER crosshair pips once they've split. [0.3 - 1]"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_crosshair_recoil",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_crosshair_t",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "T style crosshair"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_crosshairdot",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_crosshairgap_useweaponvalue",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "If set to 1, the gap will update dynamically based on which weapon is currently equipped"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_crosshairthickness",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_crosshairusealpha",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_dangerzone_moving_sound_volume",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_dangerzone_sound_volume",
    "consoleData": {
      "defaultValue": "0.2",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_deathcam_audio_mix_phase1_fade_amount",
    "consoleData": {
      "defaultValue": "0.15",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Sets the amount of ducking to do on death cam fade out. When set to 1, full DeathFadeLayer is applied."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_deathcam_audio_mix_phase2_fade_amount",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Sets the amount of ducking to do on death cam fade out. When set to 1, full DeathFadeLayer is applied."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_deathcam_audio_mix_phase2_fade_time",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Sets the amount of time we fade out over."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_debounce_zoom",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Whether or not to disable holding secondary fire to cycle zoom levels"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_debug_overlays_broadcast",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Render debug overlays from server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_debugoverlay_cycle_domain",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_debugoverlay_cycle_state",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_debugoverlay_dashboard",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Makes the debug overlay dashboard visible."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_debugoverlay_hide_imgui",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Hides the overlay."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_debugoverlay_toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Toggles visibility of the debug overlay system."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_disable_deathcam_audio_mix_fade_out",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": "When set to true, disables audio being silenced while the death cam fades out."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_disable_postprocessing",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_disable_ragdolls",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_disable_round_end_report",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_display_game_events",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_dm_buyrandomweapons",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Player will automatically receive a random weapon on spawn in deathmatch if this is set to 1 (otherwise, they will receive the last weapon)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_draw_only_deathnotices",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": "For drawing only the crosshair and death notices (used for moviemaking)"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_draw_simulating_entities",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_drawcross",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Draws a cross at the given location  Arguments: x y z"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_drawhud",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Enable the rendering of the hud"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_drawhud_specvote",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": "1: default; 0: disables vote UI for spectators"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_drawline",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Draws line between two 3D Points.  Green if no collision  Red is collides with something  Arguments: x1 y1 z1 x2 y2 z2"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_dumpentity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Dumps info about an entity"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_enable_party_voice",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_ent_absbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the total bounding box for the given entity(s) in green.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_actornames",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the entity name for all entities that have ShouldDisplayInActorNames true in code"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_animgraph_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays debug draws about the given entity(ies) animgraph  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_animgraph_record",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Toggles recording of animgraph replay of the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_attachments",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the attachment points on an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_bbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the movement bounding box for the given entity(ies) in orange.  Some entites will also display entity specific overlays.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_call",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "ent_call <funcname> <option:entname> calls function on current look target or filtername, checks on ent, then root, then mode, then map scope"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_clear_debug_overlays",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Clears all debug overlays"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_find",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Find and list all entities with classnames or targetnames that contain the specified substrings. Format: find_ent <substring>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_find_index",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Display data for entity matching specified index. Format: find_ent_index <index>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_grab",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "grabs the object in front of the player. Options: -loose -multiple -toggle"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_hierarchy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Prints the entity hierarchy tree rooted at the specified ent(s)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_hitbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the hitboxes for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_joints",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the joint names + axes an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_messages",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Toggles input/output message display for the selected entity(ies).  The name of the entity will be displayed as well as any messages that it sends or receives.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_name",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the entity name"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_picker",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Toggles 'picker' mode.  When picker is on, the bounding box, pivot and debugging text is displayed for whatever entity the player is looking at.  Arguments: full - enables all debug information"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_pivot",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the pivot for the given entity(ies).  (y=up=green, z=forward=blue, x=left=red).   Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_remove",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Removes the given entity(s)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_remove_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Removes all entities of the specified type  Arguments:    {entity_name} / {class_name}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_scale",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Scales entities. Arguments: <scale factor> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_scenehierarchy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Prints the entity scenenode hierarchy tree rooted at the specified ent(s)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_script_dump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Dumps the names and values of this entity's script scope to the console  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_select",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Select or deselects the given entities(s) for later manipulation  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_setang",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Set entity angles"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_setname",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Sets the targetname of the given entity(s)  Arguments:    <new entity name> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_setpos",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Move entity to position"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_show_contexts",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Show entity contexts in ent_text display"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_ent_show_damage",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Sets damage display mode.  When on, you will see the amount of damage dealt over the target's head."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_skeleton",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Displays text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text256",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays text debugging information about the given entity(ies) [within 256 units of the player] on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text_clear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Hide text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Set which ent_text filters you want:"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text_no_name_really_i_mean_it",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_ent_text_radius",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays text debugging information about the given entity(ies) [near the player] on top of the entity (See Overlay Text)  2 Arguments:    <Radius> <{entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text_sticky_add",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Adds to list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text_sticky_clear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Clears the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text_sticky_dump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Spews the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_text_sticky_remove",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Removes from the list of names to display text debugging information about the given entity(ies) on top of the entity (See Overlay Text)  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_ungrab",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "un-grabs all objects"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_vcollide_wireframe",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the interpolated vcollide wireframe pm am entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_viewoffset",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the eye position for the given entity(ies) in red.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ent_visibility_traces",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat",
        "vconsole_fuzzy"
      ],
      "description": "Displays visibility traces for the given entity  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_extrapolate",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Enable/disable extrapolation if interpolation history runs out."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_extrapolate_amount",
    "consoleData": {
      "defaultValue": "0.25",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Set how many seconds the client will extrapolate entities for."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_eye_occlusion_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_frametime_summary_report_detailed",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": "When a perf report is dumped at the end of the session, should it be detailed?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_fullupdate",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Force uncompressed update"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_glow_item_far_g",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_glow_item_far_r",
    "consoleData": {
      "defaultValue": "0.3",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_graphics_driver_warning_dont_show_again",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_grenadecrosshair_decoy",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Is the grenade crosshair enabled"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_grenadecrosshair_explosive",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Is the grenade crosshair enabled"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_grenadecrosshair_fire",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Is the grenade crosshair enabled"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_grenadecrosshair_flash",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Is the grenade crosshair enabled"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_grenadecrosshair_keepusercrosshair",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Keep the user's crosshair when the grenade crosshair is enabled"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_grenadecrosshair_smoke",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Is the grenade crosshair enabled"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_groups",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Show status of all spawn groups."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_http_log_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "norecord",
        "release",
        "clientcmd_can_execute"
      ],
      "description": "Allows sending HTTP log from client main menu."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_hud_radar_background_alpha",
    "consoleData": {
      "defaultValue": "0.627",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_hud_radar_map_additive",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Blend Hud radar map additively on top of background."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_ignorepackets",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Force client to ignore packets (for debugging)."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_imgui_debug_entity",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Shows the entity browswer, focused on the entity you specify.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_imgui_set_selection",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Sets ImGui selection"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_imgui_set_status_text",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Sets ImGui header status text"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_import_csgo_config",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_input_enable_raw_keyboard",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "release"
      ],
      "description": "Enable raw keyboard input"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_interp",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Read the effective client simulation interpolation amount in terms of time."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_interp_hermite",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Set to zero do disable hermite interpolation."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_interpolate_report",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Enable to show interpolation profile timing"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_inventory_debug_tooltip",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_inventory_radial_immediate_select",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "In inventory selection radials. Select weapons the moment the cursor highlights them. Otherwise, only select the selected item on exit."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_inventory_radial_tap_to_cycle",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "In inventory selection radials. Select weapons the moment the cursor highlights them. Otherwise, only select the selected item on exit."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_invites_only_friends",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "If turned on, will ignore in-game invites from recent teammates or other non-friends"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_invites_only_mainmenu",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "If turned on, will ignore all invites when user is playing a match"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_ironsight_usecrosshaircolor",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Should the scope dot match the user's crosshair color"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_jiggle_bone_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Display physics-based 'jiggle bone' debugging information"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_jiggle_bone_debug_pitch_constraints",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Display physics-based 'jiggle bone' debugging information"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_jiggle_bone_debug_yaw_constraints",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": "Display physics-based 'jiggle bone' debugging information"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_jiggle_bone_invert",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_joystick_enabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "Enable joystick input"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_latch_report",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Enable to output stats about latching"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_lightquery_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_lock_camera",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_low_latency_vsync_recommendation_dont_show_again",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_mouselook",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user",
        "disconnected"
      ],
      "description": "Set to 1 to use mouse for look, 0 for keyboard look. Cannot be set while connected to a server."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_mute_enemy_team",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Block all communication from players on the enemy team."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_net_buffer_ticks_use_interp",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": "If false, we smooth over packet loss by adjusting the clock synchronization to buffer packets.  If true, we process packets immediately and use cl_interp to delay their effects"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_net_printsummary",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Print a summary report of Source2 engine networking statistics.  (Ticks, netchan messages, etc.)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_obs_interp_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Enables interpolation between observer targets"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_obs_interp_pos_rate",
    "consoleData": {
      "defaultValue": "0.27",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_particle_simulate",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Enables/Disables Particle Simulation"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_phys_debug_callback_entities",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Print all entities that get touch callbacks. Each entity is printed only once."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_phys_enabled",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Enable all physics simulation"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_phys_sleep_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Enable sleeping for dynamic physics bodies."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_player_proximity_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_player_ragdolls_collide",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_playerspraydisable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Disable player sprays."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_pred_always_latch",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_pred_print_every_cmd",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Print something every time we predict a command"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_predict_body_shot_fx",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_predict_head_shot_fx",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_predict_kill_ragdolls",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_prefer_lefthanded",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Left handed preference"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_prop_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Toggle prop debug mode. If on, props will show colorcoded bounding boxes. Red means ignore all damage. White means respond physically to damage but never break. Green maps health in the range of 100 down to 1."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_querycache_stats",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Display status of the query cache (client only)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_quickinventory_lastinv",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_radar_always_centered",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "If set to 0, the radar is maximally used. Otherwise the player is always centered, even at map extents."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_radar_icon_scale_min",
    "consoleData": {
      "defaultValue": "0.6",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Sets the minimum icon scale. Valid values are 0.4 to 1.25."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_radar_rotate",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "1"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_radar_scale",
    "consoleData": {
      "defaultValue": "0.7",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Sets the radar scale. Valid values are 0.25 to 1.0."
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_radar_scale_dynamic",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Toggles between a radar that scales dynamically to encompass all the detected elements on the map."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_radar_square_with_scoreboard",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "If set, the radar will toggle to square when the scoreboard is visible."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_radial_radio_tap_to_ping",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "When tapping the radial radio button, leave a ping if nothing is selected within the time in seconds set in cl_radial_menu_tap_duration"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_radialmenu_deadzone_size",
    "consoleData": {
      "defaultValue": "0.4",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_radialmenu_deadzone_size_joystick",
    "consoleData": {
      "defaultValue": "0.17",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_ragdoll_lru_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_refresh_rate_recommendation_dont_show_again",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_removedecals",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Remove the decals from the entity under the crosshair."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_resend",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "release"
      ],
      "description": "Delay in seconds before the client will resend the 'connect' attempt"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_rr_reloadresponsesystems",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Reload all response system scripts."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_sanitize_muted_players",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Hide names and avatars of muted players."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_sanitize_player_names",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Replace names of other players with something non-offensive."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_save_animgraph_recording",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Saves all active animgraph recordings to disk"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_scoreboard_survivors_always_on",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_script_add_debug_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Add a filter to the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_add_watch",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Add a watch to the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_add_watch_pattern",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Add a watch to the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_attach_debugger",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Connect the vscript VM to the script debugger"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_clear_watches",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Clear all watches from the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_debug",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Toggle the in-game script debug features"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_dump_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Dump the state of the VM to the console"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_find",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Find a key in the VM"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_help",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Output help for script functions"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_reload",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Reload scripts"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_reload_code",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Execute a vscript file, replacing existing functions with the functions in the run script"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_reload_entity_code",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Execute all of this entity's VScripts, replacing existing functions with the functions in the run scripts"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_remove_debug_filter",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Remove a filter from the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_remove_watch",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Remove a watch from the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_remove_watch_pattern",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Remove a watch from the game debug overlay"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_resurrect_unreachable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Use the garbage collector to track down reference cycles"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_trace_disable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Turn off a particular trace output by file or function name"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_trace_disable_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Turn off all trace output"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_trace_disable_key",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Turn off a particular trace output by table/instance"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_trace_enable",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Turn on a particular trace output by file or function name"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_trace_enable_all",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Turn on all trace output"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_script_trace_enable_key",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Turn on a particular trace output by table/instance"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_server_graphic1_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": "When enabled, 360x60 (<16kb) image file will be displayed to on-server spectators."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_server_graphic2_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": "When enabled, 220x45 (<16kb) image file will be displayed to on-server spectators."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_show_clan_in_death_notice",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Is set, the clan name will show next to player names in the death notices."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_show_equipped_character_for_player_avatars",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_showents",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Dump entity list to console."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_showloadout",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Toggles display of current loadout."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_sim_grenade_trajectory",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Draw trajectory of the deployed grenade if thrown from this position. Takes an optional parameter for how long the drawn trajectory will last."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_skel_constraints_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_skeleton_instance_smear_boneflags",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Smear boneflags across the model.  Costs computation, but tests to make sure your bone flags are consistent."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_smoke_player_particle_effect",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_snd_new_visualize",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays soundevent name played at it's 3d position"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_sniper_auto_rezoom",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Auto-rezoom snipers after a shot"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_sniper_delay_unscope",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_sos_test_get_opvar",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_sos_test_set_opvar",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_soundscape_flush",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat",
        "server_can_execute"
      ],
      "description": "Flushes the client side soundscapes"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_spec_show_bindings",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release",
        "clientcmd_can_execute"
      ],
      "description": "Toggle the visibility of the spectator bindings."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_spec_stats",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_spec_use_tournament_content_standards",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_spewserializers",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Spew serializers"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_teamcounter_playercount_instead_of_avatars",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_teamid_overhead_colors_show",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Show team overhead id in teammate color"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_teamid_overhead_fade_near_crosshair",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "The amount to fade teamid when near the crosshair. Range is 0.0-1.0. 0: off"
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cl_test_list_entities",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "test-list entities"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_ticktiming",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "{print|<interval>} [summary|detail]  Print timing stats now, or set report interval"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cl_track_render_eye_angles",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Spew render eye angles"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_use_opens_buy_menu",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Pressing the +use key will open the buy menu if in a buy zone (just as if you pressed the 'buy' key)."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_versus_intro",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_vrr_recommendation_dont_show_again",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_weapon_clip_thinwalls",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_weapon_clip_thinwalls_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_weapon_clip_thinwalls_lock",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cl_weapon_selection_rarity_color",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "clear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Clear console output."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "clear_bombs",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "clearall",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Clear console output from all views."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cli_ent_attachments",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the interpolated attachment points on an entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cli_ent_hitbox",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cli_ent_pivot",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the interpolated pivot for the given entity(ies).  (y=up=green, z=forward=blue, x=left=red).   Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cli_ent_skeleton",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the skeleton for the given entity(ies).  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cli_ent_vcollide_wireframe",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Displays the interpolated vcollide wireframe pm am entity.  Arguments:    {entity_name} / {class_name} / {entity_index} / {no argument = pick what player is looking at}"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "closecaption",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "a",
        "user"
      ],
      "description": "Enable close captioning."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "clutch_mode_toggle",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Toggle clutch mode convar"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "collect_entity_model_name",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Collect model names of the entities you're pointing at"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "commentary",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "a"
      ],
      "description": "Desired commentary mode state."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "commentary_finishnode",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "con_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "a",
        "per_user"
      ],
      "description": "Allows the console to be activated."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "condump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "dump the text currently in the console to condumpXX.log"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "connect",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Connect to a remote server."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "connect_hltv",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Connect to a remote HLTV server."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "consoletool",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Open a VConsole subtool."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cq_logging",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "command queue logging of events."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cq_print_every_command",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "print every command as we execute it"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "crash",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Crash the client. Optional parameter -- type of crash:  0: read from NULL  1: write to NULL  2: force an Assert  3: infinite loop  4: stack buffer overrun  5: multiple asserts across multiple threads"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "crash_error",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Cause the engine to crash by Plat_FatalError on main thread (Debug!!)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "crash_error_job",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Cause the engine to crash by Plat_FatalError on job thread (Debug!!)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "crash_error_thread",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Cause the engine to crash by Plat_FatalError on non-main thread (Debug!!)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "crash_job",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Cause the engine to crash in a job thread (Debug!!)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "crash_thread",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cheat"
      ],
      "description": "Cause the engine to crash in a brand new non-main thread (Debug!!)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "create_flashlight",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "create_radius_damage",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Causes radius damage where you're looking, at the passed in radius."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "CreatePredictionError",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Create a prediction error"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "crosshair",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cs_quit_prompt",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Quit the game"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "csgo_download_match",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "norecord",
        "clientcmd_can_execute"
      ],
      "description": "Downloads a match via serial code and starts playback"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "csgo_fatdemo_enable",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "csgo_map_preview_scale",
    "consoleData": {
      "defaultValue": "3.254",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "csgo_use_fullsort_for_opaque",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "fullsort the opaque pass when there wasn't a depth prepass"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "csm_shadow_worldview_align_x_to_u",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "csm_shadow_worldview_shear_align_z_to_v",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "csm_split_log_scalar",
    "consoleData": {
      "defaultValue": "0.85",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "csm_viewmodel_nearz",
    "consoleData": {
      "defaultValue": "0.5",
      "flags": [
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "float"
    }
  },
  {
    "command": "cv_bot_ai_bt_hiding_spot_show",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "cheat"
      ],
      "description": "Draw hiding spots."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cv_bot_ai_bt_moveto_show_next_hiding_spot",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "rep",
        "cheat"
      ],
      "description": "Draw the hiding spot the bot will check next."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "cvarlist",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Show the list of convars/concommands."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "cyclevar",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Cycle through specified convar values."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "battery_saver",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "a"
      ],
      "description": "OBSOLETE replaced by mobile_fps_* - Battery saver mode. 0=off, 1=on"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "benchframe",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Takes a snapshot of a particular frame in a time demo."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bind",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Bind a key."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "binddefaults",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Bind all keys to their default values."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bindss",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Bind a key for a particular splitscreen player."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_add",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "bot_add <t|ct> <type> <difficulty> <name> - Adds a bot matching the given criteria."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_add_ct",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "bot_add_ct <type> <difficulty> <name> - Adds a Counter-Terrorist bot matching the given criteria."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_add_t",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "bot_add_t <type> <difficulty> <name> - Adds a terrorist bot matching the given criteria."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_all_weapons",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allows the bots to use all weapons"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_allow_grenades",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use grenades."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_allow_machine_guns",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use the machine gun."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_allow_pistols",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use pistols."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_allow_rifles",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use rifles."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_allow_rogues",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may occasionally go 'rogue'. Rogue bots do not obey radio commands, nor pursue scenario goals."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_allow_shotguns",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use shotguns."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_allow_snipers",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use sniper rifles."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_allow_sub_machine_guns",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots may use sub-machine guns."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_auto_follow",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots with high co-op may automatically follow a nearby human player."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_auto_vacate",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots will automatically leave to make room for human players."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_controllable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines whether bots can be controlled by players"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_crouch",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_defer_to_human_goals",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero and there is a human on the team, the bots will not do the scenario tasks."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_defer_to_human_items",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero and there is a human on the team, the bots will not get scenario items."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_dont_shoot",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat",
        "release"
      ],
      "description": "If nonzero, bots will not fire weapons (for debugging)."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_flipout",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots use no CPU for AI. Instead, they run around randomly."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_freeze",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_goto_mark",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sends a bot to the marked nav area (useful for testing navigation meshes)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_goto_selected",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Sends a bot to the selected nav area (useful for testing navigation meshes)"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_ignore_enemies",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If nonzero, bots will ignore enemies (for debugging)."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_ignore_players",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Bots will not see non-bot players."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_join_after_player",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots wait until a player joins before entering the game."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_kick",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "bot_kick <all> <t|ct> <type> <difficulty> <name> - Kicks a specific bot, or all bots, matching the given criteria."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_kill",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "bot_kill <all> <t|ct> <type> <difficulty> <name> - Kills a specific bot, or all bots, matching the given criteria."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_knives_only",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Restricts the bots to only using knives"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_mimic_spec_buttons",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "+attack, +jump etc are used for spectator control instead of being passed on to spectated bot"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_pistols_only",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Restricts the bots to only using pistols"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_place",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "bot_place - Places a bot from the map at where the local player is pointing."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_randombuy",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "should bots ignore their prefered weapons and just buy weapons at random?"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_show_battlefront",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show areas where rushing players will initially meet."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_show_nav",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For internal testing purposes."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_show_occupy_time",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Show when each nav area can first be reached by each team."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_snipers_only",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "release"
      ],
      "description": "Restricts the bots to only using sniper rifles"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "bot_walk",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots can only walk, not run."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "bot_zombie",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "If nonzero, bots will stay in idle mode and not attack."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "box",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw a bbox  Arguments:  minx miny miny maxx maxy maxz <lifetime = 10.0> <r g b a>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "buddha",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "nf",
        "cheat"
      ],
      "description": "Player takes damage but won't die"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "buddha_ignore_bots",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "nf",
        "cheat"
      ],
      "description": "Bots always buddha 0"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "button_info",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Display information about the specified key or button."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "buymenu",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "server_can_execute"
      ],
      "description": "Show or hide main buy menu"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "buyrandom",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv"
      ],
      "description": "Buy random primary and secondary. Primarily for deathmatch where cost is not an issue."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "ai_debug_scripted_sequence",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ai_disabled",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "ai_off_nav_show_nearest",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "alias",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "release"
      ],
      "description": "Alias a command."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "anim_resource_validate_on_load",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "release"
      ],
      "description": "Validates the animation group channel list against the animations on load for every animation"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "animated_material_attributes",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "animevents_dump",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "List all the currently registered anim events."
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "animgraph_debug",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Debug animation graph"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "animgraph_footlock_ik_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "cheat"
      ],
      "description": "Enable IK."
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "animgraph_record_all",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Automatically start recording AnimGraphs when they get created, and save them to disk when they are destroyed"
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "animgraph_set_parameter_bool",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "animgraph_set_parameter_enum",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified enum parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "animgraph_set_parameter_float",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified float parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "animgraph_set_parameter_int",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified int parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "animgraph_set_parameter_string",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified bool parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "animgraph_set_parameter_vector",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Specified entities will have the specified vector parameter set to the value specified.  Useful for animators to test.  Arguments: <entity> <parameter name> <value you want to send to animgraph for the entity>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "animgraph_slope_draw_raycasts",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "animgraph_slope_enable",
    "consoleData": {
      "defaultValue": "true",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "animgraph_trace_static_only",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "annotation_append",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Load annotation to a file without clearing existing annotations"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "annotation_auto_load",
    "consoleData": {
      "defaultValue": "false",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "boolean"
    }
  },
  {
    "command": "annotation_clear",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Clear all annotation"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "annotation_create",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Creates an annotation"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "annotation_delete_previous_node_set",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Delete the last node set created"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "annotation_load",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Load annotation to a file after first clearing existing annotations"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "annotation_reload",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Reload the annotation file"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "annotation_reload_language_file",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Creates an annotation"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "annotation_save",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": "Save annotation to a file"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "autobuy",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Attempt to purchase items with the order listed in cl_autobuy"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "axis",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw an axis  Arguments:  x y z pitch yaw roll <lifetime = 10.0> <r g b a>"
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-cl_show_team_equipment",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-lookatweapon",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-quickbuyradial",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-quickgrenaderadial",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-quickinv",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-radialradio",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-radialradio2",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-radialradio3",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "-spray_menu",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "+cl_show_team_equipment",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    },
    "uiData": {
      "type": "action"
    }
  },
  {
    "command": "_record",
    "consoleData": {
      "defaultValue": null,
      "flags": [
        "norecord",
        "release"
      ],
      "description": "Record a demo incrementally."
    },
    "uiData": {
      "type": "action"
    }
  }
]