[
  {
    "command": "debug_visibility_monitor",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "debugoverlay_text_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a",
        "cheat"
      ],
      "description": "Scale of the text used for 3d display"
    }
  },
  {
    "command": "default_fov",
    "consoleData": {
      "defaultValue": "90",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "demo_highlight_seconds_after",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "release"
      ],
      "description": "How many seconds after the actual highlight event to show when viewing highlights."
    }
  },
  {
    "command": "demo_highlight_seconds_before",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "cl",
        "release"
      ],
      "description": "How many seconds before the actual highlight event to show when viewing highlights."
    }
  },
  {
    "command": "demo_mouse_enable_binding",
    "consoleData": {
      "defaultValue": "drop",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Name of the binding to enable mouse on demo playback UI"
    }
  },
  {
    "command": "demo_skip_to_shot_seconds_before",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "release"
      ],
      "description": "How many seconds before the shot to skip to when skipping to a specific shot ID."
    }
  },
  {
    "command": "demo_ui_mode",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "release"
      ],
      "description": "UI mode for demo playback. 0 = disabled, 1 = minimal, 2 = full"
    }
  },
  {
    "command": "developer",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Set developer message level."
    }
  },
  {
    "command": "dota_spatial_audio_mix",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "release"
      ],
      "description": "Mix value to blend spatial and non-spatial audio in Dota 2."
    }
  },
  {
    "command": "dsp_dist_max",
    "consoleData": {
      "defaultValue": "1440",
      "flags": [
        "cheat",
        "demo"
      ],
      "description": ""
    }
  },
  {
    "command": "dsp_dist_min",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat",
        "demo"
      ],
      "description": ""
    }
  },
  {
    "command": "engine_no_focus_sleep",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "ent_actornames_font",
    "consoleData": {
      "defaultValue": "Consolas",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "ent_actornames font name"
    }
  },
  {
    "command": "ent_actornames_fontsize",
    "consoleData": {
      "defaultValue": "24",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "ent_actornames font size"
    }
  },
  {
    "command": "ent_pivot_size",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "a",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "ent_showonlyattachment",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "ent_skeleton_duration",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Duration of ent_skeleton display"
    }
  },
  {
    "command": "ent_text_flags_active",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "a",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "entity_log_load_unserialize",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Output unserialization of entities on map load. 0 - off, 1 - client/server, 2 - server, 3 - client"
    }
  },
  {
    "command": "execute_command_every_frame",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "ff_damage_bullet_penetration",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If friendly fire is off, this will scale the penetration power and damage a bullet does when penetrating another friendly player"
    }
  },
  {
    "command": "ff_damage_reduction_grenade_self",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How much to damage a player does to himself with his own grenade.  Range is from 0 - 1 (with 1 being damage equal to what is done to an enemy)"
    }
  },
  {
    "command": "fog_color",
    "consoleData": {
      "defaultValue": "-1.000000 -1.000000 -1.000000",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_colorskybox",
    "consoleData": {
      "defaultValue": "-1.000000 -1.000000 -1.000000",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_end",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_endskybox",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_hdrcolorscale",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_hdrcolorscaleskybox",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_maxdensity",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_maxdensityskybox",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_override",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Overrides the map's fog settings (-1 populates fog_ vars with map's values)"
    }
  },
  {
    "command": "fog_override_end",
    "consoleData": {
      "defaultValue": "3500",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_override_exponent",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_override_start",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_start",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fog_startskybox",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "fov_cs_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Sets the view fov if cheats are on."
    }
  },
  {
    "command": "fov_desired",
    "consoleData": {
      "defaultValue": "75",
      "flags": [
        "cl",
        "a",
        "user"
      ],
      "description": "Sets the base field-of-view."
    }
  },
  {
    "command": "fps_max",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "a",
        "release"
      ],
      "description": "Frame rate limiter.  0=no limit.  Does not apply to dedicated server."
    }
  },
  {
    "command": "fps_max_tools",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "a"
      ],
      "description": "Additional frame rate limit while in tools mode and a window other than the game window has focus. Note that fps_max still applies, this only allows the maximum frame rate for tools mode to be lower. 0=no tools specific limit."
    }
  },
  {
    "command": "fps_max_ui",
    "consoleData": {
      "defaultValue": "200",
      "flags": [
        "a"
      ],
      "description": "Frame rate limiter while the game UI is displayed.  0=no limit.  Does not apply to dedicated server."
    }
  },
  {
    "command": "fs_report_sync_opens",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "0:Off, 1:Always, 2:Not during load"
    }
  },
  {
    "command": "func_break_max_pieces",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "a",
        "rep"
      ],
      "description": ""
    }
  },
  {
    "command": "game_mode",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The current game mode (based on game type). See GameModes.txt."
    }
  },
  {
    "command": "game_type",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The current game type. See GameModes.txt."
    }
  },
  {
    "command": "gameinstructor_verbose",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Set to 1 for standard debugging or 2 (in combo with gameinstructor_verbose_lesson) to show update actions."
    }
  },
  {
    "command": "gameinstructor_verbose_lesson",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Display more verbose information for lessons have this name."
    }
  },
  {
    "command": "glow_outline_width",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Width of glow outline effect in screen space."
    }
  },
  {
    "command": "gotv_theater_container",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Enables GOTV theater mode for the specified container, setting it to 'live' will play top live matches"
    }
  },
  {
    "command": "healthshot_health",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "healthshot_healthboost_damage_multiplier",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "healthshot_healthboost_speed_multiplier",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "healthshot_healthboost_time",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "hidehud",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "bitmask: 1=weapon selection, 2=flashlight, 4=all, 8=health, 16=player dead, 32=needssuit, 64=misc, 128=chat, 256=crosshair, 512=vehicle crosshair, 1024=in vehicle"
    }
  },
  {
    "command": "host_framerate",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Set to lock per-frame time elapse."
    }
  },
  {
    "command": "host_timescale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": "Prescale the clock by this amount."
    }
  },
  {
    "command": "hostage_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Show hostage AI debug information"
    }
  },
  {
    "command": "hostfile",
    "consoleData": {
      "defaultValue": "host.txt",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The HOST file to load."
    }
  },
  {
    "command": "hostip",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Host game server ip"
    }
  },
  {
    "command": "hostname",
    "consoleData": {
      "defaultValue": "Tinnitus",
      "flags": [
        "release"
      ],
      "description": "Hostname for server."
    }
  },
  {
    "command": "hostport",
    "consoleData": {
      "defaultValue": "27015",
      "flags": [
        "release"
      ],
      "description": "Host game server port"
    }
  },
  {
    "command": "hud_fastswitch",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "hud_scaling",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Scales hud elements"
    }
  },
  {
    "command": "ik_debug_chain_to_filter_by",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "ik_hinge_debug_bone_index",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "imgui_default_font_size",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "a",
        "cheat"
      ],
      "description": "Default imgui font size"
    }
  },
  {
    "command": "inferno_child_spawn_max_depth",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "inferno_damage",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Damage per second"
    }
  },
  {
    "command": "inferno_damage_ct",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Damage per second from CT inferno"
    }
  },
  {
    "command": "inferno_dlight_spacing",
    "consoleData": {
      "defaultValue": "7200",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Inferno dlights are at least this far apart"
    }
  },
  {
    "command": "inferno_flame_lifetime",
    "consoleData": {
      "defaultValue": "7",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Average lifetime of each flame in seconds"
    }
  },
  {
    "command": "inferno_flame_spacing",
    "consoleData": {
      "defaultValue": "42",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Minimum distance between separate flame spawns"
    }
  },
  {
    "command": "inferno_friendly_fire_duration",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For this long, FF is credited back to the thrower."
    }
  },
  {
    "command": "inferno_max_flames",
    "consoleData": {
      "defaultValue": "16",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Maximum number of flames that can be created"
    }
  },
  {
    "command": "inferno_max_range",
    "consoleData": {
      "defaultValue": "150",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Maximum distance flames can spread from their initial ignition point"
    }
  },
  {
    "command": "inferno_max_range_ct",
    "consoleData": {
      "defaultValue": "110",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Maximum distance flames can spread from their initial ignition point for an incendiary"
    }
  },
  {
    "command": "inferno_per_flame_spawn_duration",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Duration each new flame will attempt to spawn new flames"
    }
  },
  {
    "command": "inferno_spawn_angle",
    "consoleData": {
      "defaultValue": "45",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Angular change from parent"
    }
  },
  {
    "command": "inferno_spread_speed_mult",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Speed up the spreadrate of the Molotov until max number of nodes are created.  slowdown < 1 > Speedup"
    }
  },
  {
    "command": "inferno_spread_speed_mult_ct",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Speed up the spread rate of the Incendiary until max number of nodes are created. slowdown < 1 > Speedup"
    }
  },
  {
    "command": "inferno_surface_offset",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "inferno_velocity_normal_factor",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "input_forceuser",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": "Force user input to this split screen player."
    }
  },
  {
    "command": "install_dlc_workshoptools_cvar",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "DLC Install Status"
    }
  },
  {
    "command": "ip",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Overrides IP for multihomed hosts"
    }
  },
  {
    "command": "iv_debugbone",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Debug bone name for interpolation spew of CAnimationState."
    }
  },
  {
    "command": "joy_advaxisr",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_advaxisu",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_advaxisv",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_advaxisx",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_advaxisy",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_advaxisz",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_circle_correct_mode",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_circle_correct_mode_vehicle",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_forward_sensitivity",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_name",
    "consoleData": {
      "defaultValue": "joystick",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_pitch_sensitivity",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_pitchsensitivity",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_response_look",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_response_move",
    "consoleData": {
      "defaultValue": "9",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_side_sensitivity",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_sidesensitivity",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_yaw_sensitivity",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "joy_yawsensitivity",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "labelled_debug_helper_arc_segments",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "labelled_debug_helper_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "lobby_default_privacy_bits2",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Lobby default permissions (0: private, 1: public)"
    }
  },
  {
    "command": "logaddress_token_secret",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Set a secret string that will be hashed when using logaddress with explicit token hash."
    }
  },
  {
    "command": "mapoverview_icon_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Sets the icon scale multiplier for the overview map. Valid values are 0.5 to 3.0."
    }
  },
  {
    "command": "mat_fullbright",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "Debug rendering modes"
    }
  },
  {
    "command": "mat_max_lighting_complexity",
    "consoleData": {
      "defaultValue": "8",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_overdraw",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "Visualize overdraw"
    }
  },
  {
    "command": "mat_overdraw_color",
    "consoleData": {
      "defaultValue": "0.075000 0.150000 0.300000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_shading_complexity_color",
    "consoleData": {
      "defaultValue": "1.000000 0.500000 0.250000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_shading_complexity_max_instruction_count",
    "consoleData": {
      "defaultValue": "1024",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_shading_complexity_max_register_count",
    "consoleData": {
      "defaultValue": "128",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_show_distance_field",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "0=Off, 1=Visualize trace from camera, 2=Visualize occlusion, 3=Visualize far field trace from camera"
    }
  },
  {
    "command": "mat_tonemap_bloom_scale",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_bloom_start_value",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_force_accelerate_exposure_down",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_force_average_lum_min",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": "Override. Old default was 3.0"
    }
  },
  {
    "command": "mat_tonemap_force_log_lum_max",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_force_log_lum_min",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_force_max",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_force_min",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_force_percent_bright_pixels",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": "Override. Old value was 1.0"
    }
  },
  {
    "command": "mat_tonemap_force_percent_target",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": "Override. Old default was 45."
    }
  },
  {
    "command": "mat_tonemap_force_rate",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_force_scale",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_force_use_alpha",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_tonemap_uncap_exposure",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mat_wireframe",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "0=Off, 1=Surface Wireframe, 2=Transparent Wireframe"
    }
  },
  {
    "command": "mesh_calculate_curvature_smooth_pass_count",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mesh_calculate_curvature_smooth_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "mm_csgo_community_search_players_min",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "a",
        "release"
      ],
      "description": "When performing CSGO community matchmaking look for servers with at least so many human players"
    }
  },
  {
    "command": "mm_dedicated_force_servers",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Comma delimited list of ip:port of servers used to search for dedicated servers instead of searching for public servers. Use syntax `publicip1:port|privateip1:port,publicip2:port|privateip2:port` if your server is behind NAT. If the server is behind NAT, you can specify `0.0.0.0|privateip:port` and if server port is in the list of `mm_server_search_lan_ports` its public address should be automatically detected."
    }
  },
  {
    "command": "mm_dedicated_search_maxping",
    "consoleData": {
      "defaultValue": "150",
      "flags": [
        "a"
      ],
      "description": "Longest preferred ping to dedicated servers for games"
    }
  },
  {
    "command": "mm_server_search_lan_ports",
    "consoleData": {
      "defaultValue": "27015,27016,27017,27018,27019,27020",
      "flags": [
        "a",
        "release"
      ],
      "description": "Ports to scan during LAN games discovery. Also used to discover and correctly connect to dedicated LAN servers behind NATs."
    }
  },
  {
    "command": "mm_session_search_qos_timeout",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "mm_session_sys_kick_ban_duration",
    "consoleData": {
      "defaultValue": "180",
      "flags": [
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "mm_session_sys_pkey",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "mobile_fps_limit",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "a"
      ],
      "description": "MOBILE_FPS_CONTROL: Mobile FPS limit - 15, 30, 60"
    }
  },
  {
    "command": "model_default_preview_sequence_name",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "a",
        "rep"
      ],
      "description": ""
    }
  },
  {
    "command": "molotov_throw_detonate_time",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "motdfile",
    "consoleData": {
      "defaultValue": "motd.txt",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The MOTD file to load."
    }
  },
  {
    "command": "mp_afterroundmoney",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "amount of money awared to every player after each round"
    }
  },
  {
    "command": "mp_backup_round_file",
    "consoleData": {
      "defaultValue": "backup",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If set then server will save all played rounds information to files filename_date_time_team1_team2_mapname_roundnum_score1_score2.txt"
    }
  },
  {
    "command": "mp_backup_round_file_last",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Every time a backup file is written the value of this convar gets updated to hold the name of the backup file."
    }
  },
  {
    "command": "mp_backup_round_file_pattern",
    "consoleData": {
      "defaultValue": "%prefix%_round%round%.txt",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If set then server will save all played rounds information to files named by this pattern, e.g.'%prefix%_%date%_%time%_%team1%_%team2%_%map%_round%round%_score_%score1%_%score2%.txt'"
    }
  },
  {
    "command": "mp_bot_ai_bt",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Use the specified behavior tree file to drive the bot behavior."
    }
  },
  {
    "command": "mp_buy_allow_guns",
    "consoleData": {
      "defaultValue": "255",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Whether players can purchase guns: pistols (1), SMGs (2), rifles (4), shotguns (8), sniper rifles (16), heavy MGs (32)."
    }
  },
  {
    "command": "mp_buy_anywhere",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "When set, players can buy anywhere, not only in buyzones. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists."
    }
  },
  {
    "command": "mp_buy_during_immunity",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "When set, players can buy when immune, ignoring buytime. 0 = default. 1 = both teams. 2 = Terrorists. 3 = Counter-Terrorists."
    }
  },
  {
    "command": "mp_buytime",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How many seconds after round start players can buy items for."
    }
  },
  {
    "command": "mp_c4timer",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "how long from when the C4 is armed until it blows"
    }
  },
  {
    "command": "mp_competitive_endofmatch_extra_time",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "release"
      ],
      "description": "After a competitive match finishes rematch voting extra time is given for rankings."
    }
  },
  {
    "command": "mp_consecutive_loss_aversion",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How loss streak is affected with round win: 0 = win fully resets loss bonus, 1 = first win steps down loss bonus, 2 = first win holds loss bonus and step down starting with second win"
    }
  },
  {
    "command": "mp_consecutive_loss_max",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "mp_coopmission_bot_difficulty_offset",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "The difficulty offset modifier for bots during coop missions."
    }
  },
  {
    "command": "mp_ct_default_grenades",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The default grenades that the CTs will spawn with.  To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'"
    }
  },
  {
    "command": "mp_ct_default_melee",
    "consoleData": {
      "defaultValue": "weapon_knife",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The default melee weapon that the CTs will spawn with.  Even if this is blank, a knife will be given. To give a taser, it should look like this: 'weapon_knife weapon_taser'.  Remember to set mp_weapons_allow_zeus to 1 if you want to give a taser!"
    }
  },
  {
    "command": "mp_ct_default_primary",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The default primary (rifle) weapon that the CTs will spawn with"
    }
  },
  {
    "command": "mp_ct_default_secondary",
    "consoleData": {
      "defaultValue": "weapon_hkp2000",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The default secondary (pistol) weapon that the CTs will spawn with"
    }
  },
  {
    "command": "mp_damage_scale_ct_body",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Scales the damage a CT player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)"
    }
  },
  {
    "command": "mp_damage_scale_ct_head",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Scales the damage a CT player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied."
    }
  },
  {
    "command": "mp_damage_scale_t_body",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Scales the damage a T player takes by this much when they take damage in the body. (1 == 100%, 0.5 == 50%)"
    }
  },
  {
    "command": "mp_damage_scale_t_head",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Scales the damage a T player takes by this much when they take damage in the head (1 == 100%, 0.5 == 50%).  REMEMBER! headshots do 4x the damage of the body before this scaler is applied."
    }
  },
  {
    "command": "mp_damage_vampiric_amount",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "If Set to non-0, will determine the fraction of damage dealt that will be given to attacker."
    }
  },
  {
    "command": "mp_death_drop_grenade",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Which grenade to drop on player death: 0=none, 1=best, 2=current or best, 3=all grenades"
    }
  },
  {
    "command": "mp_death_drop_gun",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Which gun to drop on player death: 0=none, 1=best, 2=current or best"
    }
  },
  {
    "command": "mp_default_team_winner_no_objective",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If the map doesn't define an objective (bomb, hostage, etc), the value of this convar will declare the winner when the time runs out in the round."
    }
  },
  {
    "command": "mp_defuser_allocation",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How to allocate defusers to CTs at start or round: 0=none, 1=random, 2=everyone"
    }
  },
  {
    "command": "mp_dm_bonus_length_max",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Maximum time the bonus time will last (in seconds)"
    }
  },
  {
    "command": "mp_dm_bonus_length_min",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Minimum time the bonus time will last (in seconds)"
    }
  },
  {
    "command": "mp_dm_bonus_percent",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Percent of points additionally awarded when someone gets a kill with the bonus weapon during the bonus period."
    }
  },
  {
    "command": "mp_dm_bonusweapon_dogtags",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Additional dogtags to drop when making a kill with the bonus weapon"
    }
  },
  {
    "command": "mp_dm_dogtag_score",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Points to award for picking up a dogtag in deathmatch."
    }
  },
  {
    "command": "mp_dm_healthshot_killcount",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Grant healthshots in deathmatch after n kills"
    }
  },
  {
    "command": "mp_dm_kill_base_score",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of base points to award for a kill in deathmatch.  Cheaper weapons award 1 or 2 additional points."
    }
  },
  {
    "command": "mp_dm_teammode",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "In deathmatch, enables team DM visuals & scoring (0: personal, 1: team mode, 2: use team contribution score)"
    }
  },
  {
    "command": "mp_dm_teammode_bonus_score",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Team deathmatch victory points to award for kill with bonus weapon"
    }
  },
  {
    "command": "mp_dm_teammode_dogtag_score",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Team deathmatch victory points to award for collecting enemy dogtags"
    }
  },
  {
    "command": "mp_dm_teammode_kill_score",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Team deathmatch victory points to award for enemy kill"
    }
  },
  {
    "command": "mp_dm_time_between_bonus_max",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Maximum time a bonus time will start after the round start or after the last bonus (in seconds)"
    }
  },
  {
    "command": "mp_dm_time_between_bonus_min",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Minimum time a bonus time will start after the round start or after the last bonus (in seconds)"
    }
  },
  {
    "command": "mp_dogtag_despawn_time",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "How many seconds dogtags should stay around before despawning automatically (0 = infinite)"
    }
  },
  {
    "command": "mp_dogtag_pickup_rule",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Who is eligible to pick up a dogtag (0 = killer only, 1 = killer's team, 2 = victim's team, 3 = killer & victim's team, 4 = anyone)"
    }
  },
  {
    "command": "mp_economy_reset_rounds",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Reset all player money every N rounds (0 for never)"
    }
  },
  {
    "command": "mp_endmatch_votenextleveltime",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If mp_endmatch_votenextmap is set, players have this much time to vote on the next map at match end."
    }
  },
  {
    "command": "mp_endmatch_votenextmap_wargames_modes",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Modes available for endmatch voting during War Games. Separate names with spaces."
    }
  },
  {
    "command": "mp_endmatch_votenextmap_wargames_nummaps",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Maximum number of maps to include in endmatch voting during War Games"
    }
  },
  {
    "command": "mp_endmatch_votenextmap_wargames_nummodes",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Maximum number of other War Games to include in endmatch voting during War Games"
    }
  },
  {
    "command": "mp_endwarmup_player_count",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of players required to be connected to end warmup early. 0 to require maximum players for mode."
    }
  },
  {
    "command": "mp_equipment_reset_rounds",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Reset all player equipment every N rounds (0 for never)"
    }
  },
  {
    "command": "mp_force_pick_time",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The amount of time a player has on the team screen to make a selection before being auto-teamed"
    }
  },
  {
    "command": "mp_forcecamera",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Restricts spectator modes for dead players"
    }
  },
  {
    "command": "mp_fraglimit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "mp_free_armor",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines whether kevlar (1+) and/or helmet (2+) are given automatically."
    }
  },
  {
    "command": "mp_freezetime",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "how many seconds to keep players frozen when the round starts"
    }
  },
  {
    "command": "mp_global_damage_per_second",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "If above 0, deal non-lethal damage to players over time."
    }
  },
  {
    "command": "mp_guardian_bomb_plant_custom_x_mark_location",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "x,y,z to display an X for the bomb plant in guardian missions with custom bomb plant boundaries."
    }
  },
  {
    "command": "mp_guardian_force_collect_hostages_timeout",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Force bots to collect hostages after this amount of time if no enemy has been seen."
    }
  },
  {
    "command": "mp_guardian_target_site",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If set to the index of a bombsite, will cause random spawns to be only created near that site."
    }
  },
  {
    "command": "mp_halftime_duration",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Target number of seconds that halftime lasts; shortened if team intros are active"
    }
  },
  {
    "command": "mp_halftime_pausematch",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Set to 1 to pause match after halftime countdown elapses. Match must be resumed by vote or admin."
    }
  },
  {
    "command": "mp_halftime_pausetimer",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Set to 1 to stay in halftime indefinitely. Set to 0 to resume the timer."
    }
  },
  {
    "command": "mp_hostages_max",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Maximum number of hostages to spawn."
    }
  },
  {
    "command": "mp_hostages_rescuetime",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Additional time added to round time if a hostage is reached by a CT."
    }
  },
  {
    "command": "mp_hostages_run_speed_modifier",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Default is 1.0, slow down hostages by setting this to < 1.0."
    }
  },
  {
    "command": "mp_hostages_spawn_force_positions",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Comma separated list of zero based indices to force spawn positions, e.g. '0,2' or '1,6'"
    }
  },
  {
    "command": "mp_hostages_spawn_force_positions_xyz",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Comma separated list of xyz locations to force spawn positions, e.g. 'x1 y1 z1,x2 y2 z2'"
    }
  },
  {
    "command": "mp_humanteam",
    "consoleData": {
      "defaultValue": "any",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Restricts human players to a single team {any, CT, T}"
    }
  },
  {
    "command": "mp_items_prohibited",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Set this convar to a comma-delimited list of definition indices of weapons that should be prohibited from use."
    }
  },
  {
    "command": "mp_join_grace_time",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of seconds after round start to allow a player to join a game"
    }
  },
  {
    "command": "mp_limitteams",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "Max # of players 1 team can have over another (0 disables check)"
    }
  },
  {
    "command": "mp_logdetail",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Logs attacks.  Values are: 0=off, 1=enemy, 2=teammate, 3=both)"
    }
  },
  {
    "command": "mp_match_restart_delay",
    "consoleData": {
      "defaultValue": "25",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Time (in seconds) until a match restarts."
    }
  },
  {
    "command": "mp_max_armor",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines the highest level of armor allowed to be purchased. (0) None, (1) Kevlar, (2) Helmet"
    }
  },
  {
    "command": "mp_maxmoney",
    "consoleData": {
      "defaultValue": "16000",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "maximum amount of money allowed in a player's account"
    }
  },
  {
    "command": "mp_maxrounds",
    "consoleData": {
      "defaultValue": "24",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "max number of rounds to play before server changes maps"
    }
  },
  {
    "command": "mp_overtime_halftime_pausetimer",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If set to 1 will set mp_halftime_pausetimer to 1 before every half of overtime. Set mp_halftime_pausetimer to 0 to resume the timer."
    }
  },
  {
    "command": "mp_overtime_limit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "When overtime is enabled, only so many overtimes can be played"
    }
  },
  {
    "command": "mp_overtime_maxrounds",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "When overtime is enabled play additional rounds to determine winner"
    }
  },
  {
    "command": "mp_overtime_startmoney",
    "consoleData": {
      "defaultValue": "10000",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Money assigned to all players at start of every overtime half"
    }
  },
  {
    "command": "mp_playerid",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Controls what information player see in the status bar: 0 all names; 1 team names; 2 no names"
    }
  },
  {
    "command": "mp_randomspawn",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines whether players are to spawn. 0 = default; 1 = both teams; 2 = Terrorists; 3 = CTs."
    }
  },
  {
    "command": "mp_randomspawn_dist",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If using mp_randomspawn, determines whether to test distance when selecting this spot."
    }
  },
  {
    "command": "mp_respawn_immunitytime",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How many seconds after respawn immunity lasts. Set to negative value to disable warmup immunity."
    }
  },
  {
    "command": "mp_respawnwavetime_ct",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Time between respawn waves for CTs."
    }
  },
  {
    "command": "mp_respawnwavetime_t",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Time between respawn waves for Terrorists."
    }
  },
  {
    "command": "mp_restartgame",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If non-zero, game will restart in the specified number of seconds"
    }
  },
  {
    "command": "mp_retake_ct_count",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of CT's when playing retakes."
    }
  },
  {
    "command": "mp_retake_ct_loadout_bonus_card",
    "consoleData": {
      "defaultValue": "#GameUI_Retake_Card_TheAWPortunity,1,1,rifle4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "CT bonus card for full buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_ct_loadout_bonus_card_availability",
    "consoleData": {
      "defaultValue": "1,2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "CT bonus card availability pattern for full buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_ct_loadout_default_pistol_round",
    "consoleData": {
      "defaultValue": "1|3;#GameUI_Retake_Card_4v3,0,0,secondary0|1;#GameUI_Retake_Card_FlashOut,0,0,secondary0,grenade2;#GameUI_Retake_Card_HideAndPeek,0,0,secondary0,grenade4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "CT Loadouts for default pistol round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_ct_loadout_enemy_card",
    "consoleData": {
      "defaultValue": "#GameUI_Retake_Card_BehindEnemyLines,1,1,rifle1,grenade2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "CT enemy card for full buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_ct_loadout_full_buy_round",
    "consoleData": {
      "defaultValue": "4|2;#GameUI_Retake_Card_LightEmUp,1,1,rifle1,grenade2|2;#GameUI_Retake_Card_Kobe,1,1,rifle1,grenade3|1;#GameUI_Retake_Card_1g,1,1,rifle1,grenade0|1;#GameUI_Retake_Card_DisappearingAct,1,1,rifle1,grenade4|1;#GameUI_Retake_Card_EyesOnTarget,1,1,rifle3",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "CT Loadouts for full buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_ct_loadout_light_buy_round",
    "consoleData": {
      "defaultValue": "3|2;#GameUI_Retake_Card_UmpInSmoke,1,1,smg2,grenade4|2;#GameUI_Retake_Card_FunNGun,1,1,smg0,grenade3|2;#GameUI_Retake_Card_Sharpshooter,1,1,rifle2,grenade2|2;#GameUI_Retake_Card_BurstBullpup,1,1,rifle0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "CT Loadouts for force buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_ct_loadout_upgraded_pistol_round",
    "consoleData": {
      "defaultValue": "2|2;#GameUI_Retake_Card_TakeFive,0,0,secondary3|2;#GameUI_Retake_Card_BlindFire,0,0,secondary2,grenade2|2;#GameUI_Retake_Card_OnlyTakesOne,0,0,secondary4|2;#GameUI_Retake_Card_SneakyBeakyLike,0,0,secondary2,grenade4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "CT Loadouts for upgraded pistol round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_max_consecutive_rounds_same_target_site",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Limit the number of consecutive rounds targeting the same site."
    }
  },
  {
    "command": "mp_retake_t_count",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of terrorists when playing retakes."
    }
  },
  {
    "command": "mp_retake_t_loadout_bonus_card",
    "consoleData": {
      "defaultValue": "#GameUI_Retake_Card_TheAWPortunity,1,1,rifle4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "T bonus card for full buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_t_loadout_bonus_card_availability",
    "consoleData": {
      "defaultValue": "1,1,2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "T bonus card availability pattern for full buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_t_loadout_default_pistol_round",
    "consoleData": {
      "defaultValue": "0|3;#GameUI_Retake_Card_4BadGuysLeft,0,0,secondary0|1;#GameUI_Retake_Card_LookAway,0,0,secondary0,grenade2;#GameUI_Retake_Card_WhenThereIsSmoke,0,0,secondary0,grenade4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "T Loadouts for default pistol round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_t_loadout_enemy_card",
    "consoleData": {
      "defaultValue": "#GameUI_Retake_Card_FindersKeepers,1,1,rifle1,grenade2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "T enemy card for full buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_t_loadout_full_buy_round",
    "consoleData": {
      "defaultValue": "0|2;#GameUI_Retake_Card_OlReliable,1,1,rifle1,grenade2|1;#GameUI_Retake_Card_SmokeShow,1,1,rifle1,grenade4|1;#GameUI_Retake_Card_HotShot,1,1,rifle1,grenade0|1;#GameUI_Retake_Card_EyeSpy,1,1,rifle3,grenade3",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "T Loadouts for full buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_t_loadout_light_buy_round",
    "consoleData": {
      "defaultValue": "0|2;#GameUI_Retake_Card_BackInAFlash,1,1,smg2,grenade2|2;#GameUI_Retake_Card_AllIn,1,1,rifle0|1;#GameUI_Retake_Card_BoomBox,1,1,smg0,grenade3,grenade4|1;#GameUI_Retake_Card_SetThemFree,1,1,rifle2,grenade2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "T Loadouts for force buy round when playing bomb site retake."
    }
  },
  {
    "command": "mp_retake_t_loadout_upgraded_pistol_round",
    "consoleData": {
      "defaultValue": "0|2;#GameUI_Retake_Card_BlindFire,0,0,secondary2,grenade2|2;#GameUI_Retake_Card_QueOta,0,0,secondary4|1;#GameUI_Retake_Card_SmokeScreen,0,0,secondary2,grenade4|1;#GameUI_Retake_Card_TecTecBoom,0,0,secondary3,grenade3",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "T Loadouts for upgraded pistol round when playing bomb site retake."
    }
  },
  {
    "command": "mp_round_restart_delay",
    "consoleData": {
      "defaultValue": "7",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of seconds to delay before restarting a round after a win"
    }
  },
  {
    "command": "mp_shorthanded_cash_bonus_round_delay",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "number of previous rounds that a team needs to have been shorthanded before they are eligible for the short-handed bonus"
    }
  },
  {
    "command": "mp_solid_teammates",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How solid are teammates: 0 = transparent; 1 = fully solid; 2 = can stand on top of heads"
    }
  },
  {
    "command": "mp_spawnprotectiontime",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Kick players who team-kill within this many seconds of a round restart."
    }
  },
  {
    "command": "mp_spectators_max",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How many spectators are allowed in a match."
    }
  },
  {
    "command": "mp_starting_losses",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines what the initial loss streak is."
    }
  },
  {
    "command": "mp_startmoney",
    "consoleData": {
      "defaultValue": "800",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "amount of money each player gets when they reset"
    }
  },
  {
    "command": "mp_t_default_grenades",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The default grenades that the Ts will spawn with. To give multiple grenades, separate each weapon class with a space like this: 'weapon_molotov weapon_hegrenade'"
    }
  },
  {
    "command": "mp_t_default_melee",
    "consoleData": {
      "defaultValue": "weapon_knife",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The default melee weapon that the Ts will spawn with"
    }
  },
  {
    "command": "mp_t_default_primary",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The default primary (rifle) weapon that the Ts will spawn with"
    }
  },
  {
    "command": "mp_t_default_secondary",
    "consoleData": {
      "defaultValue": "weapon_glock",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The default secondary (pistol) weapon that the Ts will spawn with"
    }
  },
  {
    "command": "mp_tagging_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Scalar for player tagging modifier when hit. Lower values for greater tagging."
    }
  },
  {
    "command": "mp_taser_recharge_time",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines recharge time for taser. -1 = disabled."
    }
  },
  {
    "command": "mp_td_dmgtokick",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "The damage threshhold players have to exceed in a match to get kicked."
    }
  },
  {
    "command": "mp_td_dmgtowarn",
    "consoleData": {
      "defaultValue": "200",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "The damage threshhold players have to exceed in a match to get warned that they are about to be kicked."
    }
  },
  {
    "command": "mp_td_spawndmgthreshold",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "The damage threshold players have to exceed at the start of the round to be warned/kick."
    }
  },
  {
    "command": "mp_team_timeout_max",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of timeouts each team gets per match."
    }
  },
  {
    "command": "mp_team_timeout_ot_add_each",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of timeouts to add for each team when match goes to 2nd and each next overtime."
    }
  },
  {
    "command": "mp_team_timeout_ot_add_once",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of timeouts to add for each team when regulation time ends and match goes to overtime."
    }
  },
  {
    "command": "mp_team_timeout_ot_max",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Max number of timeouts each team can have per OT after all OT timeouts got added."
    }
  },
  {
    "command": "mp_team_timeout_time",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Duration of each timeout."
    }
  },
  {
    "command": "mp_teamflag_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enter a country's alpha 2 code to show that flag next to team 1's name in the spectator scoreboard."
    }
  },
  {
    "command": "mp_teamflag_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enter a country's alpha 2 code to show that flag next to team 2's name in the spectator scoreboard."
    }
  },
  {
    "command": "mp_teamlogo_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'"
    }
  },
  {
    "command": "mp_teamlogo_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Enter a team's shorthand image name to display their logo. Images can be found here: 'resource/flash/econ/tournaments/teams'"
    }
  },
  {
    "command": "mp_teammatchstat_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string sets first team's match stat."
    }
  },
  {
    "command": "mp_teammatchstat_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string sets second team's match stat."
    }
  },
  {
    "command": "mp_teammatchstat_cycletime",
    "consoleData": {
      "defaultValue": "45",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Cycle match stats after so many seconds"
    }
  },
  {
    "command": "mp_teammatchstat_holdtime",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Decide on a match stat and hold it additionally for at least so many seconds"
    }
  },
  {
    "command": "mp_teammatchstat_txt",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string sets the match stat description, e.g. 'Match 2 of 3'."
    }
  },
  {
    "command": "mp_teamname_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string overrides the first team's name."
    }
  },
  {
    "command": "mp_teamname_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string overrides the second team's name."
    }
  },
  {
    "command": "mp_teamprediction_pct",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A value between 1 and 99 will show predictions in favor of CT team."
    }
  },
  {
    "command": "mp_teamprediction_txt",
    "consoleData": {
      "defaultValue": "#SFUIHUD_Spectate_Predictions",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A value between 1 and 99 will set predictions in favor of first team."
    }
  },
  {
    "command": "mp_teamscore_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string for best-of-N maps won by the first team."
    }
  },
  {
    "command": "mp_teamscore_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A non-empty string for best-of-N maps won by the second team."
    }
  },
  {
    "command": "mp_teamscore_max",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How many maps to win the series (bo3 max=2; bo5 max=3; bo7 max=4)"
    }
  },
  {
    "command": "mp_technical_timeout_duration_s",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How many seconds is a full technical timeout?"
    }
  },
  {
    "command": "mp_technical_timeout_per_team",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How many technical timeouts are there per team?"
    }
  },
  {
    "command": "mp_timelimit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "game time per map in minutes"
    }
  },
  {
    "command": "mp_tkpunish",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Will TK'ers and team damagers be punished in the next round?  {0=no,  1=yes}"
    }
  },
  {
    "command": "mp_use_respawn_waves",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "When set to 1, and that player's team is set to respawn, they will respawn in waves. If set to 2, teams will respawn when the whole team is dead."
    }
  },
  {
    "command": "mp_verbose_changelevel_spew",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "mp_warmup_items_drop_policy",
    "consoleData": {
      "defaultValue": "247",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Which items can drop during warmup (bitfield, 1=gun, 2=c4, 4=nade, 8=defuser, 16=taser, 32=healthshot)"
    }
  },
  {
    "command": "mp_warmup_items_nocount_policy",
    "consoleData": {
      "defaultValue": "42",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Which items are unlimited during warmup (bitfield, 1=gun, 2=c4, 4=nade, 8=defuser/kevlar, 16=taser, 32=healthshot)"
    }
  },
  {
    "command": "mp_warmup_pausetimer",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Set to 1 to stay in warmup indefinitely. Set to 0 to resume the timer."
    }
  },
  {
    "command": "mp_warmuptime",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "How long the warmup period lasts. Changing this value resets warmup."
    }
  },
  {
    "command": "mp_warmuptime_all_players_connected",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Warmup time to use when all players have connected. 0 to disable."
    }
  },
  {
    "command": "mp_warmuptime_match_cancelled",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Warmup time to use when the match will be cancelled (eg. due to a live VAC ban)."
    }
  },
  {
    "command": "mp_weapon_self_inflict_amount",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "If Set to non-0, will hurt the attacker by the specified fraction of max damage if they miss."
    }
  },
  {
    "command": "mp_weapons_allow_heavy",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines which team, if any, can purchase Heavy guns. -1 = any; 0 = non; 2 = Ts; 3 = CTs."
    }
  },
  {
    "command": "mp_weapons_allow_pistols",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines which team, if any, can purchase Pistols. -1 = any; 0 = non; 2 = Ts; 3 = CTs."
    }
  },
  {
    "command": "mp_weapons_allow_rifles",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines which team, if any, can purchase Rifles. -1 = any; 0 = non; 2 = Ts; 3 = CTs."
    }
  },
  {
    "command": "mp_weapons_allow_smgs",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines which team, if any, can purchase SMGs. -1 = any; 0 = non; 2 = Ts; 3 = CTs."
    }
  },
  {
    "command": "mp_weapons_allow_typecount",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines how many purchases of each weapon type allowed per player per round (0 to disallow purchasing, -1 to have no limit)."
    }
  },
  {
    "command": "mp_weapons_allow_zeus",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Determines how many Zeus purchases a player can make per round (0 to disallow, -1 to have no limit)."
    }
  },
  {
    "command": "mp_weapons_max_gun_purchases_per_weapon_per_match",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Max number of times a player may purchase any weapon per match"
    }
  },
  {
    "command": "mp_win_panel_display_time",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The amount of time to show the win panel between matches / halfs"
    }
  },
  {
    "command": "name",
    "consoleData": {
      "defaultValue": "Tinnitus",
      "flags": [
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_bfs_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_corner_adjust_adjacent",
    "consoleData": {
      "defaultValue": "18",
      "flags": [
        "cheat"
      ],
      "description": "radius used to raise/lower corners in nearby areas when raising/lowering corners."
    }
  },
  {
    "command": "nav_curve_iter",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_curve_lock",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_curve_max_step",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_curve_set",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_draw_area_inset_margin",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_draw_attribute_dynamic",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw all nav areas with this dynamic attribute"
    }
  },
  {
    "command": "nav_draw_attribute_game",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw all nav areas with this game attribute"
    }
  },
  {
    "command": "nav_draw_connected_area_radius",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_draw_limit",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "The maximum number of areas to draw in edit mode"
    }
  },
  {
    "command": "nav_draw_mesh_offset",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Vertical offset for drawing the mesh (useful for flat planes where the mesh is often a fixed offset from the physical ground"
    }
  },
  {
    "command": "nav_draw_space_radius",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_edit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Set to one to interactively edit the Navigation Mesh. Set to zero to leave edit mode."
    }
  },
  {
    "command": "nav_gen_connect_dist_a",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_markup_split_expand",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_markup_split_tol_base",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_markup_split_tol_nonav",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_markup_split_tol_nonentity",
    "consoleData": {
      "defaultValue": "8",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_max_bottleneck_width",
    "consoleData": {
      "defaultValue": "128",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_max_edge_len",
    "consoleData": {
      "defaultValue": "512",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_max_edge_len_split_tol",
    "consoleData": {
      "defaultValue": "24",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_opt_to_quads_angle_limit",
    "consoleData": {
      "defaultValue": "8",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_opt_to_quads_num_steps",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_opt_to_quads_planar_deviation_limit",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_opt_to_quads_weld_limit_start",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_gen_oriented_angle_tol",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "cheat"
      ],
      "description": "Max abrupt orientation difference an NPC can tolerate when moving through the mesh (degrees)."
    }
  },
  {
    "command": "nav_gen_oriented_max_region_range",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "cheat"
      ],
      "description": "Max orientation range allowed within a region before it gets further split."
    }
  },
  {
    "command": "nav_gen_vertical_limit",
    "consoleData": {
      "defaultValue": "88",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_genrt_step",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_max_view_distance",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Maximum range for precomputed nav mesh visibility (0 = default 1500 units)"
    }
  },
  {
    "command": "nav_max_vis_delta_list_length",
    "consoleData": {
      "defaultValue": "64",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_obstruction_draw",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_obstruction_draw_dist",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_obstruction_draw_island",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_obstruction_draw_island_hull",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_path_debug_compute_with_open_goal",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_path_draw_tick",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_path_optimizer_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_path_record_enable",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_pathfind_debug_log",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_pathfind_draw",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_pathfind_draw_blocked",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_pathfind_draw_fail",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_pathfind_inadmissable_heuristic_factor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_select_area_id",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Select nav area with matching ID."
    }
  },
  {
    "command": "nav_select_block_id",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Select nav space block with matching ID."
    }
  },
  {
    "command": "nav_select_hull",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Restrict area selection to areas that can support a hull of the given category"
    }
  },
  {
    "command": "nav_show_area_info_font",
    "consoleData": {
      "defaultValue": "Consolas",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_show_area_info_font_size",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_show_area_info_font_voffset",
    "consoleData": {
      "defaultValue": "-11",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_show_potentially_visible",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "Show areas that are potentially visible from the current nav area"
    }
  },
  {
    "command": "nav_smooth_constrain_spring",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_draw_accel",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_draw_boundary",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_draw_constraint_spring",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_draw_speed",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_const_override",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_factor_deriv",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_factor_dist",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_factor_speed",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_forward_dist_base",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_forward_dist_time_limit",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_max_dist",
    "consoleData": {
      "defaultValue": "36",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_tension_max_override",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_timestep_factor_accel",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_timestep_factor_speed",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_yaw_rotation_speed",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_smooth_spring_yaw_threshold",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_space_select_dist",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_bfs_lattice_dist_0",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_bfs_lattice_dist_1",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_bfs_lattice_dist_2",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_bfs_lattice_mark",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_bfs_lattice_spacing_0",
    "consoleData": {
      "defaultValue": "24",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_bfs_lattice_spacing_1",
    "consoleData": {
      "defaultValue": "48",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_bfs_lattice_spacing_2",
    "consoleData": {
      "defaultValue": "96",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_boundary_zone_circle",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_boundary_zone_grid_dim",
    "consoleData": {
      "defaultValue": "90",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_boundary_zone_path",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_boundary_zone_rays",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_boundary_zone_rays_margin",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_boundary_zone_sphere",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_curve_opt",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_find_random_connected_dist_max",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_find_random_connected_dist_min",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_find_z",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_npc_area",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_npc_collision",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_npc_collision_range",
    "consoleData": {
      "defaultValue": "250",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_path_expansion_search",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Extend nav_test_path by doing an expansion search on that path.  Convar value defines dist."
    }
  },
  {
    "command": "nav_test_path_space",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Should nav_test_path test 3d navigation?  1 = space to space, 2 = multi-modal space/ground"
    }
  },
  {
    "command": "nav_test_ray_space",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_smooth_extern_push",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_smooth_in_speed",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_smooth_in_yaw",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_smooth_path_speed",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_smooth_separating_dist",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_smooth_spring_const",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_smooth_spring_tension_max",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_spline",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_split_obstacle",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_test_split_obstacle_size",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "nav_validate",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "Level of validation for nav system.  Higher will be slower."
    }
  },
  {
    "command": "nav_volume_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw or print debug information about nav volume queries."
    }
  },
  {
    "command": "navspace_debug_pathfind",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "navspace_debug_stringpull",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "navspace_debug_trace",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "navspace_debug_transition_calc",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "navspace_draw_water_changes",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Draw changes in water volumes"
    }
  },
  {
    "command": "net_client_steamdatagram_enable_override",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "0: Use connect method requested by GC.  >0: Always use SDR if possible.  <0: Always use direct UDP if possible"
    }
  },
  {
    "command": "net_limit_sv_recv_max_message_size_kb",
    "consoleData": {
      "defaultValue": "32",
      "flags": [
        "release"
      ],
      "description": "Server will reject message larger than N kb"
    }
  },
  {
    "command": "net_limit_sv_recv_segments_per_packet",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "release"
      ],
      "description": "Server will reject packets with more than N segments"
    }
  },
  {
    "command": "net_limit_sv_recvbuffer_kb",
    "consoleData": {
      "defaultValue": "128",
      "flags": [
        "release"
      ],
      "description": "Server will not buffer more than N kb from connected clients"
    }
  },
  {
    "command": "net_limit_sv_recvbuffer_msg",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "release"
      ],
      "description": "Server will not buffer more than N messages from connected clients"
    }
  },
  {
    "command": "net_public_adr",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "For servers behind NAT/DHCP meant to be exposed to the public internet, this is the public facing ip address string: ('x.x.x.x' )"
    }
  },
  {
    "command": "nextlevel",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "nf",
        "release"
      ],
      "description": "If set to a valid map name, will trigger a changelevel to the specified map at the end of the round"
    }
  },
  {
    "command": "nextmode",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "Sets the game mode to be played when the next level loads"
    }
  },
  {
    "command": "panorama_debugger_theme",
    "consoleData": {
      "defaultValue": "Light",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "particle_test_attach_attachment",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Attachment index for attachment mode"
    }
  },
  {
    "command": "particle_test_attach_mode",
    "consoleData": {
      "defaultValue": "follow_attachment",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Possible Values: 'start_at_attachment', 'follow_attachment', 'start_at_origin', 'follow_origin'"
    }
  },
  {
    "command": "particle_test_file",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Name of the particle system to dynamically spawn"
    }
  },
  {
    "command": "particles_multiplier",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": "Multiply # of rendered particles by this for perf testing"
    }
  },
  {
    "command": "password",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "a",
        "norecord",
        "server_cant_query"
      ],
      "description": "Current server access password"
    }
  },
  {
    "command": "phys_expensive_shape_threshold",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "phys_length_damping_ratio",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Spring damping ratio for length constraint"
    }
  },
  {
    "command": "phys_length_frequency",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Spring stiffness for length constraint"
    }
  },
  {
    "command": "player_botdifflast_s",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "player_competitive_maplist_2v2_10_0_E7739BAE",
    "consoleData": {
      "defaultValue": "mg_de_overpass,mg_de_vertigo,mg_de_inferno",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "player_competitive_maplist_8_10_0_F1716344",
    "consoleData": {
      "defaultValue": "mg_de_nuke,mg_de_train,mg_de_overpass,mg_de_anubis,mg_de_vertigo",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "player_nevershow_communityservermessage",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "player_ping_token_cooldown",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "sv",
        "cheat",
        "release"
      ],
      "description": "Cooldown for how long it takes for a player's ping token to refresh allowing them to ping again (they get 5 tokens)."
    }
  },
  {
    "command": "player_survival_list_10_0_303",
    "consoleData": {
      "defaultValue": "mg_dz_blacksite,mg_dz_sirocco,mg_dz_vineyard,mg_dz_ember",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "player_teamplayedlast",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "player_use_radius",
    "consoleData": {
      "defaultValue": "80",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "player_wargames_list2_10_0_0",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "pvs_debugentity",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Verbose spew for this entity when doing IsInPVS computation."
    }
  },
  {
    "command": "pvs_flowtype",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Flow through spawn groups for vis (0 == default, 1 == always visible, 2 == never visible."
    }
  },
  {
    "command": "pwatchent",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Entity to watch for prediction system changes."
    }
  },
  {
    "command": "pwatchvar",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Entity variable to watch in prediction system for changes."
    }
  },
  {
    "command": "r_AirboatViewDampenDamp",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_AirboatViewDampenFreq",
    "consoleData": {
      "defaultValue": "7",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_AirboatViewZHeight",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_debug_reflection_rects",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_depth_prepass_cull_threshold",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_depth_prepass_small_cull_threshold",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_mixed_resolution_particles_scale",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_reconstruct_normals_method",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_reflection_min_far_plane",
    "consoleData": {
      "defaultValue": "5000",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_render_dither_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_render_post_bloom",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_render_post_bloom_strength",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_render_post_colorcorrection",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_render_post_film_grain",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_render_post_mirror_horizontal",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_render_post_mirror_vertical",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_csgo_shadows_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_cubemap_debug_colors",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_dof_override_far_blurry",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_dof_override_far_crisp",
    "consoleData": {
      "defaultValue": "180",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_dof_override_near_blurry",
    "consoleData": {
      "defaultValue": "-100",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_dof_override_near_crisp",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_draw_particle_children_with_parents",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": "Draw particle children with parents (-1=use gameinfo, 0=no, 1=yes)"
    }
  },
  {
    "command": "r_extra_render_frames",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_fallback_texture_lod_scale",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cheat"
      ],
      "description": "Scale factor for requested texture size (texture streaming) - used for geo that doesn't have a precomputed UV density measure"
    }
  },
  {
    "command": "r_farz",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Override the far clipping plane. -1 means to use the value in env_fog_controller."
    }
  },
  {
    "command": "r_flashlightambient",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightbrightness",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightconstant",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightfar",
    "consoleData": {
      "defaultValue": "1500",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightfov",
    "consoleData": {
      "defaultValue": "53",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightladderdist",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightlinear",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightmuzzleflashfov",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightnear",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightnearoffsetscale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightoffsetforward",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightoffsetright",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightoffsetup",
    "consoleData": {
      "defaultValue": "-5",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlightquadratic",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlighttracedistcutoff",
    "consoleData": {
      "defaultValue": "128",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_flashlighttracedistwatercutoff",
    "consoleData": {
      "defaultValue": "80",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_force_zprepass",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": "0: Force z prepass off. 1: Force on. -1: Don't force"
    }
  },
  {
    "command": "r_JeepViewDampenDamp",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_JeepViewDampenFreq",
    "consoleData": {
      "defaultValue": "7",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_JeepViewZHeight",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_light_probe_volume_debug_colors",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_light_probe_volume_debug_grid_albedo",
    "consoleData": {
      "defaultValue": "128 128 128",
      "flags": [
        "cheat"
      ],
      "description": "albedo for LPV debug grid"
    }
  },
  {
    "command": "r_light_probe_volume_debug_grid_metalness",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "metalness for LPV debug grid"
    }
  },
  {
    "command": "r_light_probe_volume_debug_grid_prim",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "0: spheres, 1: cubes"
    }
  },
  {
    "command": "r_light_probe_volume_debug_grid_samplesize",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "cheat"
      ],
      "description": "sphere radius (world) for LPV debug grid"
    }
  },
  {
    "command": "r_lightmap_set",
    "consoleData": {
      "defaultValue": "lightmaps",
      "flags": [
        "cheat"
      ],
      "description": "Lightmap set to use, only works on map load"
    }
  },
  {
    "command": "r_mapextents",
    "consoleData": {
      "defaultValue": "16384",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Set the max dimension for the map.  This determines the far clipping plane"
    }
  },
  {
    "command": "r_nearz",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Override the near clipping plane. -1 means use the default."
    }
  },
  {
    "command": "r_particle_max_draw_distance",
    "consoleData": {
      "defaultValue": "1000000.000000",
      "flags": [
        "cheat"
      ],
      "description": "The maximum distance that particles will render"
    }
  },
  {
    "command": "r_player_visibility_mode",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "r_refraction_clip_plane_adjust",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_replay_post_effect",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "r_texture_lod_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": "Scale factor for requested texture size (texture streaming)"
    }
  },
  {
    "command": "radarvisdistance",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "at this distance and beyond you need to be point right at someone to see them"
    }
  },
  {
    "command": "radarvismethod",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "0 for traditional method, 1 for more realistic method"
    }
  },
  {
    "command": "ragdoll_gravity_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "ragdoll_lru_min_age",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "rate",
    "consoleData": {
      "defaultValue": "786432",
      "flags": [
        "a",
        "user"
      ],
      "description": "Min bytes/sec the host can receive data"
    }
  },
  {
    "command": "rcon_address",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "norecord",
        "release",
        "server_cant_query"
      ],
      "description": "Address of remote server if sending unconnected rcon commands (format x.x.x.x:p)"
    }
  },
  {
    "command": "rcon_password",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "norecord",
        "release",
        "server_cant_query"
      ],
      "description": "remote console password."
    }
  },
  {
    "command": "recast_partitioning",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": "0 = watershed, 1 = monotone, 2 = layers"
    }
  },
  {
    "command": "replay_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "rr_followup_maxdist",
    "consoleData": {
      "defaultValue": "1800",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "'then ANY' or 'then ALL' response followups will be dispatched only to characters within this distance."
    }
  },
  {
    "command": "rr_thenany_score_slop",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "a",
        "cheat"
      ],
      "description": "When computing respondents for a 'THEN ANY' rule, all rule-matching scores within this much of the best score will be considered."
    }
  },
  {
    "command": "safezonex",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "The percentage of the screen width that is considered safe from overscan. Cannot result in a width less than the height."
    }
  },
  {
    "command": "safezoney",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "The percentage of the screen height that is considered safe from overscan"
    }
  },
  {
    "command": "save_maxarray_spew",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Max number of array entries to spew when using SaveRestoreIO spewing."
    }
  },
  {
    "command": "sc_aggregate_indirect_draw_compaction_threshold",
    "consoleData": {
      "defaultValue": "8",
      "flags": [
        "release"
      ],
      "description": "Threshold of indirect draws when we will do compaction"
    }
  },
  {
    "command": "sc_fade_distance_scale_override",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "sc_force_lod_level",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "sc_screen_size_lod_scale_override",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "screenmessage_show",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": "Enable display of console messages on screen. 1 = Enabled, 0 = Disabled, -1 = Enabled if vgui is not present"
    }
  },
  {
    "command": "sensitivity",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Mouse sensitivity."
    }
  },
  {
    "command": "servercfgfile",
    "consoleData": {
      "defaultValue": "server.cfg",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "shatterglass_cleanup_max",
    "consoleData": {
      "defaultValue": "200",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "shatterglass_hit_tolerance",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "shatterglass_shard_lifetime",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "sk_autoaim_mode",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "a",
        "rep"
      ],
      "description": ""
    }
  },
  {
    "command": "skill",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "a",
        "rep",
        "per_user"
      ],
      "description": "Game skill level."
    }
  },
  {
    "command": "snd_break_on_start_soundevent",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Use to debug break on any soundevent that is started matching this name"
    }
  },
  {
    "command": "snd_deathcamera_volume",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of Deathcam Timers"
    }
  },
  {
    "command": "snd_dsp_distance_max",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_dsp_distance_min",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_filter",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_foliage_db_loss",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "foliage dB loss per 1200 units"
    }
  },
  {
    "command": "snd_gain",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_gain_max",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_gamevoicevolume",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": "Game v.o. volume"
    }
  },
  {
    "command": "snd_gamevolume",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": "Game volume"
    }
  },
  {
    "command": "snd_headphone_eq",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "clientcmd_can_execute"
      ],
      "description": "Select Headphone EQ Preset"
    }
  },
  {
    "command": "snd_headphone_eq_active",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "clientcmd_can_execute"
      ],
      "description": "Select Headphone EQ Preset"
    }
  },
  {
    "command": "snd_list",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_mainmenu_music_break_time_max",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Maximum amount of time to pause between playing main menu music"
    }
  },
  {
    "command": "snd_mainmenu_music_break_time_min",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Minimum amount of time to pause between playing main menu music"
    }
  },
  {
    "command": "snd_mapobjective_volume",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of Map Objective Music"
    }
  },
  {
    "command": "snd_menumap_volume",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of background sounds for maps"
    }
  },
  {
    "command": "snd_menumusic_volume",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of Menu / Non-gameplay music"
    }
  },
  {
    "command": "snd_mixer_master_dsp",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_mixer_master_level",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_musicvolume",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": "Music volume"
    }
  },
  {
    "command": "snd_mvp_volume",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of MVP Music"
    }
  },
  {
    "command": "snd_occlusion_bounces",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_occlusion_min_wall_thickness",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_occlusion_rays",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_op_test_convar",
    "consoleData": {
      "defaultValue": "720",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_rear_stereo_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_refdb",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "cheat"
      ],
      "description": "Reference dB at snd_refdist"
    }
  },
  {
    "command": "snd_refdist",
    "consoleData": {
      "defaultValue": "36",
      "flags": [
        "cheat"
      ],
      "description": "Reference distance for snd_refdb"
    }
  },
  {
    "command": "snd_roundaction_volume",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of Move Action Music"
    }
  },
  {
    "command": "snd_roundend_volume",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of Won/Lost Music"
    }
  },
  {
    "command": "snd_roundstart_volume",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Volume of Round Start Music"
    }
  },
  {
    "command": "snd_showclassname",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_showstart",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_sos_show_operator_event_filter",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_sos_show_operator_field_filter",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_sos_show_operator_operator_filter",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_sos_show_opvar_updates_filter",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_sos_soundevent_filter",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_soundmixer_update_maximum_frame_rate",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_spatialize_lerp",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_steamaudio_enable_reverb",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Enable Steam Audio Reverb processor."
    }
  },
  {
    "command": "snd_steamaudio_ir_duration",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cheat"
      ],
      "description": "The time delay between a sound being emitted and the last audible reflection in Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_max_convolution_sources",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "cheat"
      ],
      "description": "The maximum number of simultaneous sources that can be modeled by Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_max_occlusion_samples",
    "consoleData": {
      "defaultValue": "64",
      "flags": [
        "cheat"
      ],
      "description": "The maximum number of rays that can be traced for volumetric occlusion by Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_num_bounces",
    "consoleData": {
      "defaultValue": "128",
      "flags": [
        "cheat"
      ],
      "description": "The maximum number of times any ray can bounce when using Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_num_diffuse_samples",
    "consoleData": {
      "defaultValue": "2048",
      "flags": [
        "cheat"
      ],
      "description": "The number of directions considered for ray bounce by Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_num_rays",
    "consoleData": {
      "defaultValue": "65536",
      "flags": [
        "cheat"
      ],
      "description": "The number of rays to trace for reflection modeling by Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_num_threads",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cheat"
      ],
      "description": "Sets the number of threads used for realtime reflection by Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_pathing_order",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": "The amount of directional detail in the simulated by Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_pathing_order_rendering",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": "The amount of directional detail in the rendered audio by Steam Audio."
    }
  },
  {
    "command": "snd_steamaudio_reverb_level_db",
    "consoleData": {
      "defaultValue": "-3",
      "flags": [
        "release"
      ],
      "description": "Adjust overall volume (dB) of the output from Steam Audio Reverb processor."
    }
  },
  {
    "command": "snd_toolvolume",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": "Volume of sounds in tools (e.g. Hammer, SFM)"
    }
  },
  {
    "command": "snd_use_baked_occlusion",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "snd_vmix_override_mix_decay_time",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": "If set > 0, overrides how long the decay time is on all mix graphs (in seconds)."
    }
  },
  {
    "command": "snd_voipvolume",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": "Voice volume"
    }
  },
  {
    "command": "sound_device_override",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "a",
        "release"
      ],
      "description": "ID of the sound device to use"
    }
  },
  {
    "command": "soundscape_fadetime",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Time to crossfade sound effects between soundscapes"
    }
  },
  {
    "command": "speaker_config",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "spec_freeze_time",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Time spend frozen in observer freeze cam."
    }
  },
  {
    "command": "spec_freeze_time_lock",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Time players are prevented from skipping the freeze cam"
    }
  },
  {
    "command": "spec_glow_decay_time",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Time to decay glow from 1.0 to spec_glow_silent_factor after spec_glow_full_time."
    }
  },
  {
    "command": "spec_glow_full_time",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Noisy players stay at full brightness for this long."
    }
  },
  {
    "command": "spec_glow_spike_time",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Time for noisy player glow 'spike' to show that they made noise very recently."
    }
  },
  {
    "command": "spec_replay_enable",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Enable Killer Replay, requires hltv server running (0:off, 1:default, 2:force)"
    }
  },
  {
    "command": "spec_replay_rate_base",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Base time scale of Killer Replay.Experimental."
    }
  },
  {
    "command": "spec_replay_rate_limit",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Minimum allowable pause between replay requests in seconds"
    }
  },
  {
    "command": "spec_replay_round_delay",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Round can be delayed by this much due to someone watching a replay; must be at least 3-4 seconds, otherwise the last replay will always be interrupted by round start, assuming normal pause between round_end and round_start events (7 seconds) and freezecam delay (2 seconds) and 7.4 second full replay (5.4 second pre-death and ~2 seconds post-death) and replay in/out switching (up to a second)"
    }
  },
  {
    "command": "spec_replay_winddown_time",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The trailing time, in seconds, of replay past the event, including fade-out"
    }
  },
  {
    "command": "spec_show_xray",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "If set to 1, you can see player outlines and name IDs through walls - who you can see depends on your team and mode"
    }
  },
  {
    "command": "splitscreen_mode",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "a",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "suspicious_hit_player_radius",
    "consoleData": {
      "defaultValue": "8",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "suspicious_hit_strategy",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "What to do about suspicious hits. 0: Nothing. 1: Skip the bullet. 2: Skip the bullet and re-roll a new bullet."
    }
  },
  {
    "command": "sv_air_max_wishspeed",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_airaccelerate",
    "consoleData": {
      "defaultValue": "12",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_auto_cstrafe_attempt_window",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The length of the window of trailing counter-strafe attempts considered during input automation detection."
    }
  },
  {
    "command": "sv_auto_cstrafe_logging",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "0: never, 1: every time counter-strafe input automation is detected, 2: every counter-strafe"
    }
  },
  {
    "command": "sv_auto_cstrafe_lower_overlap_pct_threshold",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The percentage of overlapping attempts in the attempt window below which input automation detection is triggered at the success threshold."
    }
  },
  {
    "command": "sv_auto_cstrafe_min_attempts",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The minimum number of counter-strafe attempts required for input automation detection. The player must be moving more than 135.2 units/s for their counter-strafe to be considered an attempt. An attempt is either considered a success (counter-strafing took place within a single tick), an overlap (both directions were held for 1+ ticks) or an underlap (neither direction was held for 1+ ticks)."
    }
  },
  {
    "command": "sv_auto_cstrafe_sequence_length",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The length of sequential counter-strafe attempts evaluated relative to the success threshold. Input automation detection considers the best sequence within the larger attempt window."
    }
  },
  {
    "command": "sv_auto_cstrafe_success_threshold",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The minimum number of successful counter-strafes within a best sequence that will trigger input automation detection. The number of successes that trigger input automation detection is interpolated between the success threshold and a 'perfect' sequence (all counter-strafes in a sequence are successes), depending on the player's percentage of overlapping counter-strafe attempts."
    }
  },
  {
    "command": "sv_auto_cstrafe_upper_overlap_pct_threshold",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The percentage of overlapping attempts in the attempt window below which input automation detection is triggered when all counter-strafes in a sequence are successes."
    }
  },
  {
    "command": "sv_bot_buy_decoy_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."
    }
  },
  {
    "command": "sv_bot_buy_flash_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."
    }
  },
  {
    "command": "sv_bot_buy_grenade_chance",
    "consoleData": {
      "defaultValue": "33",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Chance bots will buy a grenade with leftover money (after prim, sec and armor). Input as percent (0-100.0)"
    }
  },
  {
    "command": "sv_bot_buy_hegrenade_weight",
    "consoleData": {
      "defaultValue": "6",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."
    }
  },
  {
    "command": "sv_bot_buy_molotov_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."
    }
  },
  {
    "command": "sv_bot_buy_smoke_weight",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Given a bot will buy a grenade, controls the odds of the grenade type. Proportional to all other sv_bot_buy_*_weight convars."
    }
  },
  {
    "command": "sv_bots_get_easier_each_win",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If > 0, some # of bots will lower thier difficulty each time they win. The argument defines how many will lower their difficulty each time."
    }
  },
  {
    "command": "sv_bounce",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Bounce multiplier for when physically simulated objects collide with other objects."
    }
  },
  {
    "command": "sv_buy_status_override",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Override for buy status map info. 0 = everyone can buy, 1 = ct only, 2 = t only 3 = nobody"
    }
  },
  {
    "command": "sv_chat_proximity",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_clockcorrection_msecs",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The server tries to keep each player's m_nTickBase withing this many msecs of the server absolute tickcount"
    }
  },
  {
    "command": "sv_cluster",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Data center cluster this server lives in."
    }
  },
  {
    "command": "sv_cq_trim_bloat_remainder",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When trimming a bloated CQ, leave at least N more commands than the minimum"
    }
  },
  {
    "command": "sv_cq_trim_bloat_space",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When trimming a bloated CQ, try to leave room for N more commands to be added.  0 will trim only what is needed to remove the immediate bloat, a very large value will reset the whole queue."
    }
  },
  {
    "command": "sv_cq_trim_catchup_remainder",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When trimming an overful CQ due to app 'catchup' request, leave at least N more commands than the minimum"
    }
  },
  {
    "command": "sv_cs_player_speed_has_hostage",
    "consoleData": {
      "defaultValue": "200",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_debug_overlays_bandwidth",
    "consoleData": {
      "defaultValue": "65536",
      "flags": [
        "release"
      ],
      "description": "Broadcast server debug overlays traffic"
    }
  },
  {
    "command": "sv_deltaticks_enforce",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "By default, player must ack delta ticks in order. How to enforce it: 2 = kick all clients, 1 = kick only TV clients, 0 = do not kick."
    }
  },
  {
    "command": "sv_deltaticks_log",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "Whether diagnostic logging is enabled when clients ack delta ticks out of order. Policy: 2 = log all out of order acks, 1 = log only when disconnect is triggered, 0 = do not log."
    }
  },
  {
    "command": "sv_disable_radar",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "0: regular radar; 1: always disabled; 2: disabled in warmup"
    }
  },
  {
    "command": "sv_disconnected_player_data_hold_time",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Duration, in seconds, to hold onto the data of disconnected players, for scoreboard display."
    }
  },
  {
    "command": "sv_disconnected_players_cleanup_delay",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Delay between player disconnecting and their corpse getting cleaned up."
    }
  },
  {
    "command": "sv_dz_cash_bundle_size",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Size of a cash bundle"
    }
  },
  {
    "command": "sv_dz_cash_mega_bundle_size",
    "consoleData": {
      "defaultValue": "13",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Size of a mega cash bundle"
    }
  },
  {
    "command": "sv_dz_contractkill_reward",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Cash bundles to award for a successful contract kill"
    }
  },
  {
    "command": "sv_dz_hostage_rescue_reward",
    "consoleData": {
      "defaultValue": "18",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of cash bundles to award for rescuing a hostage"
    }
  },
  {
    "command": "sv_dz_squad_wipe_reward",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Number of cash bundles to award for eliminating a squad"
    }
  },
  {
    "command": "sv_enable_alternate_baselines",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "release"
      ],
      "description": "Allow alternate baseline system, set to 2 for debugging spew."
    }
  },
  {
    "command": "sv_ent_showonlyhitbox",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_ents_write_alarm",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Print callstack every time CNetworkGameServerBase::WriteEntityUpdate takes more than this amount of milliseconds"
    }
  },
  {
    "command": "sv_falldamage_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_falldamage_to_below_player_multiplier",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Scale damage when distributed across two players"
    }
  },
  {
    "command": "sv_falldamage_to_below_player_ratio",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Landing on a another player's head gives them this ratio of the damage."
    }
  },
  {
    "command": "sv_game_mode_flags",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Dedicated server game mode flags to run"
    }
  },
  {
    "command": "sv_gravity",
    "consoleData": {
      "defaultValue": "800",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "World gravity."
    }
  },
  {
    "command": "sv_grenade_trajectory_prac_trailtime",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Shows grenade trajectory practice visualization for this number of seconds."
    }
  },
  {
    "command": "sv_grenade_trajectory_time_spectator",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Length of time grenade trajectory remains visible as a spectator."
    }
  },
  {
    "command": "sv_guardian_extra_equipment_ct",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Extra starting equipment for CT players in guardian modes"
    }
  },
  {
    "command": "sv_guardian_extra_equipment_t",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Extra starting equipment for Terrorist players in guardian modes"
    }
  },
  {
    "command": "sv_guardian_refresh_ammo_for_items_on_waves",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "List of additional weapons to refill ammo on waves."
    }
  },
  {
    "command": "sv_guardian_spawn_health_ct",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Starting health in guardian modes."
    }
  },
  {
    "command": "sv_guardian_spawn_health_t",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Starting health in guardian modes."
    }
  },
  {
    "command": "sv_health_approach_speed",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_hegrenade_damage_multiplier",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_hegrenade_radius_multiplier",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_hibernate_postgame_delay",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "release"
      ],
      "description": "# of seconds to wait after final client leaves before hibernating."
    }
  },
  {
    "command": "sv_hide_roundtime_until_seconds",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_highlight_distance",
    "consoleData": {
      "defaultValue": "500",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_human_autojoin_team",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Force human players on to a team. 0 to disable."
    }
  },
  {
    "command": "sv_infinite_ammo",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": "Player's active weapon will never run out of ammo"
    }
  },
  {
    "command": "sv_kick_ban_duration",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "How long should a kick ban from the server should last (in minutes)"
    }
  },
  {
    "command": "sv_kick_players_with_cooldown",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "(0: do not kick on insecure servers; 1: kick players with Untrusted status or convicted by Overwatch; 2: kick players with any cooldown)"
    }
  },
  {
    "command": "sv_late_commands_allowed",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allow N late commands to run at 0 timescale prior to running an on-time command. Negative values for network round trip based calculation with a hard cap of the of absolute value"
    }
  },
  {
    "command": "sv_logsdir",
    "consoleData": {
      "defaultValue": "logs",
      "flags": [
        "a",
        "release"
      ],
      "description": "Folder in the game directory where server logs will be stored."
    }
  },
  {
    "command": "sv_mapvetopickvote_maps",
    "consoleData": {
      "defaultValue": "de_inferno,de_mirage,de_train,de_dust2,de_nuke,de_ancient,de_overpass",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Which maps are used for map veto pick sequence"
    }
  },
  {
    "command": "sv_mapvetopickvote_phase_duration",
    "consoleData": {
      "defaultValue": "[1:5][2:15][3:20][4:10][5:10][6:5]",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How many seconds each phase lasts"
    }
  },
  {
    "command": "sv_max_deathmatch_respawns_per_tick",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_max_queries_sec",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "release"
      ],
      "description": "Maximum queries per second to respond to from a single IP address."
    }
  },
  {
    "command": "sv_max_queries_sec_global",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "release"
      ],
      "description": "Maximum queries per second to respond to from anywhere."
    }
  },
  {
    "command": "sv_max_queries_window",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "release"
      ],
      "description": "Window over which to average queries per second averages."
    }
  },
  {
    "command": "sv_maxrate",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Max bandwidth rate allowed on server, 0 == unlimited"
    }
  },
  {
    "command": "sv_maxspeed",
    "consoleData": {
      "defaultValue": "320",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_maxuptimelimit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Number of hours to operate before trying sv_shutdown."
    }
  },
  {
    "command": "sv_maxvelocity",
    "consoleData": {
      "defaultValue": "3500",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Maximum speed any ballistically moving object is allowed to attain per axis."
    }
  },
  {
    "command": "sv_memlimit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat",
        "release"
      ],
      "description": "If set, whenever a game ends, if the total memory used by the server is greater than this # of megabytes, the server will exit."
    }
  },
  {
    "command": "sv_merge_changes_after_tick_with_calcdelta",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "release"
      ],
      "description": "This fixes bugs where pure calcdelta is used due to recipient changing but it doesn't pick up a field change where the value was changed back to same value as the from snapshot even though the destination fields change list does note the change. Set to 2 to spew any changes merged in by this fix."
    }
  },
  {
    "command": "sv_min_jump_landing_sound",
    "consoleData": {
      "defaultValue": "260",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_minimum_desired_chicken_count",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Minimum number of chickens to attempt to spawn in the map"
    }
  },
  {
    "command": "sv_minrate",
    "consoleData": {
      "defaultValue": "98304",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Min bandwidth rate allowed on server, 0 == unlimited"
    }
  },
  {
    "command": "sv_noclipaccelerate",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "cl",
        "a",
        "nf",
        "rep"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_noclipfriction",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "a",
        "nf",
        "rep"
      ],
      "description": "Friction during noclip move."
    }
  },
  {
    "command": "sv_noclipspeed",
    "consoleData": {
      "defaultValue": "1200",
      "flags": [
        "sv",
        "cl",
        "a",
        "nf",
        "rep"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_parallel_checktransmit",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Set to 1 to use threaded checkentities for transmit/pvs on listen servers, 2 for dedicated servers."
    }
  },
  {
    "command": "sv_parallel_packentities",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "Set to 1 to use threaded snapshot sending on listen servers, 2 for dedicated servers."
    }
  },
  {
    "command": "sv_parallel_sendsnapshot",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "0: run all send jobs on main thread; 1: send jobs run asynchronously (except on dedicated server); 2: send jobs asynchronously; 3: send jobs run in parallel but block to not overlap the next tick; 4: main server clients' send jobs run in parallel, then HLTV server jobs; this approximately matches pre-async profile for a single HLTV server configuration"
    }
  },
  {
    "command": "sv_password",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "prot",
        "nf",
        "norecord",
        "release"
      ],
      "description": "Server password for entry into multiplayer games"
    }
  },
  {
    "command": "sv_pausable",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Is the server pausable."
    }
  },
  {
    "command": "sv_phys_stop_at_collision",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_predictable_damage_tag_ticks",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Delay player slowdown when damaged by # ticks to reduce misprediction effects"
    }
  },
  {
    "command": "sv_pure_trace",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "If set to 1, the server will print a message whenever a client is verifying a CRC for a file."
    }
  },
  {
    "command": "sv_pushaway_hostage_force",
    "consoleData": {
      "defaultValue": "20000",
      "flags": [
        "sv",
        "rep",
        "cheat"
      ],
      "description": "How hard the hostage is pushed away from physics objects (falls off with inverse square of distance)."
    }
  },
  {
    "command": "sv_pushaway_max_hostage_force",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "rep",
        "cheat"
      ],
      "description": "Maximum of how hard the hostage is pushed away from physics objects."
    }
  },
  {
    "command": "sv_pvs_max_distance",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "rep",
        "release"
      ],
      "description": "if set, adds a maximum range to PVS/PAS checks"
    }
  },
  {
    "command": "sv_radio_throttle_window",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "release"
      ],
      "description": "The number of seconds before radio command tokens refresh."
    }
  },
  {
    "command": "sv_region",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "release"
      ],
      "description": "The region of the world to report this server in."
    }
  },
  {
    "command": "sv_search_key",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_search_team_key",
    "consoleData": {
      "defaultValue": "public",
      "flags": [
        "release"
      ],
      "description": "When initiating team search, set this key to match with known opponents team"
    }
  },
  {
    "command": "sv_server_graphic1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "A 360x60 (<16kb) image file in /csgo/ that will be displayed to spectators."
    }
  },
  {
    "command": "sv_server_graphic2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "A 220x45 (<16kb) image file in /csgo/ that will be displayed to spectators."
    }
  },
  {
    "command": "sv_showbullethits",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "1=show hits and near misses, 2=show hits only"
    }
  },
  {
    "command": "sv_showhitregistration",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Display lag_compensated hitboxes. 0 = off, 1 = server only, 2 = client only, 3 = both server and client"
    }
  },
  {
    "command": "sv_showimpacts",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Shows client (red) and server (blue) bullet impact point (1=both, 2=client-only, 3=server-only)"
    }
  },
  {
    "command": "sv_showimpacts_penetration",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Shows extra data when bullets penetrate. (use sv_showimpacts_time to increase time shown)"
    }
  },
  {
    "command": "sv_showimpacts_time",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Duration bullet impact indicators remain before disappearing"
    }
  },
  {
    "command": "sv_skirmish_id",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Dedicated server skirmish id to run"
    }
  },
  {
    "command": "sv_skyname",
    "consoleData": {
      "defaultValue": "sky_urb01",
      "flags": [
        "sv",
        "cl",
        "a",
        "rep"
      ],
      "description": "Current name of the skybox texture"
    }
  },
  {
    "command": "sv_spawn_afk_bomb_drop_time",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Players that have never moved since they spawned will drop the bomb after this amount of time."
    }
  },
  {
    "command": "sv_spec_hear",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Determines who spectators can hear: 0: only spectators; 1: all players; 2: spectated team; 3: self only; 4: nobody"
    }
  },
  {
    "command": "sv_specaccelerate",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "cl",
        "a",
        "nf",
        "rep"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_specspeed",
    "consoleData": {
      "defaultValue": "1200",
      "flags": [
        "sv",
        "cl",
        "a",
        "nf",
        "rep"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_staminamax",
    "consoleData": {
      "defaultValue": "80",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Maximum stamina penalty"
    }
  },
  {
    "command": "sv_staminarecoveryrate",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Rate at which stamina recovers (units/sec)"
    }
  },
  {
    "command": "sv_steamauth_enforce",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "By default, player must maintain a reliable connection to Steam servers. When player Steam session drops, enforce it: 2 = instantly kick, 1 = kick at next spawn, 0 = do not kick."
    }
  },
  {
    "command": "sv_steamgroup",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "nf",
        "release"
      ],
      "description": "The ID of the steam group that this server belongs to. You can find your group's ID on the admin profile page in the steam community."
    }
  },
  {
    "command": "sv_step_move_vel_min",
    "consoleData": {
      "defaultValue": "64",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Min velocity for step move."
    }
  },
  {
    "command": "sv_stopspeed",
    "consoleData": {
      "defaultValue": "80",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": "Minimum stopping speed when on ground."
    }
  },
  {
    "command": "sv_tags",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "nf",
        "release"
      ],
      "description": "Server tags. Used to provide extra information to clients when they're browsing for servers. Separate tags with a comma."
    }
  },
  {
    "command": "sv_talk_after_dying_time",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "The number of seconds a player can continue talking after dying as if they were still alive"
    }
  },
  {
    "command": "sv_teamid_overhead_maxdist",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If >0, server will override cl_teamid_overhead_maxdist"
    }
  },
  {
    "command": "sv_teamid_overhead_maxdist_spec",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If >0, server will override cl_teamid_overhead_maxdist_spec"
    }
  },
  {
    "command": "sv_turning_inaccuracy_angle_min",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_unlockedchapters",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": "Highest unlocked game chapter."
    }
  },
  {
    "command": "sv_use_hi_pri_context_switch_time",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "+use search behaves as though high priority items are usable for this long after they become unusable to avoid players accidentally performing a different action."
    }
  },
  {
    "command": "sv_usercmd_execute_warning_ms",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "a"
      ],
      "description": "Emit a warning if we spend more than N ms executing user commands for a single player"
    }
  },
  {
    "command": "sv_vac_webapi_auth_key",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Key for when posting to vac related webapis."
    }
  },
  {
    "command": "sv_versus_screen_scene_id",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines which scene is used for the versus screen."
    }
  },
  {
    "command": "sv_visiblemaxplayers",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "release"
      ],
      "description": "Overrides the max players reported to prospective clients"
    }
  },
  {
    "command": "sv_voice_proximity",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_voicecodec",
    "consoleData": {
      "defaultValue": "vaudio_speex",
      "flags": [
        "release"
      ],
      "description": "Specifies which voice codec DLL to use in a game. Set to the name of the DLL without the extension."
    }
  },
  {
    "command": "sv_vote_command_delay",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How long after a vote passes until the action happens"
    }
  },
  {
    "command": "sv_vote_creation_timer",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How often someone can individually call a vote."
    }
  },
  {
    "command": "sv_vote_failure_timer",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "release"
      ],
      "description": "A vote that fails cannot be re-submitted for this long"
    }
  },
  {
    "command": "sv_vote_kick_ban_duration",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "nf",
        "rep",
        "release"
      ],
      "description": "How long should a kick vote ban someone from the server? (in minutes)"
    }
  },
  {
    "command": "sv_vote_timer_duration",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "release"
      ],
      "description": "How long to allow voting on an issue"
    }
  },
  {
    "command": "sv_vote_to_changelevel_rndmin",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "When non-zero, restricts vote to change level to this many first rounds or minutes of the match (default 0, vote is not disallowed)"
    }
  },
  {
    "command": "sv_warmup_to_freezetime_delay",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Delay between end of warmup and start of match."
    }
  },
  {
    "command": "sv_watchtransmit",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Watch NetworkStateChanged info for this entity index."
    }
  },
  {
    "command": "sv_wateraccelerate",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_waterfriction",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_weapon_require_use_grace_period",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "sv_weapon_swap_difficulty_near_hi_pri",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "0 = Cone searches easily reach past high priority items to swap weapons. 1 = Cone searches are narrowed and require that the weapon is strictly closer. 2 = cone searches are disabled near high priority items"
    }
  },
  {
    "command": "sys_minidumpspewlines",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "release"
      ],
      "description": "Lines of crash dump console spew to keep."
    }
  },
  {
    "command": "think_limit",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Maximum think time in milliseconds, warning is printed if this is exceeded."
    }
  },
  {
    "command": "trusted_launch",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Trusted launch status"
    }
  },
  {
    "command": "tv_allow_autorecording_index",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "When >=0 restricts autorecording only to the specified TV index"
    }
  },
  {
    "command": "tv_allow_camera_man_steamid",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allows tournament production cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the camera man."
    }
  },
  {
    "command": "tv_allow_camera_man_steamid2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Allows tournament production tv cameraman to run csgo.exe -interactivecaster on SteamID 7650123456XXX and be the tv camera man."
    }
  },
  {
    "command": "tv_broadcast_keyframe_interval",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "release"
      ],
      "description": "The frequency, in seconds, of sending keyframes and delta fragments to the broadcast relay server"
    }
  },
  {
    "command": "tv_broadcast_keyframe_interval1",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "release"
      ],
      "description": "The frequency, in seconds, of sending keyframes and delta fragments to the broadcast1 relay server"
    }
  },
  {
    "command": "tv_broadcast_max_requests",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "release"
      ],
      "description": "Max number of broadcast http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped."
    }
  },
  {
    "command": "tv_broadcast_max_requests1",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "release"
      ],
      "description": "Max number of broadcast1 http requests in flight. If there is a network issue, the requests may start piling up, degrading server performance. If more than the specified number of requests are in flight, the new requests are dropped."
    }
  },
  {
    "command": "tv_broadcast_startup_resend_interval",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "release"
      ],
      "description": "The interval, in seconds, of re-sending startup data to the broadcast relay server (useful in case relay crashes, restarts or startup data http request fails)"
    }
  },
  {
    "command": "tv_broadcast_url",
    "consoleData": {
      "defaultValue": "http://localhost:8080",
      "flags": [
        "release"
      ],
      "description": "URL of the broadcast relay"
    }
  },
  {
    "command": "tv_broadcast_url1",
    "consoleData": {
      "defaultValue": "http://localhost:8080",
      "flags": [
        "release"
      ],
      "description": "URL of the broadcast relay1"
    }
  },
  {
    "command": "tv_chatgroupsize",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Set the default chat group size"
    }
  },
  {
    "command": "tv_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "SourceTV debug info."
    }
  },
  {
    "command": "tv_delay",
    "consoleData": {
      "defaultValue": "105",
      "flags": [
        "sv",
        "release"
      ],
      "description": "SourceTV broadcast delay in seconds"
    }
  },
  {
    "command": "tv_delay1",
    "consoleData": {
      "defaultValue": "15",
      "flags": [
        "sv",
        "release"
      ],
      "description": "SourceTV[instance 1] broadcast delay in seconds"
    }
  },
  {
    "command": "tv_deltacache",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "Enable delta entity bit stream cache"
    }
  },
  {
    "command": "tv_dispatchmode",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "release"
      ],
      "description": "Dispatch clients to relay proxies: 0=never, 1=if appropriate, 2=always"
    }
  },
  {
    "command": "tv_listen_voice_indices",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "user"
      ],
      "description": "Bitfield of playerslots to listen to voice messages from when connected to SourceTV, default is none"
    }
  },
  {
    "command": "tv_listen_voice_indices_h",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "user"
      ],
      "description": "High 32 bits of bitfield of playerslots to listen to voice messages from when connected to SourceTV, default is none"
    }
  },
  {
    "command": "tv_maxclients",
    "consoleData": {
      "defaultValue": "128",
      "flags": [
        "release"
      ],
      "description": "Maximum client number on SourceTV server."
    }
  },
  {
    "command": "tv_maxclients_relayreserved",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "This number of relay client connections are reserved for SourceTV relays."
    }
  },
  {
    "command": "tv_maxrate",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Max SourceTV spectator bandwidth rate allowed, 0 == unlimited"
    }
  },
  {
    "command": "tv_name",
    "consoleData": {
      "defaultValue": "SourceTV",
      "flags": [
        "release"
      ],
      "description": "SourceTV host name"
    }
  },
  {
    "command": "tv_password",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "prot",
        "nf",
        "norecord",
        "release"
      ],
      "description": "SourceTV password for all clients of CSTV[0]"
    }
  },
  {
    "command": "tv_password1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "prot",
        "nf",
        "norecord",
        "release"
      ],
      "description": "SourceTV password for all clients of CSTV[1]. If empty, tv_password is used"
    }
  },
  {
    "command": "tv_playcast_delay_resync",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "To alleviate intermittent network connectivity problems, this is the number of seconds to wait before actually re-syncing the stream after failure"
    }
  },
  {
    "command": "tv_playcast_retry_timeout",
    "consoleData": {
      "defaultValue": "25",
      "flags": [
        "release"
      ],
      "description": "In case of intermittent network problems, how long should playcast retry fragment retrieval before resorting to resync"
    }
  },
  {
    "command": "tv_port",
    "consoleData": {
      "defaultValue": "27020",
      "flags": [
        "release"
      ],
      "description": "Host SourceTV[0] port"
    }
  },
  {
    "command": "tv_port1",
    "consoleData": {
      "defaultValue": "27021",
      "flags": [
        "release"
      ],
      "description": "Host SourceTV[1] port"
    }
  },
  {
    "command": "tv_record_immediate",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "tv_record starting the moment tv_record was executed, not tv_delay earlier"
    }
  },
  {
    "command": "tv_relaypassword",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "prot",
        "nf",
        "norecord",
        "release"
      ],
      "description": "SourceTV password for relay proxies"
    }
  },
  {
    "command": "tv_spectator_port_offset",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "tv_timeout",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "release"
      ],
      "description": "SourceTV connection timeout in seconds."
    }
  },
  {
    "command": "tv_title",
    "consoleData": {
      "defaultValue": "SourceTV",
      "flags": [
        "release"
      ],
      "description": "Set title for SourceTV spectator UI"
    }
  },
  {
    "command": "tv_window_size",
    "consoleData": {
      "defaultValue": "16",
      "flags": [
        "release"
      ],
      "description": "Specifies the number of seconds worth of frames that the tv replay system should keep in memory. Increasing this greatly increases the amount of memory consumed by the TV system"
    }
  },
  {
    "command": "ui_deepstats_radio_heat_figurine",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_deepstats_radio_heat_tab",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_deepstats_radio_heat_team",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_deepstats_toplevel_mode",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_inspect_bkgnd_map_9CA40421",
    "consoleData": {
      "defaultValue": "warehouse",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Inspect background map"
    }
  },
  {
    "command": "ui_inventorysettings_recently_acknowledged",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_mainmenu_bkgnd_movie_9CA40421",
    "consoleData": {
      "defaultValue": "de_train",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Main menu background movie"
    }
  },
  {
    "command": "ui_nearbylobbies_filter3",
    "consoleData": {
      "defaultValue": "competitive",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_news_last_read_link",
    "consoleData": {
      "defaultValue": "https://www.counter-strike.net/newsentry/529852487375519751",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_notification_tb_snooze",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_custom_preset",
    "consoleData": {
      "defaultValue": "mg_de_inferno,mg_de_nuke,mg_de_overpass",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_directchallengekey",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_listen_casual",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_listen_competitive",
    "consoleData": {
      "defaultValue": "16",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_listen_cooperative",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_listen_deathmatch",
    "consoleData": {
      "defaultValue": "32",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_listen_scrimcomp2v2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_listen_skirmish",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_listen_survival",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_official_casual",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_official_competitive",
    "consoleData": {
      "defaultValue": "16",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_official_cooperative",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_official_deathmatch",
    "consoleData": {
      "defaultValue": "32",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_official_scrimcomp2v2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_official_skirmish",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_flags_official_survival",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_listen_annotations",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_listen_grenades",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_listen_infammo",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_listen_infwarmup",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_listen_casual",
    "consoleData": {
      "defaultValue": "mg_de_dust2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_listen_competitive",
    "consoleData": {
      "defaultValue": "mg_de_inferno",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_listen_deathmatch",
    "consoleData": {
      "defaultValue": "mg_de_dust2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_listen_scrimcomp2v2",
    "consoleData": {
      "defaultValue": "mg_de_inferno",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_listen_skirmish",
    "consoleData": {
      "defaultValue": "mg_skirmish_armsrace",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_official_casual",
    "consoleData": {
      "defaultValue": "mg_dust247",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_official_deathmatch",
    "consoleData": {
      "defaultValue": "mg_casualalpha",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_official_gungameprogressive",
    "consoleData": {
      "defaultValue": "mg_armsrace",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_maps_workshop",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_mode_listen",
    "consoleData": {
      "defaultValue": "competitive",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_mode_official_v20",
    "consoleData": {
      "defaultValue": "scrimcomp2v2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_survival_solo",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_playsettings_warmup_map_name",
    "consoleData": {
      "defaultValue": "de_mirage",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_popup_weaponupdate_version",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_render_task_clips_label",
    "consoleData": {
      "defaultValue": "dealt_damage",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_render_task_file",
    "consoleData": {
      "defaultValue": "rendertask",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_render_task_fps",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_setting_advertiseforhire_auto",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Whether users will automatically advertise for invites (0: off; 1: last; 2: auto)"
    }
  },
  {
    "command": "ui_setting_advertiseforhire_auto_last",
    "consoleData": {
      "defaultValue": "/competitive",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Which game mode users last used to advertise for invites"
    }
  },
  {
    "command": "ui_show_subscription_alert",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_show_unlock_competitive_alert",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_steam_overlay_notification_position",
    "consoleData": {
      "defaultValue": "bottomleft",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Steam overlay notification position"
    }
  },
  {
    "command": "ui_steam_overlay_notification_position_horz",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Steam overlay notification position horizontal offset"
    }
  },
  {
    "command": "ui_steam_overlay_notification_position_vert",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Steam overlay notification position vertical offset"
    }
  },
  {
    "command": "ui_vanitysetting_loadoutslot_ct",
    "consoleData": {
      "defaultValue": "rifle2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_vanitysetting_loadoutslot_t",
    "consoleData": {
      "defaultValue": "smg2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ui_vanitysetting_team",
    "consoleData": {
      "defaultValue": "ct",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "vconsole_rcon_server_details",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "norecord",
        "release",
        "server_cant_query"
      ],
      "description": "when non-empty allows for easy vconsole connection to the dedicated server."
    }
  },
  {
    "command": "view_punch_decay",
    "consoleData": {
      "defaultValue": "18",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": "Decay factor exponent for view punch"
    }
  },
  {
    "command": "viewmodel_fov",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "Viewmodel FOV"
    }
  },
  {
    "command": "viewmodel_offset_x",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "viewmodel_offset_x"
    }
  },
  {
    "command": "viewmodel_offset_y",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "viewmodel_offset_y"
    }
  },
  {
    "command": "viewmodel_offset_z",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "viewmodel_offset_z"
    }
  },
  {
    "command": "viewmodel_presetpos",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "1:'Desktop', 2:'Classic'"
    }
  },
  {
    "command": "vismon_trace_limit",
    "consoleData": {
      "defaultValue": "12",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "voice_device_override",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "a",
        "release"
      ],
      "description": "Default device used for voice capture."
    }
  },
  {
    "command": "voice_input_stallout",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "user"
      ],
      "description": "Time before we consider a mic stalled out and need to reset it."
    }
  },
  {
    "command": "voice_threshold",
    "consoleData": {
      "defaultValue": "-120",
      "flags": [
        "cl",
        "a"
      ],
      "description": "decibel threshold for how loud the talker's input signal is before we think they are talking."
    }
  },
  {
    "command": "voice_vox",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Voice chat uses a vox-style always on"
    }
  },
  {
    "command": "volume_fog_dither_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "vphys2_friction_factor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": "Change global friction factor"
    }
  },
  {
    "command": "vphys2_restitution_factor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": "Change global restitution factor"
    }
  },
  {
    "command": "weapon_accuracy_forcespread",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Force spread to the specified value."
    }
  },
  {
    "command": "weapon_air_spread_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Scale factor for jumping inaccuracy, set to 0 to make jumping accuracy equal to standing"
    }
  },
  {
    "command": "weapon_auto_cleanup_time",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If set to non-zero, weapons will delete themselves after the specified time (in seconds) if no players are near."
    }
  },
  {
    "command": "weapon_debug_spread_show",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat",
        "per_user"
      ],
      "description": "Enables display of weapon accuracy; 1: show accuracy box, 3: show accuracy with dynamic crosshair"
    }
  },
  {
    "command": "weapon_max_before_cleanup",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "If set to non-zero, will remove the oldest dropped weapon to maintain the specified number of dropped weapons in the world."
    }
  },
  {
    "command": "weapon_sound_falloff_multiplier",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat",
        "release"
      ],
      "description": "Scaling for falloff of weapon firing sounds"
    }
  },
  {
    "command": "zoom_sensitivity_ratio",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Additional mouse sensitivity scale factor applied when FOV is zoomed in."
    }
  },
  {
    "command": "c_maxdistance",
    "consoleData": {
      "defaultValue": "200",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_maxpitch",
    "consoleData": {
      "defaultValue": "90",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_maxyaw",
    "consoleData": {
      "defaultValue": "135",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_mindistance",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_minpitch",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_minyaw",
    "consoleData": {
      "defaultValue": "-135",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_orthoheight",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_orthowidth",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_thirdpersonshoulderaimdist",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_thirdpersonshoulderdist",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_thirdpersonshoulderheight",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "c_thirdpersonshoulderoffset",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "cam_collision",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "When in thirdperson and cam_collision is set to 1, an attempt is made to keep the camera from passing though walls."
    }
  },
  {
    "command": "cam_idealdelta",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Controls the speed when matching offset to ideal angles in thirdperson view"
    }
  },
  {
    "command": "cam_idealdist",
    "consoleData": {
      "defaultValue": "150",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "cam_ideallag",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Amount of lag used when matching offset to ideal angles in thirdperson view"
    }
  },
  {
    "command": "cam_idealpitch",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "cam_idealyaw",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_bomb_defused",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_bomb_planted",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_damage_hostage",
    "consoleData": {
      "defaultValue": "-30",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_get_killed",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_interact_with_hostage",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_killed_enemy_default",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_killed_enemy_factor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_killed_hostage",
    "consoleData": {
      "defaultValue": "-1000",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_killed_teammate",
    "consoleData": {
      "defaultValue": "-300",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_rescued_hostage",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_player_respawn_amount",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_bonus_shorthanded",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_elimination_bomb_map",
    "consoleData": {
      "defaultValue": "3250",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_elimination_hostage_map_ct",
    "consoleData": {
      "defaultValue": "3000",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_elimination_hostage_map_t",
    "consoleData": {
      "defaultValue": "3000",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_hostage_alive",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_hostage_interaction",
    "consoleData": {
      "defaultValue": "600",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_loser_bonus",
    "consoleData": {
      "defaultValue": "1400",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_loser_bonus_consecutive_rounds",
    "consoleData": {
      "defaultValue": "500",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_per_dead_enemy",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_planted_bomb_but_defused",
    "consoleData": {
      "defaultValue": "600",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_rescued_hostage",
    "consoleData": {
      "defaultValue": "600",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_terrorist_win_bomb",
    "consoleData": {
      "defaultValue": "3500",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_win_by_defusing_bomb",
    "consoleData": {
      "defaultValue": "3500",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_win_by_hostage_rescue",
    "consoleData": {
      "defaultValue": "2900",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_win_by_time_running_out_bomb",
    "consoleData": {
      "defaultValue": "3250",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_win_by_time_running_out_hostage",
    "consoleData": {
      "defaultValue": "3250",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cash_team_winner_bonus_consecutive_rounds",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "nf",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cc_lang",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Current close caption language (emtpy = use game UI language)"
    }
  },
  {
    "command": "cc_linger_time",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Close caption linger time."
    }
  },
  {
    "command": "cc_vr_caption_speed",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "0 = slow, 1 = medium (default), 2 = fast"
    }
  },
  {
    "command": "cc_vr_font_size",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "0 = small, 1 = med (default), 2 = large"
    }
  },
  {
    "command": "cc_vr_width",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "0 = narrow, 1 = med (default), 2 = wide"
    }
  },
  {
    "command": "cl_autobuy",
    "consoleData": {
      "defaultValue": "vesthelm vest m4a1 ak47 famas galilar mp7 nova defuser",
      "flags": [
        "cl",
        "release"
      ],
      "description": "The order in which autobuy will attempt to purchase items"
    }
  },
  {
    "command": "cl_borrow_music_from_player_slot",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_buymenu_ct_nextround_high",
    "consoleData": {
      "defaultValue": "5000",
      "flags": [
        "cl",
        "a",
        "per_user",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_buymenu_ct_nextround_low",
    "consoleData": {
      "defaultValue": "1400",
      "flags": [
        "cl",
        "a",
        "per_user",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_buymenu_t_nextround_high",
    "consoleData": {
      "defaultValue": "5000",
      "flags": [
        "cl",
        "a",
        "per_user",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_buymenu_t_nextround_low",
    "consoleData": {
      "defaultValue": "1400",
      "flags": [
        "cl",
        "a",
        "per_user",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_buywheel_donate_key",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "per_user",
        "release"
      ],
      "description": "Set the key to use for donation in the buy menu. 0: Left Control; 1: Left Alt; 2: Left Shift."
    }
  },
  {
    "command": "cl_clock_recvmargin_spew_interval",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_clockdrift_max_ticks",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "cheat"
      ],
      "description": "Maximum number of ticks the clock is allowed to drift before the client snaps its clock to the server's."
    }
  },
  {
    "command": "cl_color",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "user"
      ],
      "description": "Preferred teammate color"
    }
  },
  {
    "command": "cl_connectionretrytime_p2p",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "release"
      ],
      "description": "Number of seconds over which to spread retry attempts for P2P."
    }
  },
  {
    "command": "cl_cq_min_queue",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "user"
      ],
      "description": "Used by the client to inform the server of their desired queue length.  Derived from cl_tickpacket_recvmargin_desired and cl_tickpacket_desired_queuelength"
    }
  },
  {
    "command": "cl_crosshair_dynamic_splitalpha_innermod",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "If using cl_crosshairstyle 2, this is the alpha modification that will be used for the INNER crosshair pips once they've split. [0 - 1]"
    }
  },
  {
    "command": "cl_crosshair_dynamic_splitdist",
    "consoleData": {
      "defaultValue": "7",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "If using cl_crosshairstyle 2, this is the distance that the crosshair pips will split into 2. (default is 7)"
    }
  },
  {
    "command": "cl_crosshair_friendly_warning",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "0: off, 1: on"
    }
  },
  {
    "command": "cl_crosshair_outlinethickness",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Set how thick you want your crosshair outline to draw (0-3)"
    }
  },
  {
    "command": "cl_crosshair_sniper_width",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "If >1 sniper scope cross lines gain extra width (1 for single-pixel hairline)"
    }
  },
  {
    "command": "cl_crosshairalpha",
    "consoleData": {
      "defaultValue": "200",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_crosshaircolor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "Set crosshair color as defined in game_options.consoles.txt"
    }
  },
  {
    "command": "cl_crosshaircolor_b",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_crosshaircolor_g",
    "consoleData": {
      "defaultValue": "250",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_crosshaircolor_r",
    "consoleData": {
      "defaultValue": "50",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_crosshairgap",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_crosshairsize",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_crosshairstyle",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "0 = DEFAULT (DISABLED), 1 = DEFAULT STATIC (DISABLED), 2 = DEFAULT (accurate recoil/spread feedback with a fixed inner part), 3 = ACCURATE DYNAMIC (DISABLED) (accurate recoil/spread feedback), 4 = DEFAULT STATIC, 5 = LEGACY (fake recoil - inaccurate feedback)"
    }
  },
  {
    "command": "cl_cursor_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "a"
      ],
      "description": "Cursor size scaling factor."
    }
  },
  {
    "command": "cl_dangerzone_approaching_sound_radius",
    "consoleData": {
      "defaultValue": "700",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_deathcam_audio_mix_phase1_fade_time",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Sets the amount of time we fade out over."
    }
  },
  {
    "command": "cl_deathcampanel_position_dynamic",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Turn on/off deathcam's kill panel dynamic Y movement"
    }
  },
  {
    "command": "cl_deathnotices_show_numbers",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "0: default; 1: draw names as just numbers; 2: append number on killer and victim to the name"
    }
  },
  {
    "command": "cl_drawhud_force_deathnotices",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "0: default; 1: draw deathnotices even if hud disabled; -1: force no deathnotices"
    }
  },
  {
    "command": "cl_drawhud_force_radar",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "0: default; 1: draw radar even if hud disabled; -1: force no radar"
    }
  },
  {
    "command": "cl_drawhud_force_teamid_overhead",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "0: default; 1: draw teamid even if hud disabled; -1: force no teamid"
    }
  },
  {
    "command": "cl_ent_pivot_size",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "cl",
        "a",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_ent_showonlyattachment",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_ent_showonlyhitbox",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_ent_text_flags_active",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "a",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_error_report_time",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Minimum time in seconds that must elapse before printing prediction error summary. 0 to disable."
    }
  },
  {
    "command": "cl_fixedcrosshairgap",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "For crosshair style 1: How big to make the gap between the pips in the fixed crosshair"
    }
  },
  {
    "command": "cl_flushentitypacket",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": "For debugging. Force the engine to flush an entity packet."
    }
  },
  {
    "command": "cl_glow_brightness",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Brightness of player halos"
    }
  },
  {
    "command": "cl_glow_item_far_b",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_grenadecrosshairdelay_decoy",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "How long should the pin be pulled for before showing the grenade crosshair"
    }
  },
  {
    "command": "cl_grenadecrosshairdelay_explosive",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "How long should the pin be pulled for before showing the grenade crosshair"
    }
  },
  {
    "command": "cl_grenadecrosshairdelay_fire",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "How long should the pin be pulled for before showing the grenade crosshair"
    }
  },
  {
    "command": "cl_grenadecrosshairdelay_flash",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "How long should the pin be pulled for before showing the grenade crosshair"
    }
  },
  {
    "command": "cl_grenadecrosshairdelay_smoke",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "per_user"
      ],
      "description": "How long should the pin be pulled for before showing the grenade crosshair"
    }
  },
  {
    "command": "cl_hide_avatar_images",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Hide avatar images for other players.   0 - Off.  1 - Block All  2 - Block all but friends"
    }
  },
  {
    "command": "cl_hud_color",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "0 = team color, 1 =  white, 2 = bright white, 3 = light blue, 4 = blue, 5 = purple, 6 = red, 7 = orange, 8 = yellow, 9 = green, 10 = aqua, 11 = pink, 12 = teammate color."
    }
  },
  {
    "command": "cl_hud_radar_scale",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_hud_telemetry_frametime_poor",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Frame time greater than this is considered 'poor'."
    }
  },
  {
    "command": "cl_hud_telemetry_frametime_show",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Show frame time (FPS) in the HUD.  0=never, 1=only if poor, 2=always"
    }
  },
  {
    "command": "cl_hud_telemetry_net_detailed",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Show breakdown network misdelivery (loss, late delivery, and peak jitter).  0=never, 1=only in poor network conditions, 2=always"
    }
  },
  {
    "command": "cl_hud_telemetry_net_misdelivery_poor",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Packet delivery anomaly rate (0..100) higher than this is considered 'poor'."
    }
  },
  {
    "command": "cl_hud_telemetry_net_misdelivery_show",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Show percentage of user commands & server snapshots that are missed due to network conditions.  0=never, 1=only in poor conditions, 2=always"
    }
  },
  {
    "command": "cl_hud_telemetry_net_quality_graph_show",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Show packet jitter and netframe loss/reordering in the HUD.  0=never, 1=only in poor conditions, 2=always"
    }
  },
  {
    "command": "cl_hud_telemetry_ping_poor",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Ping higher than this (ms) is considered 'poor'."
    }
  },
  {
    "command": "cl_hud_telemetry_ping_show",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Show ping in the HUD.  0=never, 1=only in poor conditions, 2=always"
    }
  },
  {
    "command": "cl_hud_telemetry_serverrecvmargin_graph_show",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Show graph of the server recv margin in the HUD.  (How early/late user commands are arriving at the server before they are executed.)   0=never, 1=only when there are command queue problems, 2=always"
    }
  },
  {
    "command": "cl_interp_ratio",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "user"
      ],
      "description": "Set number of client simulation interpolation ticks."
    }
  },
  {
    "command": "cl_inventory_saved_filter2",
    "consoleData": {
      "defaultValue": "all",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_inventory_saved_sort2",
    "consoleData": {
      "defaultValue": "inv_sort_age",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_itemimages_dynamically_generated",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "2: use render-targets, fallback to cache and disk; 1: no render targets, but use cache and fallback to disk; 0: disk assets only"
    }
  },
  {
    "command": "cl_jitter_bad_threshold_up",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "user"
      ],
      "description": "When upstream packet jitter in a frame exceeds this threshold (ms), the frame is considered to have 'irregular delivery'.  This is a derived value and should not be modified manually"
    }
  },
  {
    "command": "cl_join_advertise",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Advertise joinable game in progress to Steam friends, otherwise need a Steam invite (2: all servers, 1: official servers, 0: none)"
    }
  },
  {
    "command": "cl_leveloverview",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_loadout_saved_sort",
    "consoleData": {
      "defaultValue": "inv_sort_age",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_max_particle_pvs_aabb_edge_length",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_mute_all_but_friends_and_party",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Only allow communication from friends and matchmaking party members. Set to 1 to apply the in non-competitive game modes. Set to 2 will apply the setting in all modes."
    }
  },
  {
    "command": "cl_net_buffer_ticks",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Number of ticks of delay for server snapshots and user commands.  This value controls the value of cl_interp_ratio, which you should not modify directly."
    }
  },
  {
    "command": "cl_new_user_phase",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "0: Not Started, 1: Needs Training, 2: Training Complete, -1: Disabled"
    }
  },
  {
    "command": "cl_observed_bot_crosshair",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Control the crosshair shown when observing a bot. 0: Show player crosshair. 1: Show player crosshair only when bot can be taken over, otherwise show default.. 2: Always show default crosshair for bots."
    }
  },
  {
    "command": "cl_paintkit_override",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_particle_retire_cost",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_pclass",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Dump entity by prediction classname."
    }
  },
  {
    "command": "cl_pdump",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": "Dump info about this entity to screen."
    }
  },
  {
    "command": "cl_phys_stop_at_collision",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_ping_fade_deadzone",
    "consoleData": {
      "defaultValue": "60",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Distance from the crosshair over which the ping is completely invisible"
    }
  },
  {
    "command": "cl_ping_fade_distance",
    "consoleData": {
      "defaultValue": "300",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Distance from the crosshair over which the ping fades"
    }
  },
  {
    "command": "cl_pitchdown",
    "consoleData": {
      "defaultValue": "89",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_pitchup",
    "consoleData": {
      "defaultValue": "89",
      "flags": [
        "cl",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_player_ping_mute",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "If 1, player pinging will make a sound, if 0, pings will be silent"
    }
  },
  {
    "command": "cl_promoted_settings_acknowledged",
    "consoleData": {
      "defaultValue": "1:1739182228855",
      "flags": [
        "cl",
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_quickinventory_filename",
    "consoleData": {
      "defaultValue": "radial_quickinventory.txt",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_quickinventory_line_update_speed",
    "consoleData": {
      "defaultValue": "65",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radar_scale_alternate",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Sets the alternate radar scale. Valid values are 0.25 to 1.0."
    }
  },
  {
    "command": "cl_radial_radio_tab",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_0_text_1",
    "consoleData": {
      "defaultValue": "#Chatwheel_requestspend",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_0_text_2",
    "consoleData": {
      "defaultValue": "#Chatwheel_requestweapon",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_0_text_3",
    "consoleData": {
      "defaultValue": "#Chatwheel_bplan",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_0_text_4",
    "consoleData": {
      "defaultValue": "#Chatwheel_followingyou",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_0_text_5",
    "consoleData": {
      "defaultValue": "#Chatwheel_midplan",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_0_text_6",
    "consoleData": {
      "defaultValue": "#Chatwheel_followme",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_0_text_7",
    "consoleData": {
      "defaultValue": "#Chatwheel_aplan",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_0_text_8",
    "consoleData": {
      "defaultValue": "#Chatwheel_requestecoround",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_1_text_1",
    "consoleData": {
      "defaultValue": "#Chatwheel_enemyspotted",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_1_text_2",
    "consoleData": {
      "defaultValue": "#Chatwheel_needbackup",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_1_text_3",
    "consoleData": {
      "defaultValue": "#Chatwheel_bplan",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_1_text_4",
    "consoleData": {
      "defaultValue": "#Chatwheel_bombcarrierspotted",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_1_text_5",
    "consoleData": {
      "defaultValue": "#Chatwheel_multipleenemieshere",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_1_text_6",
    "consoleData": {
      "defaultValue": "#Chatwheel_sniperspotted",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_1_text_7",
    "consoleData": {
      "defaultValue": "#Chatwheel_aplan",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_1_text_8",
    "consoleData": {
      "defaultValue": "#Chatwheel_inposition",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_2_text_1",
    "consoleData": {
      "defaultValue": "#Chatwheel_affirmative",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_2_text_2",
    "consoleData": {
      "defaultValue": "#Chatwheel_negative",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_2_text_3",
    "consoleData": {
      "defaultValue": "#Chatwheel_compliment",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_2_text_4",
    "consoleData": {
      "defaultValue": "#Chatwheel_thanks",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_2_text_5",
    "consoleData": {
      "defaultValue": "#Chatwheel_cheer",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_2_text_6",
    "consoleData": {
      "defaultValue": "#Chatwheel_peptalk",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_2_text_7",
    "consoleData": {
      "defaultValue": "#Chatwheel_sorry",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_tab_2_text_8",
    "consoleData": {
      "defaultValue": "#Chatwheel_sectorclear",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_radial_radio_version_reset",
    "consoleData": {
      "defaultValue": "12",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_ragdoll_limit",
    "consoleData": {
      "defaultValue": "20",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Maximum number of ragdolls to show (-1 disables limit)"
    }
  },
  {
    "command": "cl_ragdoll_workaround_threshold",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Mainly cosmetic, client-only effect: when client doesn't know the last position of another player that spawns a ragdoll, the ragdoll creation is simplified and ragdoll is created in the right place. If you increase this significantly, ragdoll positions on your client may be dramatically wrong, but it won't affect other clients"
    }
  },
  {
    "command": "cl_rebuy",
    "consoleData": {
      "defaultValue": "Armor PrimaryWeapon Flashbang SmokeGrenade Defuser HEGrenade Flashbang SecondaryWeapon Molotov IncGrenade Decoy Taser",
      "flags": [
        "cl",
        "release"
      ],
      "description": "The order in which rebuy will attempt to repurchase items"
    }
  },
  {
    "command": "cl_redemption_reset_timestamp",
    "consoleData": {
      "defaultValue": "1753291187",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_scoreboard_mouse_enable_binding",
    "consoleData": {
      "defaultValue": "+attack2",
      "flags": [
        "cl",
        "a"
      ],
      "description": "Name of the binding to enable mouse selection in the scoreboard"
    }
  },
  {
    "command": "cl_show_observer_crosshair",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Show the crosshair of the player being observed. 0: off 1: friends and party 2: everyone"
    }
  },
  {
    "command": "cl_showerror",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Show prediction errors, 2 for above plus detailed field deltas, 3 to filter out serverside known prediction errors, -entindex for specific entity."
    }
  },
  {
    "command": "cl_showfps",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Draw fps meter at top of screen (1 = fps, 2 = smooth fps, 3 = server MS, 4 = Show FPS and Log to file )"
    }
  },
  {
    "command": "cl_showmem",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Draw approximate memory use at top of screen"
    }
  },
  {
    "command": "cl_showpos",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": "Draw current position at top of screen"
    }
  },
  {
    "command": "cl_silencer_mode",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "a",
        "user",
        "per_user"
      ],
      "description": "0: cannot detach; 1: press secondary fire to detach"
    }
  },
  {
    "command": "cl_teamid_overhead_maxdist",
    "consoleData": {
      "defaultValue": "6000",
      "flags": [
        "cl",
        "cheat",
        "per_user"
      ],
      "description": "max distance at which the overhead team id icons will show"
    }
  },
  {
    "command": "cl_teamid_overhead_maxdist_spec",
    "consoleData": {
      "defaultValue": "4000",
      "flags": [
        "cl",
        "cheat",
        "per_user"
      ],
      "description": "max distance at which the overhead team id icons will show when a spectator"
    }
  },
  {
    "command": "cl_teamid_overhead_mode",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "Always show team id over teammates. 0 = off, 1 = pips; 2 = +name, 3 = +equipment"
    }
  },
  {
    "command": "cl_teammate_colors_show",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cl",
        "a",
        "release"
      ],
      "description": "In competitive, 1 = show teammates as separate colors in the radar, scoreboard, etc., 2 = show colors and letters"
    }
  },
  {
    "command": "cl_tickpacket_desired_queuelength",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "user"
      ],
      "description": "This value, multiplied by the tick interval, is added to cl_tickpacket_recvmargin_desired to obtain the effective desired recv margin."
    }
  },
  {
    "command": "cl_tickpacket_recvmargin_spew_interval",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_ticks_net_print_threshold",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "release"
      ],
      "description": "Print a message if network issues cause problems with server snapshots of user commands not being available when needed, if the percentage (0...100) exceeds this value.  A value of 0 will cause the message to always print each time it is calculated"
    }
  },
  {
    "command": "cl_ticks_warning_level",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "Print a message about problems with ticks and interpolation.  0=never, 1=warnings, 2=all, even if hidden by interpolation"
    }
  },
  {
    "command": "cl_timeout",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "a"
      ],
      "description": "After this many seconds without receiving a packet from the server, the client will disconnect itself"
    }
  },
  {
    "command": "cl_usercmd_max_per_movemsg",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "release"
      ],
      "description": "max number of CUserCmds to send in one client move message"
    }
  },
  {
    "command": "cl_wallbang_heavy_threshold",
    "consoleData": {
      "defaultValue": "22",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": "The Threshold where to switch from Light to Heavy Wallbang tracer"
    }
  },
  {
    "command": "cl_weapon_clip_thinwalls_pitchlimit_down",
    "consoleData": {
      "defaultValue": "67",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_weapon_clip_thinwalls_pitchlimit_up",
    "consoleData": {
      "defaultValue": "77",
      "flags": [
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cl_weapon_debug_show_accuracy",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": "Draws a circle representing the effective range with every shot."
    }
  },
  {
    "command": "cl_weapon_debug_show_accuracy_duration",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "cl",
        "cheat",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "clientport",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "release"
      ],
      "description": "If non-zero, client binds port to specific address.  Usually you should leave this blank to use a different random system-assigned port for each connection."
    }
  },
  {
    "command": "contributionscore_assist",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added for an assist"
    }
  },
  {
    "command": "contributionscore_assist_reqs",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "extra requirements to earn contribution score for an assist"
    }
  },
  {
    "command": "contributionscore_bomb_defuse_major",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for defusing a bomb while at least one enemy remains alive"
    }
  },
  {
    "command": "contributionscore_bomb_defuse_minor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for defusing a bomb after eliminating enemy team"
    }
  },
  {
    "command": "contributionscore_bomb_exploded",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score awarded to bomb planter and terrorists remaining alive if bomb explosion wins the round"
    }
  },
  {
    "command": "contributionscore_bomb_planted",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for planting a bomb"
    }
  },
  {
    "command": "contributionscore_cash_bundle",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for picking up a cash bundle"
    }
  },
  {
    "command": "contributionscore_crate_break",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for breaking an item crate"
    }
  },
  {
    "command": "contributionscore_hostage_kill",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for killing a hostage, normally negative"
    }
  },
  {
    "command": "contributionscore_hostage_rescue_major",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added to rescuer per hostage rescued"
    }
  },
  {
    "command": "contributionscore_hostage_rescue_minor",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added to all alive CTs per hostage rescued"
    }
  },
  {
    "command": "contributionscore_kill",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added for a kill"
    }
  },
  {
    "command": "contributionscore_kill_factor",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "percentage of victim's contribution score to award to their killer as a bonus"
    }
  },
  {
    "command": "contributionscore_kill_reqs",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "release"
      ],
      "description": "extra requirements to earn contribution score for a kill"
    }
  },
  {
    "command": "contributionscore_objective_kill",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score added for an objective related kill"
    }
  },
  {
    "command": "contributionscore_participation",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score awarded to players for active participation in the round"
    }
  },
  {
    "command": "contributionscore_suicide",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for a suicide, normally negative"
    }
  },
  {
    "command": "contributionscore_team_kill",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "amount of contribution score for a team kill, normally negative"
    }
  },
  {
    "command": "cq_buffer_bloat_msecs_max",
    "consoleData": {
      "defaultValue": "64",
      "flags": [
        "rep",
        "release"
      ],
      "description": "Server will not allow the client to buffer up more than N ms of commands."
    }
  },
  {
    "command": "cq_logging_interval",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "command queue logging per player stats every N seconds, 0 to disable."
    }
  },
  {
    "command": "cq_max_starved_substitute_commands",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Server will stop generating substitute commands if client hasn't sent one, after N in a row"
    }
  },
  {
    "command": "cs_hostage_near_rescue_music_distance",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "cs_logtouchexpansion",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "cs_logtouchexpansion <ent index or -1 for all>. Log player touch expansion component."
    }
  },
  {
    "command": "cs_minimap_create_output_size",
    "consoleData": {
      "defaultValue": "960",
      "flags": [
        "cl",
        "release"
      ],
      "description": "Size of minimap texture generated with cs_minimap_create (512 default)"
    }
  },
  {
    "command": "cs_ShowStateTransitions",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "cs_ShowStateTransitions <ent index or -1 for all>. Show player state transitions."
    }
  },
  {
    "command": "CS_WarnFriendlyDamageInterval",
    "consoleData": {
      "defaultValue": "3",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Defines how frequently the server notifies clients that a player damaged a friend"
    }
  },
  {
    "command": "csgo_fatdemo_output",
    "consoleData": {
      "defaultValue": "test.fatdem",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_bias_override_0",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_bias_override_1",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_bias_override_2",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_bias_override_3",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_cascade0_override_dist",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_cascade1_override_dist",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_cascade2_override_dist",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_cascade3_override_dist",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_cascade_viewdir_shadow_bias_scale",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_max_dist_between_caster_and_receiver",
    "consoleData": {
      "defaultValue": "15000",
      "flags": [
        "cheat"
      ],
      "description": "default pushback"
    }
  },
  {
    "command": "csm_max_visible_dist",
    "consoleData": {
      "defaultValue": "7500",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_res_override_0",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_res_override_1",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_res_override_2",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_res_override_3",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_sst_max_visible_dist",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_sst_pushback_distance",
    "consoleData": {
      "defaultValue": "1500",
      "flags": [
        "cheat"
      ],
      "description": "default pushback"
    }
  },
  {
    "command": "csm_sst_shadow_focus_region_maxz",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_sst_shadow_focus_region_minz",
    "consoleData": {
      "defaultValue": "-2000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_viewdir_shadow_bias",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_viewmodel_farz",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_viewmodel_max_shadow_dist",
    "consoleData": {
      "defaultValue": "21",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "csm_viewmodel_max_visible_dist",
    "consoleData": {
      "defaultValue": "1000",
      "flags": [
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "custom_bot_difficulty",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Bot difficulty for offline play."
    }
  },
  {
    "command": "cv_bot_ai_bt_debug_target",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "rep",
        "cheat"
      ],
      "description": "Draw the behavior tree of the given bot."
    }
  },
  {
    "command": "bot_autodifficulty_threshold_high",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Upper bound above Average Human Contribution Score that a bot must be above to change its difficulty"
    }
  },
  {
    "command": "bot_autodifficulty_threshold_low",
    "consoleData": {
      "defaultValue": "-2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": "Lower bound below Average Human Contribution Score that a bot must be below to change its difficulty"
    }
  },
  {
    "command": "bot_chatter",
    "consoleData": {
      "defaultValue": "normal",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Control how bots talk. Allowed values: 'off', 'radio', 'minimal', or 'normal'."
    }
  },
  {
    "command": "bot_coop_idle_max_vision_distance",
    "consoleData": {
      "defaultValue": "1400",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Max distance bots can see targets (in coop) when they are idle, dormant, hiding or asleep."
    }
  },
  {
    "command": "bot_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For internal testing purposes."
    }
  },
  {
    "command": "bot_debug_target",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For internal testing purposes."
    }
  },
  {
    "command": "bot_difficulty",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Defines the skill of bots joining the game.  Values are: 0=easy, 1=normal, 2=hard, 3=expert."
    }
  },
  {
    "command": "bot_eco_limit",
    "consoleData": {
      "defaultValue": "2000",
      "flags": [
        "sv",
        "release"
      ],
      "description": "If nonzero, bots will not buy if their money falls below this amount."
    }
  },
  {
    "command": "bot_join_team",
    "consoleData": {
      "defaultValue": "any",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines the team bots will join into. Allowed values: 'any', 'T', or 'CT'."
    }
  },
  {
    "command": "bot_loadout",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "bots are given these items at round start"
    }
  },
  {
    "command": "bot_max_visible_smoke_length",
    "consoleData": {
      "defaultValue": "200",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Bots will see players through smoke clouds up to this length."
    }
  },
  {
    "command": "bot_max_vision_distance_override",
    "consoleData": {
      "defaultValue": "-1",
      "flags": [
        "sv",
        "rep",
        "release"
      ],
      "description": "Max distance bots can see targets."
    }
  },
  {
    "command": "bot_mimic",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "Bot uses usercmd of player by index."
    }
  },
  {
    "command": "bot_mimic_yaw_offset",
    "consoleData": {
      "defaultValue": "180",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "bot_prefix",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "release"
      ],
      "description": "This string is prefixed to the name of all bots that join the game. <difficulty> will be replaced with the bot's difficulty. <weaponclass> will be replaced with the bot's desired weapon class. <skill> will be replaced with a 0-100 representation of the bot's skill."
    }
  },
  {
    "command": "bot_quota",
    "consoleData": {
      "defaultValue": "10",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines the total number of bots in the game."
    }
  },
  {
    "command": "bot_quota_mode",
    "consoleData": {
      "defaultValue": "fill",
      "flags": [
        "sv",
        "release"
      ],
      "description": "Determines the type of quota. Allowed values: 'normal', 'fill', and 'match'. If 'fill', the server will adjust bots to keep N players in the game, where N is bot_quota. If 'match', the server will maintain a 1:N ratio of humans to bots, where N is bot_quota."
    }
  },
  {
    "command": "bot_stop",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "bot_stop <1|all> | <not_bomber> | <t> | <ct>"
    }
  },
  {
    "command": "bot_traceview",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "For internal testing purposes."
    }
  },
  {
    "command": "buddha_reset_hp",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "nf",
        "cheat"
      ],
      "description": "HP to set when damaged below zero in Buddha Mode"
    }
  },
  {
    "command": "bug_submitter_override",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "adsp_debug",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "a"
      ],
      "description": ""
    }
  },
  {
    "command": "ai_debug_dyninteractions",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "Debug the NPC dynamic interaction system."
    }
  },
  {
    "command": "ai_debug_los",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cheat"
      ],
      "description": "NPC Line-Of-Sight debug mode. If 1, solid entities that block NPC LOC will be highlighted with white bounding boxes. If 2, it'll show non-solid entities that would do it if they were solid."
    }
  },
  {
    "command": "ai_debug_shoot_positions",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_338mag_max",
    "consoleData": {
      "defaultValue": "30",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_357sig_max",
    "consoleData": {
      "defaultValue": "52",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_357sig_min_max",
    "consoleData": {
      "defaultValue": "12",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_357sig_p250_max",
    "consoleData": {
      "defaultValue": "26",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_357sig_small_max",
    "consoleData": {
      "defaultValue": "24",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_45acp_max",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_50AE_max",
    "consoleData": {
      "defaultValue": "35",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_556mm_box_max",
    "consoleData": {
      "defaultValue": "200",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_556mm_max",
    "consoleData": {
      "defaultValue": "90",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_556mm_small_max",
    "consoleData": {
      "defaultValue": "40",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_57mm_max",
    "consoleData": {
      "defaultValue": "100",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_762mm_max",
    "consoleData": {
      "defaultValue": "90",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_9mm_max",
    "consoleData": {
      "defaultValue": "120",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_buckshot_max",
    "consoleData": {
      "defaultValue": "32",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_grenade_limit_default",
    "consoleData": {
      "defaultValue": "1",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_grenade_limit_flashbang",
    "consoleData": {
      "defaultValue": "2",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_grenade_limit_total",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_item_limit_adrenaline",
    "consoleData": {
      "defaultValue": "5",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "ammo_item_limit_healthshot",
    "consoleData": {
      "defaultValue": "4",
      "flags": [
        "sv",
        "cl",
        "rep",
        "release"
      ],
      "description": ""
    }
  },
  {
    "command": "animgraph_debug_entindex",
    "consoleData": {
      "defaultValue": "0",
      "flags": [
        "sv",
        "cl",
        "rep",
        "cheat"
      ],
      "description": "The entity to specifically debug"
    }
  }
]